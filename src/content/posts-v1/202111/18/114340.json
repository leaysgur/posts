{
  "title": "Cloudflare Workers Sitesと、Cloudflare Pagesのパフォーマンス比較",
  "html": "<p>なんとなく気になったので、軽く手元で試した。</p><p>ので、ついでに書いておく。<br />\n<br />\n<br />\n</p>\n\n<div class=\"section\">\n    <h3>なぜ比較したのか</h3>\n    \n<ul>\n<li>Workers Sites: Workerでリク<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%A5%A8%A5%B9\">エス</a>トを受けて、KVからキャッシュを読み出して返す</li>\n<li>Pages: <a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/CDN\">CDN</a>そのままに静的なコンテンツを返す</li>\n</ul><p>前者の場合、読みだしたHTMLの加工もできるので、エッジベースの<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%A5%A2%A1%BC%A5%AD%A5%C6%A5%AF%A5%C1%A5%E3\">アーキテクチャ</a>を考えるにあたってそれを検討したかった。</p><p>もちろんその動的な処理をする分だけパフォーマンスは落ちるはずやけど、その前処理である単に静的なコンテンツを返すだけの部分でも、実は有意な差があったりせんかな？と。</p><p>というわけで用意したのがこの<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%A5%EA%A5%DD%A5%B8%A5%C8%A5%EA\">リポジトリ</a>。</p>\n\n    <blockquote>\n        <p><a href=\"https://github.com/leader22/perf-cloudflare-workers-sites-vs-cloudflare-pages\">GitHub - leader22/perf-cloudflare-workers-sites-vs-cloudflare-pages</a></p>\n\n    </blockquote>\n\n<ul>\n<li>Workers: Workers Sitesのテンプレを使ってデプロイ</li>\n<li>Pages: そのままGitで連携してデプロイ</li>\n</ul><p>そしてそれぞれに、`autocannon`でリク<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%A5%A8%A5%B9\">エス</a>トしてみた。おそらくどっちも日本・東京のエッジで処理されたはず。</p>\n\n</div>\n<div class=\"section\">\n    <h3>結果</h3>\n    <p><a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%A5%EA%A5%DD%A5%B8%A5%C8%A5%EA\">リポジトリ</a>のREADMEにあるやつを抜粋して並べると、こう。</p><p>Workersの結果。</p>\n<pre class=\"code\" data-lang=\"\" data-unlink>┌─────────┬───────┬───────┬───────┬───────┬──────────┬──────────┬─────────┐\n│ Stat    │ 2.5%  │ 50%   │ 97.5% │ 99%   │ Avg      │ Stdev    │ Max     │\n├─────────┼───────┼───────┼───────┼───────┼──────────┼──────────┼─────────┤\n│ Latency │ 26 ms │ 33 ms │ 57 ms │ 71 ms │ 39.08 ms │ 59.56 ms │ 1141 ms │\n└─────────┴───────┴───────┴───────┴───────┴──────────┴──────────┴─────────┘</pre><p>Pagesの結果。</p>\n<pre class=\"code\" data-lang=\"\" data-unlink>┌─────────┬───────┬───────┬───────┬───────┬──────────┬──────────┬────────┐\n│ Stat    │ 2.5%  │ 50%   │ 97.5% │ 99%   │ Avg      │ Stdev    │ Max    │\n├─────────┼───────┼───────┼───────┼───────┼──────────┼──────────┼────────┤\n│ Latency │ 24 ms │ 32 ms │ 58 ms │ 78 ms │ 35.24 ms │ 20.78 ms │ 664 ms │\n└─────────┴───────┴───────┴───────┴───────┴──────────┴──────────┴────────┘</pre><p>というわけで、</p>\n\n<ul>\n<li>Workesが思ってたよりも速い\n<ul>\n<li>ただしなんかムラっけがありそう</li>\n</ul></li>\n<li>平均ではやはりPagesのほうが速いし安定感ある</li>\n</ul><p>Workersってほんと速いんやな・・ってことが改めてわかったので、個人的には満足だった。</p><p>ただしPagesから<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/API\">API</a>が使えるようになった今、Workers Sitesでがんばる道は本当にあるのだろうか・・・って気持ちはある 😇</p>\n\n    <blockquote>\n        <p><a href=\"https://blog.cloudflare.com/cloudflare-pages-goes-full-stack/\">Cloudflare Pages Goes Full Stack</a></p>\n\n    </blockquote>\n\n</div>"
}
