{
  "title": "Chart.jsのレーダーチャートのオプション",
  "html": "<p>なんか最近流行ってますね。</p>\n\n    <blockquote>\n        <p>参考：<a href=\"http://www.chartjs.org/\" target=\"_blank\" title=\"Chart.js | HTML5 Charts for your website.\">Chart.js | HTML5 Charts for your website.</a></p>\n\n    </blockquote>\n<p>ちょっと最近使う用事があったときに、オプションで戸惑ったのでそのメモを。<br />\nちなみに、レーダーチャートのやつです。</p><p></p>\n\n<div class=\"section\">\n    <h3>全オプション</h3>\n    <pre class=\"code lang-javascript\" data-lang=\"javascript\" data-unlink>Radar.defaults = <span class=\"synIdentifier\">{</span>\n\t\t\t\t\n\t<span class=\"synComment\">//Boolean - If we show the scale above the chart data\t\t\t</span>\n\tscaleOverlay : <span class=\"synConstant\">false</span>,\n\t\n\t<span class=\"synComment\">//Boolean - If we want to override with a hard coded scale</span>\n\tscaleOverride : <span class=\"synConstant\">false</span>,\n\t\n\t<span class=\"synComment\">//** Required if scaleOverride is true **</span>\n\t<span class=\"synComment\">//Number - The number of steps in a hard coded scale</span>\n\tscaleSteps : <span class=\"synStatement\">null</span>,\n\t<span class=\"synComment\">//Number - The value jump in the hard coded scale</span>\n\tscaleStepWidth : <span class=\"synStatement\">null</span>,\n\t<span class=\"synComment\">//Number - The centre starting value</span>\n\tscaleStartValue : <span class=\"synStatement\">null</span>,\n\t\n\t<span class=\"synComment\">//Boolean - Whether to show lines for each scale point</span>\n\tscaleShowLine : <span class=\"synConstant\">true</span>,\n\n\t<span class=\"synComment\">//String - Colour of the scale line\t</span>\n\tscaleLineColor : <span class=\"synConstant\">&quot;rgba(0,0,0,.1)&quot;</span>,\n\t\n\t<span class=\"synComment\">//Number - Pixel width of the scale line\t</span>\n\tscaleLineWidth : 1,\n\n\t<span class=\"synComment\">//Boolean - Whether to show labels on the scale\t</span>\n\tscaleShowLabels : <span class=\"synConstant\">false</span>,\n\t\n\t<span class=\"synComment\">//Interpolated JS string - can access value</span>\n\tscaleLabel : <span class=\"synConstant\">&quot;&lt;%=value%&gt;&quot;</span>,\n\t\n\t<span class=\"synComment\">//String - Scale label font declaration for the scale label</span>\n\tscaleFontFamily : <span class=\"synConstant\">&quot;'Arial'&quot;</span>,\n\t\n\t<span class=\"synComment\">//Number - Scale label font size in pixels\t</span>\n\tscaleFontSize : 12,\n\t\n\t<span class=\"synComment\">//String - Scale label font weight style\t</span>\n\tscaleFontStyle : <span class=\"synConstant\">&quot;normal&quot;</span>,\n\t\n\t<span class=\"synComment\">//String - Scale label font colour\t</span>\n\tscaleFontColor : <span class=\"synConstant\">&quot;#666&quot;</span>,\n\t\n\t<span class=\"synComment\">//Boolean - Show a backdrop to the scale label</span>\n\tscaleShowLabelBackdrop : <span class=\"synConstant\">true</span>,\n\t\n\t<span class=\"synComment\">//String - The colour of the label backdrop\t</span>\n\tscaleBackdropColor : <span class=\"synConstant\">&quot;rgba(255,255,255,0.75)&quot;</span>,\n\t\n\t<span class=\"synComment\">//Number - The backdrop padding above &amp; below the label in pixels</span>\n\tscaleBackdropPaddingY : 2,\n\t\n\t<span class=\"synComment\">//Number - The backdrop padding to the side of the label in pixels\t</span>\n\tscaleBackdropPaddingX : 2,\n\t\n\t<span class=\"synComment\">//Boolean - Whether we show the angle lines out of the radar</span>\n\tangleShowLineOut : <span class=\"synConstant\">true</span>,\n\t\n\t<span class=\"synComment\">//String - Colour of the angle line</span>\n\tangleLineColor : <span class=\"synConstant\">&quot;rgba(0,0,0,.1)&quot;</span>,\n\t\n\t<span class=\"synComment\">//Number - Pixel width of the angle line</span>\n\tangleLineWidth : 1,\t\t\t\n\t\n\t<span class=\"synComment\">//String - Point label font declaration</span>\n\tpointLabelFontFamily : <span class=\"synConstant\">&quot;'Arial'&quot;</span>,\n\t\n\t<span class=\"synComment\">//String - Point label font weight</span>\n\tpointLabelFontStyle : <span class=\"synConstant\">&quot;normal&quot;</span>,\n\t\n\t<span class=\"synComment\">//Number - Point label font size in pixels\t</span>\n\tpointLabelFontSize : 12,\n\t\n\t<span class=\"synComment\">//String - Point label font colour\t</span>\n\tpointLabelFontColor : <span class=\"synConstant\">&quot;#666&quot;</span>,\n\t\n\t<span class=\"synComment\">//Boolean - Whether to show a dot for each point</span>\n\tpointDot : <span class=\"synConstant\">true</span>,\n\t\n\t<span class=\"synComment\">//Number - Radius of each point dot in pixels</span>\n\tpointDotRadius : 3,\n\t\n\t<span class=\"synComment\">//Number - Pixel width of point dot stroke</span>\n\tpointDotStrokeWidth : 1,\n\t\n\t<span class=\"synComment\">//Boolean - Whether to show a stroke for datasets</span>\n\tdatasetStroke : <span class=\"synConstant\">true</span>,\n\t\n\t<span class=\"synComment\">//Number - Pixel width of dataset stroke</span>\n\tdatasetStrokeWidth : 2,\n\t\n\t<span class=\"synComment\">//Boolean - Whether to fill the dataset with a colour</span>\n\tdatasetFill : <span class=\"synConstant\">true</span>,\n\t\n\t<span class=\"synComment\">//Boolean - Whether to animate the chart</span>\n\tanimation : <span class=\"synConstant\">true</span>,\n\n\t<span class=\"synComment\">//Number - Number of animation steps</span>\n\tanimationSteps : 60,\n\t\n\t<span class=\"synComment\">//String - Animation easing effect</span>\n\tanimationEasing : <span class=\"synConstant\">&quot;easeOutQuart&quot;</span>,\n\n\t<span class=\"synComment\">//Function - Fires when the animation is complete</span>\n\tonAnimationComplete : <span class=\"synStatement\">null</span>\n\t\n<span class=\"synIdentifier\">}</span>\n</pre>\n</div>\n<div class=\"section\">\n    <h3>使ったやつのメモ</h3>\n    <pre class=\"code lang-javascript\" data-lang=\"javascript\" data-unlink>that.OPTIONS = <span class=\"synIdentifier\">{</span>\n\tscaleShowLine: <span class=\"synConstant\">false</span>, <span class=\"synComment\">// 区切りの表示</span>\n\tscaleLineWidth : 1, <span class=\"synComment\">// 区切りの太さ(px)</span>\n\tscaleOverride: <span class=\"synConstant\">true</span>, <span class=\"synComment\">// 区切りを絶対値で指定</span>\n\tscaleSteps : 5, <span class=\"synComment\">// 区切りの数</span>\n\tscaleStepWidth : 20, <span class=\"synComment\">// 区切りの間隔(100％がMAXのグラフなら、100/scaleSteps)</span>\n\tscaleStartValue : 0, <span class=\"synComment\">// 区切りの開始値(100%がMAXのグラフなら、0％の0)</span>\n\tanimation : <span class=\"synConstant\">false</span>, <span class=\"synComment\">// 表示時のアニメーションの有無</span>\n\tpointDot: <span class=\"synConstant\">false</span>, <span class=\"synComment\">// 頂点に丸を打つか</span>\n\tpointLabelFontStyle: <span class=\"synConstant\">'900'</span>, <span class=\"synComment\">// 各項目名のスタイル類</span>\n\tpointLabelFontSize: 13,\n\tpointLabelFontColor: <span class=\"synConstant\">'#5b4f30'</span>\n<span class=\"synIdentifier\">}</span>;\n</pre><p>めもめも。</p>\n\n</div>"
}
