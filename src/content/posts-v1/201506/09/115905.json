{
  "title": "Safari 9.0の新機能の概要",
  "html": "<p>以下の機能が<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/Safari\">Safari</a> 9.0から追加されるそうです。<br />\nホヤホヤ情報なのとざーっくり訳なので、間違ってたらごめんなさい！</p><p><iframe src=\"//hatenablog-parts.com/embed?url=https%3A%2F%2Fdeveloper.apple.com%2Flibrary%2Fprerelease%2Fmac%2Freleasenotes%2FGeneral%2FWhatsNewInSafari%2FArticles%2FSafari_9.html\" title=\"Safari 9.0\" class=\"embed-card embed-webcard\" scrolling=\"no\" frameborder=\"0\" style=\"display: block; width: 100%; height: 155px; max-width: 500px; margin: 10px 0px;\"><a href=\"https://developer.apple.com/library/prerelease/mac/releasenotes/General/WhatsNewInSafari/Articles/Safari_9.html\">Safari 9.0</a></iframe><cite class=\"hatena-citation\"><a href=\"https://developer.apple.com/library/prerelease/mac/releasenotes/General/WhatsNewInSafari/Articles/Safari_9.html\">developer.apple.com</a></cite></p><p></p>\n\n<div class=\"section\">\n    <h3>Secure Extension Distribution</h3>\n    <p><a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/OS%20X\">OS X</a>の<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/Safari\">Safari</a>の機能拡張が、すべて<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/Apple\">Apple</a>でホストされるようになって(<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/Safari\">Safari</a> Extensions Galleryっていうらしい)、より安全に使えるようになります。</p><p><a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/Safari\">Safari</a> Extensions Galleryで公開された拡張は自動アップデートされて、<br />\n以下の2行を拡張の<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%A5%DE%A5%CB%A5%D5%A5%A7%A5%B9%A5%C8\">マニフェスト</a>に追加することでその恩恵が得られるとのこと。</p>\n<pre class=\"code\" data-lang=\"\" data-unlink>&lt;key&gt;Update From Gallery&lt;/key&gt;\n&lt;true/&gt;</pre><p><a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/Safari\">Safari</a> Extensions Galleryに置かず、独自に拡張を公開することも引き続き可能だが、そっちは自動アップデート対象外。</p><p>ただし、<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/Safari\">Safari</a> Extensions Galleryに作った拡張を再度アップロードする必要はあって、<a href=\"https://developer.apple.com/safari/extension-submission/\" target=\"_blank\">ココ</a>からやれよとのこと。</p>\n\n    <blockquote>\n        <p>使ったことないのであんまりありがたみがないですねー。</p>\n\n    </blockquote>\n\n</div>\n<div class=\"section\">\n    <h3>Force Touch Trackpad Mouse Events</h3>\n    <p>新しいマウスイベントでwebkitForceってのが増える。<br />\nトラックパッドの感圧タッチ系のイベント。</p><p>感圧タッチ？フォースタッチ？について詳細は以下リンクより。</p>\n\n    <blockquote>\n        <p><a href=\"https://developer.apple.com/library/prerelease/mac/documentation/AppleApplications/Conceptual/SafariJSProgTopics/Articles/RespondingtoForceTouchEventsfromJavaScript.html\">Responding to Force Touch Events from JavaScript</a></p>\n\n    </blockquote>\n\n<ul>\n<li>event.webkitForce</li>\n<li>webkitmouseforcewillbegin</li>\n<li>webkitmouseforcedown</li>\n<li>webkitmouseforceup</li>\n<li>webkitmouseforcechanged</li>\n<li>MouseEvent.<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/WEBKIT\">WEBKIT</a>_FORCE_AT_MOUSE_DOWN</li>\n<li>MouseEvent.<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/WEBKIT\">WEBKIT</a>_FORCE_AT_FORCE_MOUSE_DOWN</li>\n</ul><p>これらを組み合わせて使うことで、トラックパッドのイベントを拾えるらしい。</p>\n\n<div class=\"section\">\n    <h4>ちなみに</h4>\n    <p>さっきの参考リンク先に書いてあるコードを抜粋。</p>\n<pre class=\"code lang-javascript\" data-lang=\"javascript\" data-unlink><span class=\"synIdentifier\">function</span> getEventData(ev) <span class=\"synIdentifier\">{</span>\n  <span class=\"synComment\">// そもそも対応してるかチェック</span>\n  <span class=\"synStatement\">if</span> (<span class=\"synConstant\">'webkitForce'</span> <span class=\"synStatement\">in</span> ev) <span class=\"synIdentifier\">{</span>\n    <span class=\"synComment\">// 比較用の押し具合たち</span>\n    <span class=\"synIdentifier\">var</span> forceLevel      = ev<span class=\"synIdentifier\">[</span><span class=\"synConstant\">'webkitForce'</span><span class=\"synIdentifier\">]</span>;\n    <span class=\"synIdentifier\">var</span> clickForce      = MouseEvent.WEBKIT_FORCE_AT_MOUSE_DOWN;\n    <span class=\"synIdentifier\">var</span> forceClickForce = MouseEvent.WEBKIT_FORCE_AT_FORCE_MOUSE_DOWN;\n\n    <span class=\"synStatement\">if</span> (forceLevel &gt;= clickForce &amp;&amp; forceLevel &lt; forceClickForce)\n      <span class=\"synComment\">// 普通のクリック</span>\n    <span class=\"synIdentifier\">}</span> <span class=\"synStatement\">else</span> <span class=\"synStatement\">if</span> (forceLevel &gt;= forceClickForce) <span class=\"synIdentifier\">{</span>\n      <span class=\"synComment\">// トラックパッドなクリック</span>\n    <span class=\"synIdentifier\">}</span>\n  <span class=\"synIdentifier\">}</span>\n<span class=\"synIdentifier\">}</span>\n</pre>\n    <blockquote>\n        <p>うーん、使うのかコレは！</p>\n\n    </blockquote>\n\n</div>\n</div>\n<div class=\"section\">\n    <h3>Content Blocking <a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/Safari\">Safari</a> Extensions</h3>\n    \n<div class=\"section\">\n    <h4><a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/iOS\">iOS</a></h4>\n    <p><a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/iOS\">iOS</a>の<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/Safari\">Safari</a>に、Content Blocking <a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/Safari\">Safari</a> Extensionsってのが追加されます。<br />\n以下のようなtrigger/actionの配列を書いた<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/JSON\">JSON</a>を追加することで、柔軟にあれこれ不要なコンテンツをブロックできるとのこと。<br />\n<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/Safari\">Safari</a>はこれをパースして<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%A5%D0%A5%A4%A5%C8%A5%B3%A1%BC%A5%C9\">バイトコード</a>として効率的に使うので、ユーザーの邪魔にはならないと。</p><p>以下の例では、<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/webkit\">webkit</a>.orgで画像をブロックするようにしてる。</p>\n<pre class=\"code\" data-lang=\"\" data-unlink>[\n    {\n        &#34;action&#34;: {\n            &#34;type&#34;: &#34;block&#34;\n        },\n        &#34;trigger&#34;: {\n            &#34;url-filter&#34;: &#34;webkit.org/images/icon-gold.png&#34;\n        }\n    },\n    {\n        &#34;action&#34;: {\n            &#34;selector&#34;: &#34;a[href^=\\&#34;http://nightly.webkit.org/\\&#34;]&#34;,\n            &#34;type&#34;: &#34;css-display-none&#34;\n        },\n        &#34;trigger&#34;: {\n            &#34;url-filter&#34;: &#34;.*&#34;\n        }\n    }\n]</pre><p>\"<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/webkit\">webkit</a>.org/images/icon-gold.<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/png\">png</a>\"はブロックして、<br />\n\"<a href=\"http://nightly.webkit.org\">http://nightly.webkit.org</a>\"配下に向いたaタグをdisplay: noneにしてる感じ？</p>\n\n    <blockquote>\n        <p>これすごい嫌な予感するのは私だけでしょうか。</p>\n\n    </blockquote>\n\n</div>\n<div class=\"section\">\n    <h4><a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/OS%20X\">OS X</a></h4>\n    <p>この機能は同じく<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/OS%20X\">OS X</a>の<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/Safari\">Safari</a>でも利用可能で、<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/Safari\">Safari</a> Extensions BuilderにContent Blockerって設定箇所が新設されてるのでそこから<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/JSON\">JSON</a>を追加する。</p><p>ちなみに、\"onbeforeload\"イベントと\"canLoad\"メッセージがdeprecatedになるらしい。</p>\n\n    <blockquote>\n        <p>content blockingとかしたことないからよくわからない・・。</p>\n\n    </blockquote>\n\n</div>\n</div>\n<div class=\"section\">\n    <h3>Shared Links</h3>\n    <p><a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/iOS\">iOS</a>と<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/OS%20X\">OS X</a>の<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/Safari\">Safari</a>で、共有リンクにリンクを転送できるようになります。<br />\n<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/OS%20X\">OS X</a>用のサンプルコードが載ってましたが割愛。</p>\n\n    <blockquote>\n        <p>あの機能・・使ってる人いるん？</p>\n\n    </blockquote>\n\n</div>\n<div class=\"section\">\n    <h3><a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/HTML5\">HTML5</a> Media</h3>\n    \n<div class=\"section\">\n    <h4>AirPlay</h4>\n    <p><a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/Safari\">Safari</a> 9.0からは、<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/JavaScript\">JavaScript</a>からAirPlayが操れるように！<br />\n\"WebKitPlaybackTargetAvailabilityEvent\"を使ってAirPlayが利用可能かを判断します。</p>\n<pre class=\"code lang-javascript\" data-lang=\"javascript\" data-unlink><span class=\"synStatement\">if</span> (<span class=\"synStatement\">window</span>.WebKitPlaybackTargetAvailabilityEvent) <span class=\"synIdentifier\">{</span>\n    video.addEventListener(<span class=\"synConstant\">'webkitplaybacktargetavailabilitychanged'</span>, <span class=\"synIdentifier\">function</span>(ev) <span class=\"synIdentifier\">{</span>\n        <span class=\"synStatement\">switch</span> (ev.availability) <span class=\"synIdentifier\">{</span>\n        <span class=\"synComment\">// 使えるとき</span>\n        <span class=\"synStatement\">case</span> <span class=\"synConstant\">&quot;available&quot;</span>: \n        <span class=\"synComment\">// ...</span>\n        <span class=\"synStatement\">break</span>;\n        <span class=\"synComment\">// 使えないとき</span>\n        <span class=\"synStatement\">case</span> <span class=\"synConstant\">&quot;not-available&quot;</span>"
}
