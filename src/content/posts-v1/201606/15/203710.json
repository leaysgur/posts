{
  "title": "Browserify x UglifyifyからWebpackへの移行",
  "html": "<p>あっさりできたけど、一部つまるところもあったので一応メモっておく。</p><p>タイトル以上のことは求めてなくて、いわゆる最小構成からはじめたい場合にもどうぞ。<br />\n<br />\n</p>\n\n<div class=\"section\">\n    <h3>なんで</h3>\n    <p>エントリーポイントが1つから2つになってしまったから。</p><p>BrowserifyはINとOUTの指定が対になってて、1組しか指定できないので、複数のエントリーポイントに対応するには複数回コマンドを叩く必要がある。<br />\nnpm scriptsでやってる場合に、`npm run build`的なのを複数やらなあかんのはなんだかなーということで。</p><p>RequireJS時代からいいなとは思ってたけど、Webpackならそれが自然に書けるのです！</p>\n\n</div>\n<div class=\"section\">\n    <h3>webpack.config.js</h3>\n    <pre class=\"code lang-javascript\" data-lang=\"javascript\" data-unlink><span class=\"synIdentifier\">var</span> webpack = require(<span class=\"synConstant\">'webpack'</span>);\n<span class=\"synIdentifier\">var</span> IS_PROD = process.env.NODE_ENV === <span class=\"synConstant\">'production'</span>;\n\nmodule.exports = <span class=\"synIdentifier\">{</span>\n  entry: <span class=\"synIdentifier\">{</span>\n    foo: <span class=\"synConstant\">'./src/foo/main.js'</span>,\n    bar: <span class=\"synConstant\">'./src/bar/main.js'</span>\n  <span class=\"synIdentifier\">}</span>,\n  output: <span class=\"synIdentifier\">{</span>\n    path: <span class=\"synConstant\">'./public'</span>,\n    filename: <span class=\"synConstant\">'bundle.[name].js'</span>\n  <span class=\"synIdentifier\">}</span>,\n  plugins: IS_PROD ? <span class=\"synIdentifier\">[</span>\n    <span class=\"synStatement\">new</span> webpack.optimize.UglifyJsPlugin(<span class=\"synIdentifier\">{</span>\n      compress: <span class=\"synIdentifier\">{</span>\n        drop_console: <span class=\"synConstant\">true</span>,\n        unsafe: <span class=\"synConstant\">true</span>,\n        hoist_vars: <span class=\"synConstant\">true</span>,\n        collapse_vars: <span class=\"synConstant\">true</span>,\n        pure_getters: <span class=\"synConstant\">true</span>\n      <span class=\"synIdentifier\">}</span>\n    <span class=\"synIdentifier\">}</span>)\n  <span class=\"synIdentifier\">]</span> : <span class=\"synIdentifier\">[]</span>\n<span class=\"synIdentifier\">}</span>;\n</pre><p>コマンドとしては、</p>\n\n<ul>\n<li>開発中は`webpack -w`</li>\n<li>本番用は`webpack -p`</li>\n</ul><p>`-p`すると勝手にUglifyもやってくれるし、`-w`の機能も一緒に入ってるので、`npm i`するのはWebpackだけというお手軽さ。</p>\n\n</div>\n<div class=\"section\">\n    <h3>`-p`してるしてないで<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%A5%D7%A5%E9%A5%B0%A5%A4%A5%F3\">プラグイン</a>を変えたい</h3>\n    <p>上の例みたく、`NODE_ENV`的な指定を拾うしかないっぽい？</p><p>実行するときは、`NODE_ENV=production webpack -p`ってしてる。<br />\nちなみに`-p`だけでもUglifyはしてくれるけど、細かい指定がしたいならpluginsでやる必要がある。</p>\n\n</div>\n<div class=\"section\">\n    <h3>ちなみに</h3>\n    <p>同じUglifyの指定をしてても、Webpackでやってる方がファイルサイズがちょっと小さくなる。<br />\nCommonJSのロード処理まわりがBrowserifyとは違うんやろうなーと。</p>\n\n</div>"
}
