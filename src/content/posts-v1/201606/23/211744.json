{
  "title": "Payment Request APIとは？〜Frontend Meetup Tokyo Vol.3 に行ってきたメモ #frontendmt",
  "html": "<p>大手町は微妙に遠いと思いつつ今のところ皆勤賞になってるこのシリーズ。<br />\n<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%C6%FC%CB%DC%B7%D0%BA%D1%BF%B7%CA%B9%BC%D2\">日本経済新聞社</a>はフロントエンドエンジニアを募集しています！とのことです。<br />\n<br />\n</p>\n\n<div class=\"section\">\n    <h3>PaymentRequest <a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/API\">API</a> by @sideshowbarker</h3>\n    \n    <blockquote>\n        <p>資料は見つけたら追記</p>\n\n    </blockquote>\n<p>仕様はこれ↓</p>\n\n    <blockquote>\n        <p><a href=\"https://w3c.github.io/browser-payment-api/\">Payment Request API</a></p>\n\n    </blockquote>\n\n<ul>\n<li>今ならChrome51のDev版でflag立てれば使える\n<ul>\n<li><a href=\"https://www.chromestatus.com/features/5639348045217792\">Chrome Platform Status</a></li>\n</ul></li>\n<li><a href=\"https://github.com/GoogleChrome/samples/tree/gh-pages/paymentrequest\">samples/paymentrequest at gh-pages &middot; GoogleChrome/samples &middot; GitHub</a>\n<ul>\n<li>デモとコードはココ</li>\n</ul></li>\n<li>もちろん`<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/https\">https</a>`でないと動かない<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/API\">API</a></li>\n</ul>\n<div class=\"section\">\n    <h4>DEMO</h4>\n    \n<ul>\n<li>買う！ってすると購入ステップへ</li>\n<li>購入ステップになるとブラウザがUIを呼び出す\n<ul>\n<li>開発者側はさわれないUI</li>\n<li>ページのURLもちゃんと出る、偽装できない</li>\n<li>地味だが別ページとかでもないのでセキュリティも強固</li>\n</ul></li>\n<li>どのクレジットカードを使うかとかも、ブラウザが管理する\n<ul>\n<li>クレジットカード情報をいれるところもブラウザがUIを用意してる</li>\n</ul></li>\n<li>クレジットカード以外の支払い方法も、端末に機能があれば使えるようになる\n<ul>\n<li>支払い方法は定数チックに渡すが、ユーザー側がそれに対応してないならUIには表示されない</li>\n</ul></li>\n<li>支払う！ってするとセキュリティコードをきかれる</li>\n<li><a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/Android\">Android</a> Payでも支払いできる</li>\n<li>配送先の住所を選ぶUIもブラウザが出す</li>\n<li>支払い終わるとUIが閉じる</li>\n</ul>\n</div>\n<div class=\"section\">\n    <h4>UIについて</h4>\n    \n<ul>\n<li>ブラウザが出すいじれないこういうのは、Trusted UIというらしい</li>\n<li>UIは仕様にはないので、いまのこれは<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/Chrome\">Chrome</a>だけのUI</li>\n<li>中国ではUIの評判がすこぶる悪かった\n<ul>\n<li>中国にはもっといけてる支払いUIがあるぜ！って言われたそうな</li>\n<li>中国は支払い方法の選択肢がすごい多いが、このUIのデフォルトは1つしか表示しなかったり</li>\n</ul></li>\n</ul>\n</div>\n<div class=\"section\">\n    <h4>ざっくりコードでみると</h4>\n    <pre class=\"code lang-javascript\" data-lang=\"javascript\" data-unlink><span class=\"synComment\">// 支払い方法とか商品情報とか</span>\n<span class=\"synIdentifier\">var</span> supportedInstruments = <span class=\"synIdentifier\">[{</span>\n  supportedMethods: <span class=\"synIdentifier\">[</span>\n    <span class=\"synConstant\">'amex'</span>, <span class=\"synConstant\">'diners'</span>, <span class=\"synConstant\">'discover'</span>, <span class=\"synConstant\">'jcb'</span>, <span class=\"synConstant\">'maestro'</span>, <span class=\"synConstant\">'mastercard'</span>, <span class=\"synConstant\">'unionpay'</span>, <span class=\"synConstant\">'visa'</span>\n  <span class=\"synIdentifier\">]</span>\n<span class=\"synIdentifier\">}]</span>;\n\n<span class=\"synIdentifier\">var</span> details = <span class=\"synIdentifier\">{</span>\n  total: <span class=\"synIdentifier\">{</span> label: <span class=\"synConstant\">'Donation'</span>, amount: <span class=\"synIdentifier\">{</span> currency: <span class=\"synConstant\">'USD'</span>, value: <span class=\"synConstant\">'55.00'</span> <span class=\"synIdentifier\">}</span> <span class=\"synIdentifier\">}</span>,\n  displayItems: <span class=\"synIdentifier\">[</span>\n    <span class=\"synIdentifier\">{</span>\n      label: <span class=\"synConstant\">'Original donation amount'</span>,\n      amount: <span class=\"synIdentifier\">{</span> currency: <span class=\"synConstant\">'USD'</span>, value: <span class=\"synConstant\">'65.00'</span> <span class=\"synIdentifier\">}</span>\n    <span class=\"synIdentifier\">}</span>,\n    <span class=\"synIdentifier\">{</span>\n      label: <span class=\"synConstant\">'Friends and family discount'</span>,\n      amount: <span class=\"synIdentifier\">{</span> currency: <span class=\"synConstant\">'USD'</span>, value: <span class=\"synConstant\">'-10.00'</span> <span class=\"synIdentifier\">}</span>\n    <span class=\"synIdentifier\">}</span>\n  <span class=\"synIdentifier\">]</span>\n<span class=\"synIdentifier\">}</span>;\n\n<span class=\"synIdentifier\">var</span> options = <span class=\"synIdentifier\">{</span> requestShipping: <span class=\"synConstant\">true</span> <span class=\"synIdentifier\">}</span>;\n\n<span class=\"synComment\">// UI呼び出し</span>\n<span class=\"synStatement\">new</span> PaymentRequest(supportedInstruments, details, options)\n  .show()\n  .then((instrumentResponse) =&gt; <span class=\"synIdentifier\">{</span>\n    <span class=\"synComment\">// 支払い終わったよを示す</span>\n    instrumentResponse\n      .complete(<span class=\"synConstant\">true</span>)\n      .then(() =&gt; <span class=\"synIdentifier\">{</span>\n        <span class=\"synComment\">// ここまでくると、支払い方法とか取れる</span>\n      <span class=\"synIdentifier\">}</span>)\n  <span class=\"synIdentifier\">}</span>)\n  .<span class=\"synStatement\">catch</span>((err) =&gt; <span class=\"synIdentifier\">{</span>\n    <span class=\"synComment\">// なんかエラー</span>\n  <span class=\"synIdentifier\">}</span>)\n</pre><p>これ支払い終わったら自分でサーバーにデータ送るんかね？<br />\n自動的に叩く<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/API\">API</a>のエンドポイントとか指定できるようにして欲しい気がする・・。<br />\nどうせ後で自分でサーバーにデータ送るんやろうし、`then()`後即POST後即リダイレクトな未来が見えるなー。</p>\n\n</div>\n</div>\n<div class=\"section\">\n    <h3>Houdini by @myakura</h3>\n    \n    <blockquote>\n        <p>資料は(ry</p>\n\n    </blockquote>\n\n<div class=\"section\">\n    <h4>Extensible Web</h4>\n    \n<ul>\n<li>ローレベルな<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/API\">API</a>が提供される</li>\n<li>それを組み合わせて自分たちでWebを作っていく</li>\n<li><a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/JavaScript\">JavaScript</a>は拡張してきた</li>\n<li>DOMもほぼjsやし</li>\n<li>HTMLも -> WebComponentsとかくるし</li>\n<li>しかし<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/CSS\">CSS</a>・・</li>\n</ul>\n</div>\n<div class=\"section\">\n    <h4><a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/CSS\">CSS</a>は拡張できない！</h4>\n    \n<ul>\n<li>計算後の値しか取れない</li>\n<li>CSSOMってもな・・</li>\n<li>Sass / PostCSSで構文はなんとか</li>\n<li>つまりは<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/CSS\">CSS</a> is a Black Box!</li>\n</ul>\n</div>\n<div class=\"section\">\n    <h4>そこでHoudini</h4>\n    \n<ul>\n<li><a href=\"https://drafts.css-houdini.org/\">CSS-TAG Houdini Editor Drafts</a></li>\n<li>ブラウザの表示の各タイミングでフックを提供する</li>\n<li><a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/CSS\">CSS</a> Typed OM\n<ul>\n<li>`px`とか`rem`とかに型が！ -> `CSSLengthValue`</li>\n<li>`styleMap`ってのが生える</li>\n<li>`el.style.xxx` -> `el.styleMap.get('xxx')`</li>\n<li>そうするといい感じのオブジェクトが返ってくるように</li>\n</ul></li>\n<li><a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/CSS\">CSS</a> Properties and Values <a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/API\">API</a>\n<ul>\n<li>`--my-color: green`みたいなやつに、型やら初期値やら継承可否やら決めれるように</li>\n</ul></li>\n<li><a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/CSS\">CSS</a> Painting <a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/API\">API</a>\n<ul>\n<li><a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/canvas\">canvas</a>ライクな描画用コンテキスト</li>\n<li>コード見るほうがわかりやすい↓</li>\n<li><a href=\"https://drafts.css-houdini.org/css-paint-api/#examples\">CSS Painting API Level 1</a></li>\n</ul></li>\n<li><a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/CSS\">CSS</a> Layout <a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/API\">API</a>\n<ul>\n<li>`display: layout('simple-flow');`みたいなの作れる</li>\n<li><a href=\"https://drafts.css-houdini.org/css-layout-api/#examples\">CSS Layout API Level 1</a></li>\n</ul></li>\n<li>Font Metrics <a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/API\">API</a>\n<ul>\n<li>フォントのベースラインとか調整できるようになるかも・・？</li>\n</ul></li>\n<li>Worklets\n<ul>\n<li><a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/CSS\">CSS</a>用のWorker？</li>\n</ul></li>\n<li>まだまだ使えるようにはならない</li>\n<li>けど実用的なものは早く来るかも・・？</li>\n</ul><p>やっぱ<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/CSS\">CSS</a> in JSが加速するぅーって感じなんかなー。</p>\n\n</div>\n</div>"
}
