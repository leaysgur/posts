{
  "title": "スマートフォンサイトをコーディングする時の注意など",
  "html": "<p>はてさて、無事に転職しまして、こういうことをやるようになりました。<br />\n今までも知識レベルでは持ってたつもりですが、いざやるのはまた勝手が違うわけで。<br />\nまだ全然周りも見えてないですが、個人的に気付いた点などをメモ。</p>\n\n<div class=\"section\">\n    <h3>はじめに</h3>\n    \n<div class=\"section\">\n    <h4>対象端末とか</h4>\n    <p>主に<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/iPhone\">iPhone</a>と<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/Android\">Android</a>端末向けにコーディングするようです。<br />\n<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/iPad\">iPad</a>はまた別？というわけで、画面サイズも小さめのいわゆる「<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%A5%B9%A5%DE%A1%BC%A5%C8%A5%D5%A5%A9%A5%F3\">スマートフォン</a>」が相手です。</p>\n\n</div>\n<div class=\"section\">\n    <h4>つまり</h4>\n    <p>利用環境がある程度絞れている＋新しいもの＝<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/Html5\">Html5</a>やCss3を惜しみなく使えるということ。</p>\n\n    <blockquote>\n        <p><a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/JavaScript\">JavaScript</a>については今回は割愛。</p>\n\n    </blockquote>\n\n</div>\n</div>\n<div class=\"section\">\n    <h3>コーディングルール</h3>\n    \n<div class=\"section\">\n    <h4>viewport</h4>\n    <p>お約束の。</p>\n<pre class=\"code\" data-unlink><span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">meta</span><span class=\"synIdentifier\"> </span><span class=\"synType\">name</span><span class=\"synIdentifier\">=</span><span class=\"synConstant\">&quot;viewport&quot;</span><span class=\"synIdentifier\"> </span><span class=\"synType\">content</span><span class=\"synIdentifier\">=</span><span class=\"synConstant\">&quot;initial-scale=1, maximum-scale=1, minimum-scale=1, user-scalable=no&quot;</span><span class=\"synIdentifier\">&gt;</span>\n</pre><p>そのほか、</p>\n<pre class=\"code\" data-unlink><span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">meta</span><span class=\"synIdentifier\"> </span><span class=\"synType\">name</span><span class=\"synIdentifier\">=</span><span class=\"synConstant\">&quot;format-detection&quot;</span><span class=\"synIdentifier\"> </span><span class=\"synType\">content</span><span class=\"synIdentifier\">=</span><span class=\"synConstant\">&quot;telephone=no&quot;</span><span class=\"synIdentifier\">&gt;</span>\n</pre><p>数字リンクで電話がかかる鬱陶しいのを制御するやつ。</p>\n\n</div>\n<div class=\"section\">\n    <h4>リキッドレイアウト</h4>\n    <p>個人的なすごく極端な理解としては、<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/iPhone\">iPhone</a>で見ても、横幅1900pxくらいのブラウザで見ても、「綺麗に見える」こと。<br />\n背景画像が画面端までrepeatされてたり、画像はcenterに寄ってたり。<br />\n不自然なインデントでテキストが開始されてたりしないとか。</p><p>コーディングする前に、広い画面で見た場合にどういう風に見えるか？を意識してからHtmlを組むのが良いかなぁーと。</p>\n\n</div>\n<div class=\"section\">\n    <h4>その他気にする</h4>\n    <p>縦方向に関しては、固定のpxで指定するシーンは多々あって、PCサイトと同じく特に意識しない。</p>\n<pre class=\"code\" data-unlink>margin: 20px auto;\npadding-top: 5px;\nheight: 44px;\n</pre><p>ただ横方向に関しては少し慎重になる必要があって、</p>\n<pre class=\"code\" data-unlink>width: 100%;\npadding-left: 10px; <span class=\"synComment\">/* はみ出る */</span>\n</pre><p>こういうのに注意。<br />\n<br />\n</p>\n\n</div>\n</div>\n<div class=\"section\">\n    <h3>画像関連</h3>\n    <p><a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%A5%B9%A5%DE%A1%BC%A5%C8%A5%D5%A5%A9%A5%F3\">スマートフォン</a>であろうともちろん画像は表示するわけで。</p>\n\n<div class=\"section\">\n    <h4>形式やサイズ</h4>\n    <p>言わずもがな容量重視。<br />\n単純な画像なら<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/gif\">gif</a>、たいていは<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/png\">png</a>、写真はjpgも検討。<br />\nファイルは<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%B0%B5%BD%CC\">圧縮</a>したり減色したり、できる限りの策を。</p>\n\n</div>\n<div class=\"section\">\n    <h4><a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/Retina\">Retina</a>とか対応</h4>\n    <p>画像は1/2サイズで指定すると、後々幸せになれます。<br />\n元画像が320px*200pxなら、以下のように。</p>\n<pre class=\"code\" data-unlink><span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">div</span><span class=\"synIdentifier\"> </span><span class=\"synType\">class</span><span class=\"synIdentifier\">=</span><span class=\"synConstant\">&quot;banner&quot;</span><span class=\"synIdentifier\">&gt;</span>\n    <span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">a</span><span class=\"synIdentifier\"> </span><span class=\"synType\">href</span><span class=\"synIdentifier\">=</span><span class=\"synConstant\">&quot;hoge.html&quot;</span><span class=\"synIdentifier\">&gt;</span>\n<span class=\"synUnderlined\">        </span><span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">img</span><span class=\"synIdentifier\"> </span><span class=\"synType\">src</span><span class=\"synIdentifier\">=</span><span class=\"synConstant\">&quot;banner.png&quot;</span><span class=\"synIdentifier\"> </span><span class=\"synType\">alt</span><span class=\"synIdentifier\">=</span><span class=\"synConstant\">&quot;hogehoge&quot;</span><span class=\"synIdentifier\"> </span><span class=\"synType\">width</span><span class=\"synIdentifier\">=</span><span class=\"synConstant\">&quot;160&quot;</span><span class=\"synIdentifier\"> </span><span class=\"synType\">height</span><span class=\"synIdentifier\">=</span><span class=\"synConstant\">&quot;100&quot;</span><span class=\"synIdentifier\"> /&gt;</span>\n<span class=\"synUnderlined\">        </span><span class=\"synComment\">&lt;!--↑サイズは半分を指定--&gt;</span>\n<span class=\"synUnderlined\">    </span><span class=\"synIdentifier\">&lt;/</span><span class=\"synStatement\">a</span><span class=\"synIdentifier\">&gt;</span>\n<span class=\"synIdentifier\">&lt;/</span><span class=\"synStatement\">div</span><span class=\"synIdentifier\">&gt;</span>\n&lt;200b&gt;||<span class=\"synError\">&lt;</span>\n\n\n<span class=\"synError\">&gt;</span>|css|\n.banner{\n    text-align: center;\n}\n</pre><p>そうすることで、低解像度の端末でも高解像度の端末でも最適な表示になります。<br />\nそしてこれだけで綺麗にセンター寄り。</p>\n\n    <blockquote>\n        <p>低解像度の端末に対して倍サイズの画像を配信するってのはどうやねんっていうのはあるやろうけど・・。</p>\n\n    </blockquote>\n\n</div>\n<div class=\"section\">\n    <h4><a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/Css\">Css</a>スプライト</h4>\n    <p>これさえやればOKみたいな勢いで使われてます。<br />\nimgタグで呼び込む画像ファイル＝リクエスト数を減らすために、1つの画像ファイルにまとめて、それをずらしながら使いまわそうというやつ。</p>\n<pre class=\"code\" data-unlink>background: <span class=\"synIdentifier\">#ffffff</span> url(splite<span class=\"synIdentifier\">.png</span>) no-repeat scroll 40px 10px;\nbackground-size: <span class=\"synStatement\">**</span>px <span class=\"synStatement\">**</span>px; <span class=\"synComment\">/* スプライト画像の半分の縦横サイズ */</span>\n</pre><p>半分サイズを指定するのは、↑で書いたのと同じ理由から。<br />\n後は背景として指定している要素自身のheightやwidthで見える範囲を絞る。</p>\n\n<div class=\"section\">\n    <h5>スプライトのだめなところ</h5>\n    <p><del>このように基本的にbackgroundで指定するので、</del></p>\n\n<ul>\n<li><del>imgタグにできない＝altがつけれない＝<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/SEO\">SEO</a>的にもいろいろよろしくない。</del></li>\n<li>スプライト画像作るのがすごく面倒くさい。</li>\n<li>no-repeatなものにしか使えない。</li>\n</ul>\n    <blockquote>\n        <p>imgタグでも親要素でoverflow: hiddenとかすればできるので、差し替えの多そうなバナー系や、背景画像以外をスプライトで固めちゃうってのが良いのかな？</p>\n\n    </blockquote>\n\n</div>\n</div>\n</div>\n<div class=\"section\">\n    <h3>デザイン関連</h3>\n    <p>画像を使いたくないならCss3を使えば良いじゃない！<br />\nそこで悩むのが、こんなんどうやって実現するんや・・っていうやつ。</p>\n\n<div class=\"section\">\n    <h4>使えそうなコたち</h4>\n    \n<ul>\n<li>:beforeと:after</li>\n<li>position: absolute</li>\n<li>その他Css3\n<ul>\n<li>background: gradient</li>\n<li>text-shadow</li>\n<li>box-shadow</li>\n</ul></li>\n</ul>\n</div>\n<div class=\"section\">\n    <h4>ちょっとそれっぽい見出しのサンプル</h4>\n    \n<div class=\"section\">\n    <h5>Html</h5>\n    <pre class=\"code\" data-unlink><span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">div</span><span class=\"synIdentifier\"> </span><span class=\"synType\">class</span><span class=\"synIdentifier\">=</span><span class=\"synConstant\">&quot;title&quot;</span><span class=\"synIdentifier\">&gt;</span>\n    <span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">h2</span><span class=\"synIdentifier\"> </span><span class=\"synType\">class</span><span class=\"synIdentifier\">=</span><span class=\"synConstant\">&quot;title1&quot;</span><span class=\"synIdentifier\">&gt;</span>Fantastic Experience Ever!!<span class=\"synIdentifier\">&lt;/</span><span class=\"synStatement\">h2</span><span class=\"synIdentifier\">&gt;</span>\n<span class=\"synIdentifier\">&lt;/</span><span class=\"synStatement\">div</span><span class=\"synIdentifier\">&gt;</span>&lt;200b&gt;\n</pre>\n</div>\n<div class=\"section\">\n    <h5><a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/Css\">Css</a></h5>\n    <pre class=\"code\" data-unlink><span class=\"synComment\">/* prefixはとても適当 */</span>\n<span class=\"synIdentifier\">.title{</span>\n    <span class=\"synType\">position</span>: <span class=\"synType\">relative</span>;\n<span class=\"synIdentifier\">}</span>\n\n<span class=\"synIdentifier\">.title1{</span>\n    <span class=\"synType\">background</span>: <span class=\"synType\">background</span>: <span class=\"synConstant\">#feffff</span>;\n    <span class=\"synType\">background</span>: -webkit-gradient(linear, <span class=\"synType\">left</span> <span class=\"synType\">top</span>, <span class=\"synType\">left</span> <span class=\"synType\">bottom</span>, <span class=\"synType\">color</span>-stop(<span class=\"synConstant\">0%</span>,<span class=\"synConstant\">#feffff</span>), <span class=\"synType\">color</span>-stop(<span class=\"synConstant\">35%</span>,<span class=\"synConstant\">#ddf1f9</span>), <span class=\"synType\">color</span>-stop(<span class=\"synConstant\">100%</span>,<span class=\"synConstant\">#dbdbff</span>)), -webkit-linear-gradient(<span class=\"synType\">top</span>,  <span class=\"synConstant\">#feffff</span> <span class=\"synConstant\">0%</span>,<span class=\"synConstant\">#ddf1f9</span> <span class=\"synConstant\">35%</span>,<span class=\"synConstant\">#dbdbff</span> <span class=\"synConstant\">100%</span>);\n    box-shadow: <span class=\"synConstant\">0</span> <span class=\"synConstant\">1px</span> <span class=\"synConstant\">3px</span> <span class=\"synConstant\">#000</span>;\n    <span class=\"synType\">color</span>: <span class=\"synConstant\">#180e40</span>;\n    <span class=\"synType\">font-size</span>: <span class=\"synConstant\">1.3em</span>;\n    <span class=\"synType\">height</span>: <span class=\"synConstant\">44px</span>;\n    <span class=\"synType\">line-height</span>: <span class=\"synConstant\">44px</span>;\n    <span class=\"synType\">margin</span>: <span class=\"synConstant\">10px</span> <span class=\"synType\">auto</span>;\n    <span class=\"synType\">text-align</span>: <span class=\"synType\">center</span>;\n    <span class=\"synType\">text-shadow</span>: <span class=\"synConstant\">1px</span> <span class=\"synConstant\">1px</span> <span class=\"synConstant\">2px</span> <span class=\"synConstant\">#fff</span>;\n<span class=\"synIdentifier\">}</span>\n\n<span class=\"synIdentifier\">.title1</span>:<span class=\"synPreProc\">before</span>{\n    background: #180e40;\n    content: <span class=\"synConstant\">&quot;&quot;</span>;\n    display: block;\n    height: 2px;\n    position: absolute;\n    top: 4px;\n    width: 100%;\n<span class=\"synError\">}</span>\n\n<span class=\"synIdentifier\">.title1</span>:<span class=\"synPreProc\">after</span>{\n    background: #180e40;\n    content: <span class=\"synConstant\">&quot;&quot;</span>;\n    display: block;\n    height: 2px;\n    position: absolute;\n    bottom: 4px;\n    width: 100%;\n<span class=\"synError\">}</span>&lt;200b&gt;\n</pre><p>jsfiddleとかでどうぞ。</p>\n\n</div>\n</div>\n</div>\n<div class=\"section\">\n    <h3>悩みどころ</h3>\n    <p>上記のサンプルはbeforeやらを使って実現できてますが、中にはもっと複雑なやつもあり・・。<br />\nそれを実現するために、Html文書として意味のない空のdivやらを、画像を表示するために用意しないといけないシーンがあったり。</p><p>これは自分の力量不足だったりもするのですが、あちこちのサイトでも割と横行してますよね。<br />\nページを高速化するためにスプライトにしちゃって、本来文書として意味のある<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%A5%DE%A1%BC%A5%AF%A5%A2%A5%C3%A5%D7\">マークアップ</a>ができないってのも問題だと思ったりも。</p><p>よく見たのはh2とかの見出しにあたるであろう部分が、空divでbackground画像で済まされてたり。<br />\nサイドを画像で挟む見出しのデザインで、なんでもかんでも空divを組み合わせて力技で実現されてたり。</p><p>じゃあ遅いページでも良いのかと言われるとなんとも言えず・・。<br />\n落とし所は一体どこなんでしょう。</p><p>読み込みページサイズの指標かなんか設けて、容量に余裕があれば・・とか？</p><p>とりあえず今の時点は書けることはこんなもの。</p>\n\n</div>"
}
