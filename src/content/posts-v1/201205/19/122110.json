{
  "title": "最新のTwitter@Anywhere公式ドキュメントの日本語訳",
  "html": "<p>検索して出てくる解説サイトや、日本語訳が若干古かったので、現時点での最新版をもう一度訳してみました。<br />\n最終の更新日付は、2012年01月09日だそうです。</p><p>@Anywhereって実はすごく便利やと思ってるのですが、あんまり使われてないです・・よね？<br />\nサーバーサイドわからん！って人でも、簡単に導入できるのでぜひぜひ試してみてください！</p><p>随時注釈を挟んで、本家よりわかりやすくした・・つもりですｗ</p>\n\n    <blockquote>\n        <p>参考：<a href=\"https://dev.twitter.com/docs/anywhere/welcome\" target=\"_blank\" title=\"Welcome to @Anywhere | Twitter Developers\">Welcome to @Anywhere | Twitter Developers</a></p>\n\n    </blockquote>\n\n<div class=\"section\">\n    <h3>@Anywhereをはじめる</h3>\n    <p>@Anywhereを使うことで、あなたのサイトに<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/Twitter\">Twitter</a>の機能をすごく簡単に組み込むことができます。<br />\n@Anywhereは、サイト利用者を増やすのに一役買うことでしょう。<br />\n@Anywhereは、フォローボタンの追加、ホバーカードの表示や、<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/Twitter\">Twitter</a>のユーザー名のオートリンクの他、Connect to <a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/Twitter\">Twitter</a>といった高度な機能も提供します。</p>\n\n    <blockquote>\n        <p>ページ内の@hogehogeを勝手にリンクにしてくれたり、マウス乗せるとプロフィールが表示されたりするやつを見たことありませんか？あれです、あれ。<br />\nその他ツイートできるフォームやら、フォローボタン、果てにはログイン機構までできちゃう。<br />\nしかも全部<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/JavaScript\">JavaScript</a>！それが＠Anywhereです。</p>\n\n    </blockquote>\n\n</div>\n<div class=\"section\">\n    <h3>まずはじめに</h3>\n    <p>まずはじめに、アプリケーションの登録が必要です。<br />\n既に他のアプリケーションを登録している場合も、@Anywhere用に新しく登録することをオススメします。</p><p>登録時のコールバックURLは、<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%A5%B5%A5%D6%A5%C9%A5%E1%A5%A4%A5%F3\">サブドメイン</a>、<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%A5%C9%A5%E1%A5%A4%A5%F3\">ドメイン</a>共に@Anywhere用に登録したURLと一致している必要があります。</p>\n\n    <blockquote>\n        <p>意外に面倒なアプリ登録ですが、作業と割りきって淡々と。<br />\nConsumer Keyと、Consumer Secretは後で使いますのでメモ</p>\n\n    </blockquote>\n<p>@Anywhereを使いたいHTMLページで、<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/JavaScript\">JavaScript</a>を読み込みます。<br />\n@Anywhereのjsファイル読み込みに関しては、出来る限りページ上部に記述することをオススメします。(理由は後述)<br />\n\"Consumer Secret\"に関しては、もしかしたら使う機会があるかもしれません。ただくれぐれも、HTMLや<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/JavaScript\">JavaScript</a>の中に\"Consumer Secret\"を記述しないようにしてください。</p>\n<pre class=\"code lang-html\" data-lang=\"html\" data-unlink><span class=\"synComment\">&lt;!DOCTYPE HTML&gt;</span>\n<span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">html</span><span class=\"synIdentifier\">&gt;</span>\n  <span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">head</span><span class=\"synIdentifier\">&gt;</span>\n<span class=\"synPreProc\">    </span><span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">meta</span><span class=\"synIdentifier\"> </span><span class=\"synType\">http-equiv</span><span class=\"synIdentifier\">=</span><span class=\"synConstant\">&quot;Content-type&quot;</span><span class=\"synIdentifier\"> </span><span class=\"synType\">content</span><span class=\"synIdentifier\">=</span><span class=\"synConstant\">&quot;text/html; charset=utf-8&quot;</span><span class=\"synIdentifier\">&gt;</span>\n<span class=\"synPreProc\">    </span><span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">title</span><span class=\"synIdentifier\">&gt;</span>Anywhere Sample<span class=\"synIdentifier\">&lt;/</span><span class=\"synStatement\">title</span><span class=\"synIdentifier\">&gt;</span>\n<span class=\"synPreProc\">    </span><span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">script</span><span class=\"synIdentifier\"> </span><span class=\"synType\">src</span><span class=\"synIdentifier\">=</span><span class=\"synConstant\">&quot;http://platform.twitter.com/anywhere.js?id={YOUR_CONSUMER_KEY}&amp;v=1&quot;</span><span class=\"synIdentifier\">&gt;&lt;/</span><span class=\"synStatement\">script</span><span class=\"synIdentifier\">&gt;</span>\n<span class=\"synPreProc\">  </span><span class=\"synIdentifier\">&lt;/</span><span class=\"synStatement\">head</span><span class=\"synIdentifier\">&gt;</span>\n  <span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">body</span><span class=\"synIdentifier\">&gt;</span>\n    ...\n  <span class=\"synIdentifier\">&lt;/</span><span class=\"synStatement\">body</span><span class=\"synIdentifier\">&gt;</span>\n<span class=\"synIdentifier\">&lt;/</span><span class=\"synStatement\">html</span><span class=\"synIdentifier\">&gt;</span>\n</pre><p>このjsファイルは、グローバルオブジェクトとしてtwttr変数のみを展開します。<br />\nこの変数のanywhereメソッドを呼び出しコールバックを利用することで、それぞれの機能を使うことができます。<br />\nコールバックには、<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/API\">API</a>クライアント(以下ではT)を単一の引数として渡します。<br />\nこの<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/API\">API</a>クライアントが、すべての@Anywhereの機能を保持しています。<br />\nホバーカードを表示するサンプルを以下に示します。</p>\n\n<div class=\"section\">\n    <h4>使用例</h4>\n    <pre class=\"code lang-javascript\" data-lang=\"javascript\" data-unlink>twttr.anywhere(<span class=\"synIdentifier\">function</span> (T) <span class=\"synIdentifier\">{</span>\n  T.hovercards();\n<span class=\"synIdentifier\">}</span>);\n</pre><p>anywhereメソッドは、単一ページ内で何度も呼び出すことができます。<br />\n以下は、ホバーカードとフォローボタンを同時に使用するサンプルです。</p>\n<pre class=\"code lang-html\" data-lang=\"html\" data-unlink><span class=\"synComment\">&lt;!DOCTYPE HTML&gt;</span>\n<span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">html</span><span class=\"synIdentifier\">&gt;</span>\n  <span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">head</span><span class=\"synIdentifier\">&gt;</span>\n<span class=\"synPreProc\">    </span><span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">meta</span><span class=\"synIdentifier\"> </span><span class=\"synType\">http-equiv</span><span class=\"synIdentifier\">=</span><span class=\"synConstant\">&quot;Content-type&quot;</span><span class=\"synIdentifier\"> </span><span class=\"synType\">content</span><span class=\"synIdentifier\">=</span><span class=\"synConstant\">&quot;text/html; charset=utf-8&quot;</span><span class=\"synIdentifier\">&gt;</span>\n<span class=\"synPreProc\">    </span><span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">title</span><span class=\"synIdentifier\">&gt;</span>Anywhere Sample<span class=\"synIdentifier\">&lt;/</span><span class=\"synStatement\">title</span><span class=\"synIdentifier\">&gt;</span>\n<span class=\"synPreProc\">    </span><span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">script</span><span class=\"synIdentifier\"> </span><span class=\"synType\">src</span><span class=\"synIdentifier\">=</span><span class=\"synConstant\">&quot;http://platform.twitter.com/anywhere.js?id=YOUR_API_KEY&amp;v=1&quot;</span><span class=\"synIdentifier\"> </span><span class=\"synType\">type</span><span class=\"synIdentifier\">=</span><span class=\"synConstant\">&quot;text/javascript&quot;</span><span class=\"synIdentifier\">&gt;&lt;/</span><span class=\"synStatement\">script</span><span class=\"synIdentifier\">&gt;</span>\n<span class=\"synPreProc\">  </span><span class=\"synIdentifier\">&lt;/</span><span class=\"synStatement\">head</span><span class=\"synIdentifier\">&gt;</span>\n  <span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">body</span><span class=\"synIdentifier\">&gt;</span>\n  <span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">script</span><span class=\"synIdentifier\"> </span><span class=\"synType\">type</span><span class=\"synIdentifier\">=</span><span class=\"synConstant\">&quot;text/javascript&quot;</span><span class=\"synIdentifier\">&gt;</span>\n<span class=\"synSpecial\">    twttr.anywhere</span>(<span class=\"synIdentifier\">function</span><span class=\"synSpecial\"> </span>(<span class=\"synSpecial\">T</span>)<span class=\"synSpecial\"> </span><span class=\"synIdentifier\">{</span>\n<span class=\"synSpecial\">      T.hovercards</span>()<span class=\"synSpecial\">;</span>\n<span class=\"synSpecial\">    </span><span class=\"synIdentifier\">}</span>)<span class=\"synSpecial\">;</span>\n<span class=\"synSpecial\">  </span><span class=\"synIdentifier\">&lt;/</span><span class=\"synStatement\">script</span><span class=\"synIdentifier\">&gt;</span>\n \n  ...\n \n  <span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">span</span><span class=\"synIdentifier\"> </span><span class=\"synType\">id</span><span class=\"synIdentifier\">=</span><span class=\"synConstant\">&quot;follow-placeholder&quot;</span><span class=\"synIdentifier\">&gt;&lt;/</span><span class=\"synStatement\">span</span><span class=\"synIdentifier\">&gt;</span>\n  <span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">script</span><span class=\"synIdentifier\"> </span><span class=\"synType\">type</span><span class=\"synIdentifier\">=</span><span class=\"synConstant\">&quot;text/javascript&quot;</span><span class=\"synIdentifier\">&gt;</span>\n<span class=\"synSpecial\">    twttr.anywhere</span>(<span class=\"synIdentifier\">function</span><span class=\"synSpecial\"> </span>(<span class=\"synSpecial\">T</span>)<span class=\"synSpecial\"> </span><span class=\"synIdentifier\">{</span>\n<span class=\"synSpecial\">      T</span>(<span class=\"synConstant\">&quot;#follow-placeholder&quot;</span>)<span class=\"synSpecial\">.followButton</span>(<span class=\"synConstant\">'anywhere'</span>)<span class=\"synSpecial\">;</span>\n<span class=\"synSpecial\">    </span><span class=\"synIdentifier\">}</span>)<span class=\"synSpecial\">;</span>\n<span class=\"synSpecial\">  </span><span class=\"synIdentifier\">&lt;/</span><span class=\"synStatement\">script</span><span class=\"synIdentifier\">&gt;</span>\n  <span class=\"synIdentifier\">&lt;/</span><span class=\"synStatement\">body</span><span class=\"synIdentifier\">&gt;</span>\n<span class=\"synIdentifier\">&lt;/</span><span class=\"synStatement\">html</span><span class=\"synIdentifier\">&gt;</span>\n</pre>\n</div>\n</div>\n<div class=\"section\">\n    <h3>@Anywhereの機能</h3>\n    \n<ul>\n<li>ユーザーネームの<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%BC%AB%C6%B0%A5%EA%A5%F3%A5%AF\">自動リンク</a></li>\n<li>ホバーカード</li>\n<li>フォローボタン</li>\n<li>ツイートボックス</li>\n<li>ログイン機能</li>\n</ul>\n<div class=\"section\">\n    <h4><a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%BC%AB%C6%B0%A5%EA%A5%F3%A5%AF\">自動リンク</a></h4>\n    <p>ページ内の<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/Twitter\">Twitter</a>のユーザーネームを、簡単に<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/Twitter\">Twitter</a>.comのプロフィールページへのリンクにすることができます。<br />\n<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/Twitter\">Twitter</a>のユーザー名は、\"@\"からはじまり、\"_\"など1-20文字の英数字で構成されます。</p><p>ユーザーネームを自動でリンクするには、linkifyUsersメソッドを使います。</p>\n<pre class=\"code lang-javascript\" data-lang=\"javascript\" data-unlink>twttr.anywhere(<span class=\"synIdentifier\">function</span> (T) <span class=\"synIdentifier\">{</span>\n  T.linkifyUsers();\n<span class=\"synIdentifier\">}</span>);\n</pre><p>この方法だと、bodyタグ以下のすべてのユーザーネームをリンクしようとします。</p><p>リンクさせたい範囲を制限するには、<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/CSS\">CSS</a><a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%A5%BB%A5%EC%A5%AF%A5%BF\">セレクタ</a>の要領で要素を指定します。<br />\n以下の例だと、linkify-this-contentというIDのついた要素内を対象に、リンクを行います。</p>\n<pre class=\"code lang-javascript\" data-lang=\"javascript\" data-unlink>twttr.anywhere(<span class=\"synIdentifier\">function</span> (T) <span class=\"synIdentifier\">{</span>\n  T(<span class=\"synConstant\">&quot;#linkify-this-content&quot;</span>).linkifyUsers();\n<span class=\"synIdentifier\">}</span>);\n</pre><p>linkifyUsersだけでなく他の<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/API\">API</a>にも共通しますが、メソッドにはオプションを指定することができます。<br />\n例えば、作成したユーザーネームは<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/twitter\">twitter</a>-anywhere-userというクラスのついたaタグで囲まれます。<br />\nclassNameをオブジェクト<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%A5%EA%A5%C6%A5%E9%A5%EB\">リテラル</a>で渡すことにより、このクラス名を任意のものに変更することができます。<br />\n以下の例では、my-tweepというクラス名を付与しています。</p>\n<pre class=\"code lang-javascript\" data-lang=\"javascript\" data-unlink>twttr.anywhere(<span class=\"synIdentifier\">function</span> (T) <span class=\"synIdentifier\">{</span>\n  T(<span class=\"synConstant\">&quot;#linkify-this-content&quot;</span>).linkifyUsers(<span class=\"synIdentifier\">{</span> className: <span class=\"synConstant\">'my-tweep'</span> <span class=\"synIdentifier\">}</span>);\n<span class=\"synIdentifier\">}</span>);\n<span class=\"synComment\">// @&lt;a class='twitter-anywhere-user'&gt;hoge&lt;/a&gt;ではなく、</span>\n<span class=\"synComment\">// @&lt;a class='my-tweep'&gt;hoge&lt;/a&gt;になる。</span>\n</pre>\n</div>\n</div>\n<div class=\"section\">\n    <h3>ホバーカード</h3>\n    <p>ホバーカードは、<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/Twitter\">Twitter</a>のユーザー情報を<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%A5%C4%A1%BC%A5%EB%A5%C1%A5%C3%A5%D7\">ツールチップ</a>の形式で表示することができます。<br />\nホバーカード上では、フォローやアンフォローといった動作を行うこともできます。</p><p>一番簡単な使い方は以下。</p>\n<pre class=\"code lang-javascript\" data-lang=\"javascript\" data-unlink>twttr.anywhere(<span class=\"synIdentifier\">function</span> (T) <span class=\"synIdentifier\">{</span>\n  T.hovercards();\n<span class=\"synIdentifier\">}</span>);\n</pre><p>デフォルトのhovercardsメソッドの挙動としては、bodyタグ以下に対して、上述のlinkifyUsersメソッドを内部で実行します。<br />\nその後で、デフォルトのクラス名のついたaタグで囲まれたユーザーネームをマウスオーバーすることで、ホバーカードを表示します。</p>\n\n<div class=\"section\">\n    <h4>ホバーカードのオプション</h4>\n    <p>こちらも同じく、<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/CSS\">CSS</a><a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%A5%BB%A5%EC%A5%AF%A5%BF\">セレクタ</a>の要領で適応範囲を制限できます。</p>\n<pre class=\"code lang-javascript\" data-lang=\"javascript\" data-unlink>twttr.anywhere(<span class=\"synIdentifier\">function</span> (T) <span class=\"synIdentifier\">{</span>\n  T(<span class=\"synConstant\">&quot;#main-content&quot;</span>).hovercards();\n<span class=\"synIdentifier\">}</span>);\n</pre>\n</div>\n<div class=\"section\">\n    <h4>ユーザーネームをリンクにしない</h4>\n    <p>linkfyプロパティをfalseにすることで、リンクの作成を回避することができます。</p>\n<pre class=\"code lang-javascript\" data-lang=\"javascript\" data-unlink>twttr.anywhere(<span class=\"synIdentifier\">function</span> (T) <span class=\"synIdentifier\">{</span>\n  T(<span class=\"synConstant\">&quot;#main-content&quot;</span>).hovercards(<span class=\"synIdentifier\">{</span> linkify: <span class=\"synConstant\">false</span> <span class=\"synIdentifier\">}</span>);\n<span class=\"synIdentifier\">}</span>);\n</pre>\n    <blockquote>\n        <p>でも見た目がリンクじゃないとマウスオーバーなんてしないので、<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%A5%E6%A1%BC%A5%B6%A5%D3%A5%EA%A5%C6%A5%A3\">ユーザビリティ</a>的には微妙かなぁ・・。</p>\n\n    </blockquote>\n\n</div>\n<div class=\"section\">\n    <h4>inferオプション</h4>\n    <p>inferオプションを指定すると、hovercardsメソッドはlinkifyUsersメソッドを実行しません。<br />\nこれは、何らかの事情で既に<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/Twitter\">Twitter</a>のユーザー名がリンクになってる場合に有効です。<br />\n@<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/hoge\">hoge</a>を含むテキストがリンクになってる場合、そこにホバーカードを適応することができます。</p>\n<pre class=\"code lang-javascript\" data-lang=\"javascript\" data-unlink>twttr.anywhere(<span class=\"synIdentifier\">function</span> (T) <span class=\"synIdentifier\">{</span>\n　T(<span class=\"synConstant\">&quot;#main-content a.my-tweep&quot;</span>).hovercards(<span class=\"synIdentifier\">{</span>\n　　infer: <span class=\"synConstant\">true</span>\n　<span class=\"synIdentifier\">}</span>);\n<span class=\"synIdentifier\">}</span>);\n</pre>\n</div>\n<div class=\"section\">\n    <h4>usernameオプション</h4>\n    <p>これは、例えば画像のtitleなどの要素が<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/Twitter\">Twitter</a>のユーザーネームを含んでいて、それに対してホバーカードを設定したい場合に使用します。<br />\nhovercardsメソッドにusernameプロパティを渡し、その値としてDOMから取得した要素を指定します。<br />\n注：inferオプションと同じく、これを使用した場合、hovercardsメソッドはlinkifyUsersメソッドを実行しません。</p>\n<pre class=\"code lang-javascript\" data-lang=\"javascript\" data-unlink>twttr.anywhere(<span class=\"synIdentifier\">function</span> (T) <span class=\"synIdentifier\">{</span>\n　T(<span class=\"synConstant\">&quot;#section&gt;img&quot;</span>).hovercards(<span class=\"synIdentifier\">{</span> <span class=\"synComment\">// 画像にホバーカード</span>\n    username: <span class=\"synIdentifier\">function</span>(node) <span class=\"synIdentifier\">{</span>\n      <span class=\"synStatement\">return</span> node.alt; <span class=\"synComment\">// altを対象にする</span>\n    <span class=\"synIdentifier\">}</span>\n  <span class=\"synIdentifier\">}</span>);\n<span class=\"synIdentifier\">}</span>);\n</pre>\n    <blockquote>\n        <p>画像のaltに@<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/hoge\">hoge</a>がある場合、画像マウスオーバーで、そのユーザー名をホバーカードすることができるんですね。<br />\nそこまでしてホバーカードすることってあるんかなぁ・・ともｗ<br />\nあ、画像ギャラリーとかには使えるかも？</p>\n\n    </blockquote>\n<p>上述の注通り、inferオプションもusernameオプションも、linkifyUsersメソッドは実行しません。<br />\nそのため、他の要素に対してはリンク作成をしたいという場合は、別途hovercardsメソッドを呼ぶことで解決できます。</p>\n<pre class=\"code lang-javascript\" data-lang=\"javascript\" data-unlink>twttr.anywhere(<span class=\"synIdentifier\">function</span> (T) <span class=\"synIdentifier\">{</span>\n \n　T.hovercards();\n\n　T(<span class=\"synConstant\">&quot;#main-content a.my-tweep&quot;</span>).hovercards(<span class=\"synIdentifier\">{</span>\n　　username: <span class=\"synIdentifier\">function</span>(node) <span class=\"synIdentifier\">{</span>\n　　　<span class=\"synStatement\">return</span> node.title;\n    <span class=\"synIdentifier\">}</span>\n  <span class=\"synIdentifier\">}</span>);\n<span class=\"synIdentifier\">}</span>);\n</pre>\n</div>\n<div class=\"section\">\n    <h4>ホバーカードを最初から展開する</h4>\n    <p>デフォルトでは、ホバーカードに表示される情報は、ユーザー名とユーザーネーム、後はロケーションのみです。<br />\n「もっと読む」をクリックすることで、プロフィールやフォロー数などを確認することができます。<br />\nexpandedプロパティをtrueにすることで、最初から全て展開した状態にすることもできます。</p>\n<pre class=\"code lang-javascript\" data-lang=\"javascript\" data-unlink>twttr.anywhere(<span class=\"synIdentifier\">function</span> (T) <span class=\"synIdentifier\">{</span>\n　T(<span class=\"synConstant\">&quot;#main-content&quot;</span>).hovercards(<span class=\"synIdentifier\">{</span>\n　　expanded: <span class=\"synConstant\">true</span>\n　<span class=\"synIdentifier\">}</span>);\n<span class=\"synIdentifier\">}</span>);\n</pre>\n    <blockquote>\n        <p>このホバーカード、かなりイケてると個人的には思うのです。<br />\n普通の<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/REST%20API\">REST API</a>でこれだけの情報を取得して表示するのは中々に手間なので・・。</p>\n\n    </blockquote>\n\n</div>\n</div>\n<div class=\"section\">\n    <h3>フォローボタン</h3>\n    <p>フォローボタンを設置することで、簡単に<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/Twitter\">Twitter</a>のユーザーをフォローさせることができます。<br />\n<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/API\">API</a>クライアントに対して、フォローボタンを表示させたい要素を渡し、ユーザーネームを指定してfollowButtonメソッドを呼び出すだけで使用できます。<br />\n下記の例では、follow-twitterapiというIDをもつspanタグに対して、フォローボタンを表示させています。</p>\n<pre class=\"code lang-html\" data-lang=\"html\" data-unlink><span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">span</span><span class=\"synIdentifier\"> </span><span class=\"synType\">id</span><span class=\"synIdentifier\">=</span><span class=\"synConstant\">&quot;follow-twitterapi&quot;</span><span class=\"synIdentifier\">&gt;&lt;/</span><span class=\"synStatement\">span</span><span class=\"synIdentifier\">&gt;</span>\n<span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">script</span><span class=\"synIdentifier\"> </span><span class=\"synType\">type</span><span class=\"synIdentifier\">=</span><span class=\"synConstant\">&quot;text/javascript&quot;</span><span class=\"synIdentifier\">&gt;</span>\n\n<span class=\"synSpecial\">twttr.anywhere</span>(<span class=\"synIdentifier\">function</span><span class=\"synSpecial\"> </span>(<span class=\"synSpecial\">T</span>)<span class=\"synSpecial\"> </span><span class=\"synIdentifier\">{</span>\n<span class=\"synSpecial\">　T</span>(<span class=\"synConstant\">'#follow-twitterapi'</span>)<span class=\"synSpecial\">.followButton</span>(<span class=\"synConstant\">&quot;twitterapi&quot;</span>)<span class=\"synSpecial\">;</span>\n<span class=\"synIdentifier\">}</span>)<span class=\"synSpecial\">;</span>\n\n<span class=\"synIdentifier\">&lt;/</span><span class=\"synStatement\">script</span><span class=\"synIdentifier\">&gt;</span>\n</pre><p>この高機能なフォローボタンは、フォロー状況を随時表示します。<br />\n既にフォロー済の場合は「You're following @<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/hoge\">hoge</a>」、鍵付きユーザーをフォローした場合は、「Follow pending for @<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/hoge\">hoge</a>」、何らかのエラーでフォローに失敗した場合は、「Could not follow @<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/hoge\">hoge</a>」と表示されます。</p>\n\n    <blockquote>\n        <p>フォローボタン単体の<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/API\">API</a>も公開されてるので、デザインも見慣れないコレを無理にこっちを使う必要はないかもですね。<br />\n参考：<a href=\"https://dev.twitter.com/docs/follow-button\" target=\"_blank\" title=\"Follow Button | Twitter Developers\">Follow Button | Twitter Developers</a></p>\n\n    </blockquote>\n\n</div>\n<div class=\"section\">\n    <h3>ツイートボックス</h3>\n    <p>これを使えば、あなたのサイトやアプリから、直接ツイートを投稿することができます。ツイートボックスを表示したい要素を<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/API\">API</a>クライアントに渡し、tweetBoxメソッドを実行します。<br />\n下記の例では、tboxというIDのついた要素にツイートボックスを表示します。</p>\n<pre class=\"code lang-html\" data-lang=\"html\" data-unlink><span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">div</span><span class=\"synIdentifier\"> </span><span class=\"synType\">id</span><span class=\"synIdentifier\">=</span><span class=\"synConstant\">&quot;tbox&quot;</span><span class=\"synIdentifier\">&gt;&lt;/</span><span class=\"synStatement\">div</span><span class=\"synIdentifier\">&gt;</span>\n<span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">script</span><span class=\"synIdentifier\"> </span><span class=\"synType\">type</span><span class=\"synIdentifier\">=</span><span class=\"synConstant\">&quot;text/javascript&quot;</span><span class=\"synIdentifier\">&gt;</span>\n<span class=\"synSpecial\"> </span>\n<span class=\"synSpecial\">  twttr.anywhere</span>(<span class=\"synIdentifier\">function</span><span class=\"synSpecial\"> </span>(<span class=\"synSpecial\">T</span>)<span class=\"synSpecial\"> </span><span class=\"synIdentifier\">{</span>\n<span class=\"synSpecial\">    T</span>(<span class=\"synConstant\">&quot;#tbox&quot;</span>)<span class=\"synSpecial\">.tweetBox</span>()<span class=\"synSpecial\">;</span>\n<span class=\"synSpecial\">  </span><span class=\"synIdentifier\">}</span>)<span class=\"synSpecial\">;</span>\n<span class=\"synSpecial\"> </span>\n<span class=\"synIdentifier\">&lt;/</span><span class=\"synStatement\">script</span><span class=\"synIdentifier\">&gt;</span>\n</pre>\n<div class=\"section\">\n    <h4>オプション</h4>\n    <p>ツイートボックスには、いくつかの設定をすることができます。<br />\n設定はすべてオブジェクト<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%A5%EA%A5%C6%A5%E9%A5%EB\">リテラル</a>でtweetBoxメソッドに渡します。<br />\n下記の例では、width、height、初期表示文言をカスタマイズしています。</p>\n<pre class=\"code lang-html\" data-lang=\"html\" data-unlink><span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">div</span><span class=\"synIdentifier\"> </span><span class=\"synType\">id</span><span class=\"synIdentifier\">=</span><span class=\"synConstant\">&quot;tbox&quot;</span><span class=\"synIdentifier\">&gt;&lt;/</span><span class=\"synStatement\">div</span><span class=\"synIdentifier\">&gt;</span>\n<span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">script</span><span class=\"synIdentifier\"> </span><span class=\"synType\">type</span><span class=\"synIdentifier\">=</span><span class=\"synConstant\">&quot;text/javascript&quot;</span><span class=\"synIdentifier\">&gt;</span>\n<span class=\"synSpecial\"> </span>\n<span class=\"synSpecial\">  twttr.anywhere</span>(<span class=\"synIdentifier\">function</span><span class=\"synSpecial\"> </span>(<span class=\"synSpecial\">T</span>)<span class=\"synSpecial\"> </span><span class=\"synIdentifier\">{</span>\n<span class=\"synSpecial\"> </span>\n<span class=\"synSpecial\">    T</span>(<span class=\"synConstant\">&quot;#tbox&quot;</span>)<span class=\"synSpecial\">.tweetBox</span>(<span class=\"synIdentifier\">{</span>\n<span class=\"synSpecial\">      height: </span>100<span class=\"synSpecial\">,</span>\n<span class=\"synSpecial\">      width: </span>400<span class=\"synSpecial\">,</span>\n<span class=\"synSpecial\">      defaultContent: </span><span class=\"synConstant\">&quot;&lt;YOUR DEFAULT TWEETBOX CONTENT HERE&gt;&quot;</span>\n<span class=\"synSpecial\">    </span><span class=\"synIdentifier\">}</span>)<span class=\"synSpecial\">;</span>\n<span class=\"synSpecial\"> </span>\n<span class=\"synSpecial\">  </span><span class=\"synIdentifier\">}</span>)<span class=\"synSpecial\">;</span>\n<span class=\"synSpecial\"> </span>\n<span class=\"synIdentifier\">&lt;/</span><span class=\"synStatement\">script</span><span class=\"synIdentifier\">&gt;</span>\n</pre><p>下表は、オプションとして使用できるプロパティと値の一覧です。</p>\n\n</div>\n<div class=\"section\">\n    <h4>ツイートボックスのオプション一覧</h4>\n    \n<table>\n    <tr>\n    <th>プロパティ</th>\n    <th>型</th>\n    <th>初期値</th>\n    <th>説明</th>\n    </tr>\n    <tr>\n    <th>counter</th>\n    <td>Boolean</td>\n    <td>true</td>\n    <td>文字数カウンターを設置します。</td>\n    </tr>\n    <tr>\n    <th>height</th>\n    <td>Number</td>\n    <td>65 (px)</td>\n    <td>ツイートボックスの高さを設定。</td>\n    </tr>\n    <tr>\n    <th>width</th>\n    <td>Number</td>\n    <td>515 (px)</td>\n    <td>ツイートボックスの幅を設定。</td>\n    </tr>\n    <tr>\n    <th>label</th>\n    <td>String</td>\n    <td>\"What's happening?\"</td>\n    <td>ツイートボックスの上部に表示する文字。</td>\n    </tr>\n    <tr>\n    <th>defaultContent</th>\n    <td>String</td>\n    <td>none</td>\n    <td>ツイートボックスに初期表示する文言。@mentionや#hashtagなどに便利。</td>\n    </tr>\n    <tr>\n    <th>onTweet</th>\n    <td>Function</td>\n    <td>none</td>\n    <td>ツイートボックスからの投稿完了イベント。イベントリスナーには、ツイート本文のみと、HTMLでのツイートが渡されます。</td>\n    </tr>\n    <tr>\n    <th>data</th>\n    <td>Object</td>\n    <td>none</td>\n    <td>投稿時のオプションを設定。REST/updateのオプションが指定できます。</td>\n    </tr>\n</table>\n    <blockquote>\n        <p>REST/updateの詳細は、<a href=\"https://dev.twitter.com/docs/api/1/post/statuses/update\" target=\"_blank\" title=\"POST statuses/update | Twitter Developers\">POST statuses/update | Twitter Developers</a>を参照。<br />\nもちろんサーバーサイドで実装することもできますが、このお手軽さは魅力ですね！</p>\n\n    </blockquote>\n\n</div>\n</div>\n<div class=\"section\">\n    <h3>ログイン機能</h3>\n    <p>ホバーカードに表示されるプロフィールなど、@Anywhereの機能のいくつかはユーザーの認証なしで利用することができます。<br />\nしかしフォローボタンから他のユーザーをフォローする場合などは、ログイン認証を行う必要があります。<br />\n@Anywhereは、そのための機能も提供しています。</p><p>\"Connect with <a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/Twitter\">Twitter</a>\"ボタンは、<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/Twitter\">Twitter</a>と安全に認証する方法を提供します。<br />\nこれによって、ユーザーは<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/API\">API</a>を呼び出す際に使用するアクセス<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%A5%C8%A1%BC%A5%AF\">トーク</a>ンを、あなたのアプリケーションに委ねることができます。</p><p>\"Connect with <a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/Twitter\">Twitter</a>\"ボタンを表示するには、<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/API\">API</a>クライアントに対してボタンを表示させたい要素を渡し、connectButtonメソッドを呼び出します。</p><p>以下では、loginというIDののついたspanタグ内に、\"Connect with <a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/Twitter\">Twitter</a>\"ボタンを表示しています。</p>\n<pre class=\"code lang-html\" data-lang=\"html\" data-unlink><span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">span</span><span class=\"synIdentifier\"> </span><span class=\"synType\">id</span><span class=\"synIdentifier\">=</span><span class=\"synConstant\">&quot;login&quot;</span><span class=\"synIdentifier\">&gt;&lt;/</span><span class=\"synStatement\">span</span><span class=\"synIdentifier\">&gt;</span>\n<span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">script</span><span class=\"synIdentifier\"> </span><span class=\"synType\">type</span><span class=\"synIdentifier\">=</span><span class=\"synConstant\">&quot;text/javascript&quot;</span><span class=\"synIdentifier\">&gt;</span>\n<span class=\"synSpecial\"> </span>\n<span class=\"synSpecial\">  twttr.anywhere</span>(<span class=\"synIdentifier\">function</span><span class=\"synSpecial\"> </span>(<span class=\"synSpecial\">T</span>)<span class=\"synSpecial\"> </span><span class=\"synIdentifier\">{</span>\n<span class=\"synSpecial\">    T</span>(<span class=\"synConstant\">&quot;#login&quot;</span>)<span class=\"synSpecial\">.connectButton</span>()<span class=\"synSpecial\">;</span>\n<span class=\"synSpecial\">  </span><span class=\"synIdentifier\">}</span>)<span class=\"synSpecial\">;</span>\n<span class=\"synSpecial\"> </span>\n<span class=\"synIdentifier\">&lt;/</span><span class=\"synStatement\">script</span><span class=\"synIdentifier\">&gt;</span>\n</pre><p>\"Connect with <a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/Twitter\">Twitter</a>\"ボタンは、そのサイズを指定することができます。<br />\nsmall、medium、large、xlargeから指定することができ、デフォルトではmediumです。</p>\n<pre class=\"code lang-html\" data-lang=\"html\" data-unlink><span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">span</span><span class=\"synIdentifier\"> </span><span class=\"synType\">id</span><span class=\"synIdentifier\">=</span><span class=\"synConstant\">&quot;login&quot;</span><span class=\"synIdentifier\">&gt;&lt;/</span><span class=\"synStatement\">span</span><span class=\"synIdentifier\">&gt;</span>\n<span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">script</span><span class=\"synIdentifier\"> </span><span class=\"synType\">type</span><span class=\"synIdentifier\">=</span><span class=\"synConstant\">&quot;text/javascript&quot;</span><span class=\"synIdentifier\">&gt;</span>\n<span class=\"synSpecial\"> </span>\n<span class=\"synSpecial\">  twttr.anywhere</span>(<span class=\"synIdentifier\">function</span><span class=\"synSpecial\"> </span>(<span class=\"synSpecial\">T</span>)<span class=\"synSpecial\"> </span><span class=\"synIdentifier\">{</span>\n<span class=\"synSpecial\">    T</span>(<span class=\"synConstant\">&quot;#login&quot;</span>)<span class=\"synSpecial\">.connectButton</span>(<span class=\"synIdentifier\">{</span><span class=\"synSpecial\"> size: </span><span class=\"synConstant\">&quot;large&quot;</span><span class=\"synSpecial\"> </span><span class=\"synIdentifier\">}</span>)<span class=\"synSpecial\">;</span>\n<span class=\"synSpecial\">  </span><span class=\"synIdentifier\">}</span>)<span class=\"synSpecial\">;</span>\n<span class=\"synSpecial\"> </span>\n<span class=\"synIdentifier\">&lt;/</span><span class=\"synStatement\">script</span><span class=\"synIdentifier\">&gt;</span>\n</pre>\n<div class=\"section\">\n    <h4>オリジナルのログインボタン</h4>\n    <p>もし標準の\"Connect with <a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/Twitter\">Twitter</a>\"ボタンの見た目があなたのサイトにそぐわない場合は、独自のログインボタンを作成することもできます。<br />\n生成される全ての<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/API\">API</a>クライアントはsigninメソッドを持っているので、自分でHTMLと<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/CSS\">CSS</a>で作ったボタンに対して、クリックイベントでsigninメソッドをバンドルするだけです。</p>\n<pre class=\"code lang-html\" data-lang=\"html\" data-unlink><span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">button</span><span class=\"synIdentifier\"> </span><span class=\"synType\">type</span><span class=\"synIdentifier\">=</span><span class=\"synConstant\">&quot;button&quot;</span><span class=\"synIdentifier\"> </span><span class=\"synType\">id</span><span class=\"synIdentifier\">=</span><span class=\"synConstant\">&quot;signin-btn&quot;</span><span class=\"synIdentifier\">&gt;</span>Connect with Twitter<span class=\"synIdentifier\">&lt;/</span><span class=\"synStatement\">button</span><span class=\"synIdentifier\">&gt;</span>\n<span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">script</span><span class=\"synIdentifier\"> </span><span class=\"synType\">type</span><span class=\"synIdentifier\">=</span><span class=\"synConstant\">&quot;text/javascript&quot;</span><span class=\"synIdentifier\">&gt;</span>\n<span class=\"synSpecial\"> </span>\n<span class=\"synSpecial\">  twttr.anywhere</span>(<span class=\"synIdentifier\">function</span><span class=\"synSpecial\"> </span>(<span class=\"synSpecial\">T</span>)<span class=\"synSpecial\"> </span><span class=\"synIdentifier\">{</span><span class=\"synSpecial\"> </span>\n<span class=\"synSpecial\">    </span><span class=\"synStatement\">document</span><span class=\"synSpecial\">.getElementById</span>(<span class=\"synConstant\">&quot;signin-btn&quot;</span>)<span class=\"synSpecial\">.onclick = </span><span class=\"synIdentifier\">function</span><span class=\"synSpecial\"> </span>()<span class=\"synSpecial\"> </span><span class=\"synIdentifier\">{</span>\n<span class=\"synSpecial\">      T.signIn</span>()<span class=\"synSpecial\">;</span>\n<span class=\"synSpecial\">    </span><span class=\"synIdentifier\">}</span><span class=\"synSpecial\">;</span>\n<span class=\"synSpecial\"> </span>\n<span class=\"synSpecial\">  </span><span class=\"synIdentifier\">}</span>)<span class=\"synSpecial\">;</span>\n<span class=\"synSpecial\"> </span>\n<span class=\"synIdentifier\">&lt;/</span><span class=\"synStatement\">script</span><span class=\"synIdentifier\">&gt;</span>\n</pre>\n</div>\n<div class=\"section\">\n    <h4>認証フロー</h4>\n    <p>サイトを訪れたユーザーが、既に<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/Twitter\">Twitter</a>にログイン済の場合は、単純に「アプリとの連携を許可しますか？」というポップアップが表示されます。<br />\nもしログイン済でない場合は、ログインを促すポップアップを表示します。</p>\n\n<div class=\"section\">\n    <h5>ログイン状態を判断する</h5>\n    <p>いくつかの方法で、ユーザーがあなたのアプリケーションを認証しているか・ログインしているかを判断することができます。</p>\n\n</div>\n<div class=\"section\">\n    <h5>authCompleteイベントとsingOutイベント</h5>\n    <p>これらのイベントによって、ユーザーがあなたのアプリケーションを認証しているか・ログインしているかを判断することができます。</p><p>connectButtonメソッドにauthCompleteイベントとsingOutイベントを引数として渡すことが可能です。<br />\nauthCompleteに対しては、唯一の引数として「ログインしたユーザー」の情報が渡されます。</p>\n<pre class=\"code lang-javascript\" data-lang=\"javascript\" data-unlink>  twttr.anywhere(<span class=\"synIdentifier\">function</span> (T) <span class=\"synIdentifier\">{</span>\n    T(<span class=\"synConstant\">&quot;#login&quot;</span>).connectButton(<span class=\"synIdentifier\">{</span>\n      authComplete: <span class=\"synIdentifier\">function</span>(user) <span class=\"synIdentifier\">{</span>\n        <span class=\"synComment\">// 認証後に発火</span>\n      <span class=\"synIdentifier\">}</span>,\n      signOut: <span class=\"synIdentifier\">function</span>() <span class=\"synIdentifier\">{</span>\n        <span class=\"synComment\">// ログアウトしたら発火</span>\n      <span class=\"synIdentifier\">}</span>\n    <span class=\"synIdentifier\">}</span>);\n  <span class=\"synIdentifier\">}</span>);\n</pre><p>authCompleteイベントとsingOutイベントは、どちらも<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/API\">API</a>クライアントから参照することができるので、独自の機能をバインドすることもできます。<br />\n以下に例を示します。</p>\n<pre class=\"code lang-javascript\" data-lang=\"javascript\" data-unlink>  twttr.anywhere(<span class=\"synIdentifier\">function</span> (T) <span class=\"synIdentifier\">{</span>\n \n    T.bind(<span class=\"synConstant\">&quot;authComplete&quot;</span>, <span class=\"synIdentifier\">function</span> (e, user) <span class=\"synIdentifier\">{</span>\n      <span class=\"synComment\">// authCompleteに機能を追加</span>\n    <span class=\"synIdentifier\">}</span>);\n \n    T.bind(<span class=\"synConstant\">&quot;signOut&quot;</span>, <span class=\"synIdentifier\">function</span> (e) <span class=\"synIdentifier\">{</span>\n      <span class=\"synComment\">// singOutに機能を追加</span>\n    <span class=\"synIdentifier\">}</span>);\n \n  <span class=\"synIdentifier\">}</span>);\n</pre>\n</div>\n<div class=\"section\">\n    <h5>ログインユーザーの情報を使う</h5>\n    <p>isConnectedメソッドは、ユーザーのログイン状態を判別するのに便利です。ログイン時に、currentUserというプロパティが設定され、ユーザーの情報を取得することができます。</p><p>以下の例では、<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/jQuery\">jQuery</a>を使ってログインしていれば名前と<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%A5%D7%A5%ED%A5%D5%A5%A3%A1%BC%A5%EB%B2%E8%C1%FC\">プロフィール画像</a>を、ログインしてなければログインボタンを表示します。</p>\n<pre class=\"code lang-html\" data-lang=\"html\" data-unlink><span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">span</span><span class=\"synIdentifier\"> </span><span class=\"synType\">id</span><span class=\"synIdentifier\">=</span><span class=\"synConstant\">&quot;twitter-connect-placeholder&quot;</span><span class=\"synIdentifier\">&gt;&lt;/</span><span class=\"synStatement\">span</span><span class=\"synIdentifier\">&gt;</span>\n<span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">script</span><span class=\"synIdentifier\"> </span><span class=\"synType\">type</span><span class=\"synIdentifier\">=</span><span class=\"synConstant\">&quot;text/javascript&quot;</span><span class=\"synIdentifier\">&gt;</span>\n<span class=\"synSpecial\">  twttr.anywhere</span>(<span class=\"synIdentifier\">function</span><span class=\"synSpecial\"> </span>(<span class=\"synSpecial\">T</span>)<span class=\"synSpecial\"> </span><span class=\"synIdentifier\">{</span>\n<span class=\"synSpecial\"> </span>\n<span class=\"synSpecial\">    </span><span class=\"synIdentifier\">var</span><span class=\"synSpecial\"> currentUser,</span>\n<span class=\"synSpecial\">        screenName,</span>\n<span class=\"synSpecial\">        profileImage,</span>\n<span class=\"synSpecial\">        profileImageTag;</span>\n<span class=\"synSpecial\"> </span>\n<span class=\"synSpecial\">    </span><span class=\"synStatement\">if</span><span class=\"synSpecial\"> </span>(<span class=\"synSpecial\">T.isConnected</span>())<span class=\"synSpecial\"> </span><span class=\"synIdentifier\">{</span>\n<span class=\"synSpecial\">      currentUser = T.currentUser;</span>\n<span class=\"synSpecial\">      screenName = currentUser.data</span>(<span class=\"synConstant\">'screen_name'</span>)<span class=\"synSpecial\">;</span>\n<span class=\"synSpecial\">      profileImage = currentUser.data</span>(<span class=\"synConstant\">'profile_image_url'</span>)<span class=\"synSpecial\">;</span>\n<span class=\"synSpecial\">      profileImageTag = </span><span class=\"synConstant\">&quot;&lt;img src='&quot;</span><span class=\"synSpecial\"> + profileImage + </span><span class=\"synConstant\">&quot;'/&gt;&quot;</span><span class=\"synSpecial\">;</span>\n<span class=\"synSpecial\">      $</span>(<span class=\"synConstant\">'#twitter-connect-placeholder'</span>)<span class=\"synSpecial\">.append</span>(<span class=\"synConstant\">&quot;Logged in as &quot;</span><span class=\"synSpecial\"> + profileImageTag + </span><span class=\"synConstant\">&quot; &quot;</span><span class=\"synSpecial\"> + screenName</span>)<span class=\"synSpecial\">;</span>\n<span class=\"synSpecial\">    </span><span class=\"synIdentifier\">}</span><span class=\"synSpecial\"> </span><span class=\"synStatement\">else</span><span class=\"synSpecial\"> </span><span class=\"synIdentifier\">{</span>\n<span class=\"synSpecial\">      T</span>(<span class=\"synConstant\">&quot;#twitter-connect-placeholder&quot;</span>)<span class=\"synSpecial\">.connectButton</span>()<span class=\"synSpecial\">;</span>\n<span class=\"synSpecial\">    </span><span class=\"synIdentifier\">}</span><span class=\"synSpecial\">;</span>\n<span class=\"synSpecial\"> </span>\n<span class=\"synSpecial\">  </span><span class=\"synIdentifier\">}</span>)<span class=\"synSpecial\">;</span>\n<span class=\"synIdentifier\">&lt;/</span><span class=\"synStatement\">script</span><span class=\"synIdentifier\">&gt;</span>\n</pre><p>一度ユーザーがアプリケーションを認証すると、<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/twitter\">twitter</a>_anywhere_identityというログインしたユーザーのIDを識別する<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/Cookie\">Cookie</a>を発行するようになります。<br />\nサーバーサイドでログインユーザーを管理する場合は、これを使うことができます。<br />\n<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/Cookie\">Cookie</a>のフォーマットは、user_<a href=\"http://blog.hatena.ne.jp/signature/\">id:signature</a> となっています。<br />\nこの情報を使って、本当に<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/Twitter\">Twitter</a>で認証されたかどうかをサーバーサイドで判断することをオススメします。<br />\nこの情報を照合するには、user_idに取得したConsumer Secretを足して、<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/SHA1\">SHA1</a><a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%A5%A2%A5%EB%A5%B4%A5%EA%A5%BA%A5%E0\">アルゴリズム</a>でハッシュ化します。<br />\nこの結果が、<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/Cookie\">Cookie</a>内のsignatureと一致すれば、照合できたことになります。</p>\n<pre class=\"code lang-ruby\" data-lang=\"ruby\" data-unlink><span class=\"synType\">Digest</span>::<span class=\"synType\">SHA1</span>.hexdigest(user_id + consumer_secret)\n</pre>\n    <blockquote>\n        <p>ここでやっと、最初にメモしたConsumer Secretが登場します。<br />\n公式のサンプルは<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/Ruby\">Ruby</a>しかないのですが、<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/PHP\">PHP</a>でもなんでもOKです。<br />\n<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/PHP\">PHP</a>での認証部分は、後でまた記事にしようと思います。</p>\n\n    </blockquote>\n\n</div>\n<div class=\"section\">\n    <h5>ログアウト</h5>\n    <p>ログイン機能を提供するのであれば、もちろんログアウト機能も提供すべきです。twttr.anywhere.signOutメソッドを使うことで、ユーザーをログアウトさせることができます。<br />\n以下はもっともシンプルなログアウトボタンの例です。</p>\n<pre class=\"code lang-html\" data-lang=\"html\" data-unlink><span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">button</span><span class=\"synIdentifier\"> </span><span class=\"synType\">type</span><span class=\"synIdentifier\">=</span><span class=\"synConstant\">&quot;button&quot;</span><span class=\"synIdentifier\"> </span><span class=\"synSpecial\">onclick=&quot;twttr.anywhere.signOut</span>()<span class=\"synSpecial\">;&quot;</span><span class=\"synIdentifier\">&gt;</span>Sign out of Twitter<span class=\"synIdentifier\">&lt;/</span><span class=\"synStatement\">button</span><span class=\"synIdentifier\">&gt;</span>\n</pre><p>その他にも、ユーザーのログイン状態から判断して、ログインボタンとログアウトボタンを出し分けることもできます。<br />\n以下に<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/jQuery\">jQuery</a>を使用した例を示します。</p>\n<pre class=\"code lang-html\" data-lang=\"html\" data-unlink><span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">span</span><span class=\"synIdentifier\"> </span><span class=\"synType\">id</span><span class=\"synIdentifier\">=</span><span class=\"synConstant\">&quot;login-logout&quot;</span><span class=\"synIdentifier\">&gt;&lt;/</span><span class=\"synStatement\">span</span><span class=\"synIdentifier\">&gt;</span>\n<span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">script</span><span class=\"synIdentifier\"> </span><span class=\"synType\">type</span><span class=\"synIdentifier\">=</span><span class=\"synConstant\">&quot;text/javascript&quot;</span><span class=\"synIdentifier\">&gt;</span>\n<span class=\"synSpecial\"> </span>\n<span class=\"synSpecial\">  jQuery</span>(<span class=\"synIdentifier\">function</span><span class=\"synSpecial\"> </span>()<span class=\"synSpecial\"> </span><span class=\"synIdentifier\">{</span>\n<span class=\"synSpecial\"> </span>\n<span class=\"synSpecial\">    twttr.anywhere</span>(<span class=\"synIdentifier\">function</span><span class=\"synSpecial\"> </span>(<span class=\"synSpecial\">T</span>)<span class=\"synSpecial\"> </span><span class=\"synIdentifier\">{</span>\n<span class=\"synSpecial\"> </span>\n<span class=\"synSpecial\">      </span><span class=\"synStatement\">if</span><span class=\"synSpecial\"> </span>(<span class=\"synSpecial\">T.isConnected</span>())<span class=\"synSpecial\"> </span><span class=\"synIdentifier\">{</span>\n<span class=\"synSpecial\"> </span>\n<span class=\"synSpecial\">        $</span>(<span class=\"synConstant\">&quot;#login-logout&quot;</span>)<span class=\"synSpecial\">.append</span>(<span class=\"synConstant\">'&lt;button id=&quot;signout&quot; type=&quot;button&quot;&gt;Sign out of Twitter&lt;/button&gt;'</span>)<span class=\"synSpecial\">;</span>\n<span class=\"synSpecial\"> </span>\n<span class=\"synSpecial\">        $</span>(<span class=\"synConstant\">&quot;#signout&quot;</span>)<span class=\"synSpecial\">.bind</span>(<span class=\"synConstant\">&quot;click&quot;</span><span class=\"synSpecial\">, </span><span class=\"synIdentifier\">function</span><span class=\"synSpecial\"> </span>()<span class=\"synSpecial\"> </span><span class=\"synIdentifier\">{</span>\n<span class=\"synSpecial\">          twttr.anywhere.signOut</span>()<span class=\"synSpecial\">;</span>\n<span class=\"synSpecial\">        </span><span class=\"synIdentifier\">}</span>)<span class=\"synSpecial\">;</span>\n<span class=\"synSpecial\"> </span>\n<span class=\"synSpecial\">      </span><span class=\"synIdentifier\">}</span>\n<span class=\"synSpecial\">      </span><span class=\"synStatement\">else</span><span class=\"synSpecial\"> </span><span class=\"synIdentifier\">{</span>\n<span class=\"synSpecial\">        T</span>(<span class=\"synConstant\">&quot;#login-logout&quot;</span>)<span class=\"synSpecial\">.connectButton</span>()<span class=\"synSpecial\">;</span>\n<span class=\"synSpecial\">      </span><span class=\"synIdentifier\">}</span>\n<span class=\"synSpecial\"> </span>\n<span class=\"synSpecial\">    </span><span class=\"synIdentifier\">}</span>)<span class=\"synSpecial\">;</span>\n<span class=\"synSpecial\"> </span>\n<span class=\"synSpecial\">  </span><span class=\"synIdentifier\">}</span>)<span class=\"synSpecial\">;</span>\n<span class=\"synSpecial\"> </span>\n<span class=\"synIdentifier\">&lt;/</span><span class=\"synStatement\">script</span><span class=\"synIdentifier\">&gt;</span>\n</pre><p>YUI3ライブラリでやる場合の例は以下です。</p>\n<pre class=\"code lang-html\" data-lang=\"html\" data-unlink><span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">span</span><span class=\"synIdentifier\"> </span><span class=\"synType\">id</span><span class=\"synIdentifier\">=</span><span class=\"synConstant\">&quot;login-logout&quot;</span><span class=\"synIdentifier\">&gt;&lt;/</span><span class=\"synStatement\">span</span><span class=\"synIdentifier\">&gt;</span>\n<span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">script</span><span class=\"synIdentifier\"> </span><span class=\"synType\">type</span><span class=\"synIdentifier\">=</span><span class=\"synConstant\">&quot;text/javascript&quot;</span><span class=\"synIdentifier\">&gt;</span>\n<span class=\"synSpecial\"> </span>\n<span class=\"synSpecial\">  YUI</span>()<span class=\"synSpecial\">.use</span>(<span class=\"synConstant\">&quot;node&quot;</span><span class=\"synSpecial\">, </span><span class=\"synIdentifier\">function</span>(<span class=\"synSpecial\">Y</span>)<span class=\"synSpecial\"> </span><span class=\"synIdentifier\">{</span>\n<span class=\"synSpecial\"> </span>\n<span class=\"synSpecial\">    Y.on</span>(<span class=\"synConstant\">&quot;domready&quot;</span><span class=\"synSpecial\">, </span><span class=\"synIdentifier\">function</span><span class=\"synSpecial\"> </span>()<span class=\"synSpecial\"> </span><span class=\"synIdentifier\">{</span>\n<span class=\"synSpecial\"> </span>\n<span class=\"synSpecial\">      twttr.anywhere</span>(<span class=\"synIdentifier\">function</span><span class=\"synSpecial\"> </span>(<span class=\"synSpecial\">T</span>)<span class=\"synSpecial\"> </span><span class=\"synIdentifier\">{</span>\n<span class=\"synSpecial\"> </span>\n<span class=\"synSpecial\">        </span><span class=\"synStatement\">if</span><span class=\"synSpecial\"> </span>(<span class=\"synSpecial\">T.isConnected</span>())<span class=\"synSpecial\"> </span><span class=\"synIdentifier\">{</span>\n<span class=\"synSpecial\"> </span>\n<span class=\"synSpecial\">          Y.one</span>(<span class=\"synConstant\">&quot;#login-logout&quot;</span>)<span class=\"synSpecial\">.append</span>(<span class=\"synConstant\">'&lt;button id=&quot;signout&quot; type=&quot;button&quot;&gt;Sign out of Twitter&lt;/button&gt;'</span>)<span class=\"synSpecial\">;</span>\n<span class=\"synSpecial\"> </span>\n<span class=\"synSpecial\">          Y.one</span>(<span class=\"synConstant\">&quot;#signout&quot;</span>)<span class=\"synSpecial\">.on</span>(<span class=\"synConstant\">&quot;click&quot;</span><span class=\"synSpecial\">, </span><span class=\"synIdentifier\">function</span><span class=\"synSpecial\"> </span>()<span class=\"synSpecial\"> </span><span class=\"synIdentifier\">{</span>\n<span class=\"synSpecial\">            twttr.anywhere.signOut</span>()<span class=\"synSpecial\">;</span>\n<span class=\"synSpecial\">          </span><span class=\"synIdentifier\">}</span>)<span class=\"synSpecial\">;</span>\n<span class=\"synSpecial\"> </span>\n<span class=\"synSpecial\">        </span><span class=\"synIdentifier\">}</span>\n<span class=\"synSpecial\">        </span><span class=\"synStatement\">else</span><span class=\"synSpecial\"> </span><span class=\"synIdentifier\">{</span>\n<span class=\"synSpecial\">          T</span>(<span class=\"synConstant\">&quot;#login-logout&quot;</span>)<span class=\"synSpecial\">.connectButton</span>()<span class=\"synSpecial\">;</span>\n<span class=\"synSpecial\">        </span><span class=\"synIdentifier\">}</span>\n<span class=\"synSpecial\"> </span>\n<span class=\"synSpecial\">      </span><span class=\"synIdentifier\">}</span>)<span class=\"synSpecial\">;</span>\n<span class=\"synSpecial\"> </span>\n<span class=\"synSpecial\">    </span><span class=\"synIdentifier\">}</span>)<span class=\"synSpecial\">;</span>\n<span class=\"synSpecial\"> </span>\n<span class=\"synSpecial\">  </span><span class=\"synIdentifier\">}</span>)<span class=\"synSpecial\">;</span>\n<span class=\"synIdentifier\">&lt;/</span><span class=\"synStatement\">script</span><span class=\"synIdentifier\">&gt;</span>\n</pre>\n</div>\n<div class=\"section\">\n    <h5>currentUserの持つプロパティ</h5>\n    <p>ログインしているユーザーの情報は、currentUserプロパティから取得することができます。<br />\nこのユーザー情報のオブジェクトはdataメソッドを持っており、取得したい情報を指定してやることで、その情報を取得できます。<br />\n以下がその一覧です。</p>\n\n<table>\n    <tr>\n    <th>Name</th>\n    <th>Type</th>\n    </tr>\n    <tr>\n    <td>profile_background_color</td>\n    <td>String</td>\n    </tr>\n    <tr>\n    <td>description</td>\n    <td>String</td>\n    </tr>\n    <tr>\n    <td>profile_text_color</td>\n    <td>String</td>\n    </tr>\n    <tr>\n    <td>followers_count</td>\n    <td>Number</td>\n    </tr>\n    <tr>\n    <td>lang</td>\n    <td>String</td>\n    </tr>\n    <tr>\n    <td>time_zone</td>\n    <td>String</td>\n    </tr>\n    <tr>\n    <td><a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/utc\">utc</a>_offset</td>\n    <td>Number</td>\n    </tr>\n    <tr>\n    <td>friends_count</td>\n    <td>Number</td>\n    </tr>\n    <tr>\n    <td>profile_link_color</td>\n    <td>String</td>\n    </tr>\n    <tr>\n    <td>statuses_count</td>\n    <td>Number</td>\n    </tr>\n    <tr>\n    <td>created_at</td>\n    <td>String</td>\n    </tr>\n    <tr>\n    <td>following</td>\n    <td>Boolean</td>\n    </tr>\n    <tr>\n    <td>favourites_count</td>\n    <td>Number</td>\n    </tr>\n    <tr>\n    <td>profile_<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/sidebar\">sidebar</a>_fill_color</td>\n    <td>String</td>\n    </tr>\n    <tr>\n    <td>contributors_enabled</td>\n    <td>Boolean</td>\n    </tr>\n    <tr>\n    <td>notifications</td>\n    <td>Boolean</td>\n    </tr>\n    <tr>\n    <td>protected</td>\n    <td>Boolean</td>\n    </tr>\n    <tr>\n    <td>profile_image_url</td>\n    <td>String</td>\n    </tr>\n    <tr>\n    <td>geo_enabled</td>\n    <td>Boolean</td>\n    </tr>\n    <tr>\n    <td>profile_background_image_url</td>\n    <td>String</td>\n    </tr>\n    <tr>\n    <td>profile_<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/sidebar\">sidebar</a>_border_color</td>\n    <td>String</td>\n    </tr>\n    <tr>\n    <td>url</td>\n    <td>String</td>\n    </tr>\n    <tr>\n    <td>location</td>\n    <td>String</td>\n    </tr>\n    <tr>\n    <td>name</td>\n    <td>String</td>\n    </tr>\n    <tr>\n    <td>screen_name</td>\n    <td>String</td>\n    </tr>\n    <tr>\n    <td>id</td>\n    <td>Number</td>\n    </tr>\n    <tr>\n    <td>verified</td>\n    <td>Boolean</td>\n    </tr>\n    <tr>\n    <td>profile_background_tile</td>\n    <td>Boolean</td>\n    </tr>\n</table>\n</div>\n</div>\n</div>\n<div class=\"section\">\n    <h3>ベストプ<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%A5%E9%A5%AF\">ラク</a>ティス</h3>\n    <p>@Anywhereでは、<a href=\"http://tools.ietf.org/id/draft-ietf-oauth-v2-01.html\" target=\"_blank\" title=\"OAuth 2.0 specification\">OAuth 2.0 specification</a>にある\"User-agent flow\"に従って、ユーザー認証後はその認証を行ったページURLにリダイレクトするようになっています。<br />\nanywhere.jsのファイルを出来る限りソースの上部に記述することで、アクセス<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%A5%C8%A1%BC%A5%AF\">トーク</a>ン取得のフローをより迅速に行うことができます。</p><p><a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/JavaScript\">JavaScript</a>ファイルをページ下部に記述することは、一般的にサイトのパフォーマンス向上の常套手段となっています。<br />\nしかし、@AnywhereのJsファイルに限っては、ページ上部に可能な限り配置するようにしてください。このJsファイルは3KBと軽量で、なおかつ<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/Gzip\">Gzip</a>圧縮され提供されます。その上、@Anywhereに関する機能は全て非同期に読み込まれ、サイトパフォーマンスにはほとんど影響しないからです。</p><p>@AnywhereのJsファイルをページ下部に記述した場合、いくつか知っておくべき点があります。<br />\nまず最初に、パフォーマンスへの影響が考えられます。<br />\nポップアップでの<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/Twitter\">Twitter</a>のログイン認証から、認証元のページにリダイレクトしたとしても、@AnywhereのJsファイルが読み込まれるまで、ポップアップが消えることはありません。ポップアップが認証後すぐに閉じられないということは、言うまでもなくユーザービリティの低下につながります。</p><p>その他にも、GoogleAnalyticsなどの計測ツールが二重カウントするなど、誤った情報を提供することがあります。</p>\n\n<div class=\"section\">\n    <h4>独自のコールバックURLを使用する</h4>\n    <p>もしページ上部に@AnywhereのJsファイルを記述できない理由がある場合は、特定のURLにリダイレクトさせることもできます。<br />\nこれは空のページでも構いませんが、@AnywhereのJsファイルを読み込んでおり、かつ@Anywhereに登録しているURLと、<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%A5%C9%A5%E1%A5%A4%A5%F3\">ドメイン</a>・<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%A5%B5%A5%D6%A5%C9%A5%E1%A5%A4%A5%F3\">サブドメイン</a>共に一致している必要があります。</p>\n<pre class=\"code lang-javascript\" data-lang=\"javascript\" data-unlink>twttr.anywhere.config(<span class=\"synIdentifier\">{</span> callbackURL: <span class=\"synConstant\">&quot;http://www.yoursite.com/anywhere-complete&quot;</span> <span class=\"synIdentifier\">}</span>);\n \ntwttr.anywhere(<span class=\"synIdentifier\">function</span> (T) <span class=\"synIdentifier\">{</span>\n  T.hovercards();\n<span class=\"synIdentifier\">}</span>);\n</pre><p>twttr.anywhere.configは、anywhere関数を実行する前に設定する必要があります。<br />\nそして、コールバックURLは@Anywhereに登録しているURLと、<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%A5%C9%A5%E1%A5%A4%A5%F3\">ドメイン</a>・<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%A5%B5%A5%D6%A5%C9%A5%E1%A5%A4%A5%F3\">サブドメイン</a>共に一致している必要があります。</p>\n\n</div>\n</div>\n<div class=\"section\">\n    <h3>新規<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%A5%C9%A5%E1%A5%A4%A5%F3\">ドメイン</a>を登録する</h3>\n    <p>いくつかのサイト・<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%A5%C9%A5%E1%A5%A4%A5%F3\">ドメイン</a>でまとめて@Anywhereを使用したい場合もあるでしょう。<br />\nデフォルトでは、アプリケーションを登録した際のCallbackURLに記入した<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%A5%C9%A5%E1%A5%A4%A5%F3\">ドメイン</a>でのみ動作するようになっています。<br />\n<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%A5%C9%A5%E1%A5%A4%A5%F3\">ドメイン</a>を追加するには、アプリケーションの登録ページへ行き、@Anywhere domainタブから設定します。<br />\n<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%A5%C9%A5%E1%A5%A4%A5%F3\">ドメイン</a>は全部で5つまで登録することができます。</p>\n\n</div>\n<div class=\"section\">\n    <h3><a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%A5%BB%A5%EC%A5%AF%A5%BF\">セレクタ</a>について</h3>\n    <p>@Anywhereでは、Sizzleライブラリを使用しています。<br />\nSizzleはCSS2.1とCSS3<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%A5%BB%A5%EC%A5%AF%A5%BF\">セレクタ</a>をサポートしています。<br />\n詳しい情報は、<a href=\"http://wiki.github.com/jeresig/sizzle/\" target=\"_blank\" title=\"Sizzle documentation\">Sizzle documentation</a>を参照してください。</p>\n\n</div>\n<div class=\"section\">\n    <h3>バージョン情報</h3>\n    <p>現在、@Anywhereのバージョンは1です。以前のバージョンでは、一部サポートしていない・動作しない機能があります。</p><p>メジャーバージョンを指定することで、その時点での最新版を使用することができます。<br />\n例えば1と指定することで、現時点で最新の1.2.1を使用することができます。<br />\nバージョンについては、@AnywhereのJsファイル読み込み時にパラメータとして指定します。<br />\nマイナーバージョンを使用することも可能で、複数のバージョンを同時に利用することも可能です。</p>\n<pre class=\"code lang-html\" data-lang=\"html\" data-unlink><span class=\"synComment\">&lt;!DOCTYPE HTML&gt;</span>\n<span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">html</span><span class=\"synIdentifier\">&gt;</span>\n  <span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">head</span><span class=\"synIdentifier\">&gt;</span>\n<span class=\"synPreProc\">    </span><span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">meta</span><span class=\"synIdentifier\"> </span><span class=\"synType\">http-equiv</span><span class=\"synIdentifier\">=</span><span class=\"synConstant\">&quot;Content-type&quot;</span><span class=\"synIdentifier\"> </span><span class=\"synType\">content</span><span class=\"synIdentifier\">=</span><span class=\"synConstant\">&quot;text/html; charset=utf-8&quot;</span><span class=\"synIdentifier\">&gt;</span>\n<span class=\"synPreProc\">    </span><span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">title</span><span class=\"synIdentifier\">&gt;</span>Anywhere Sample<span class=\"synIdentifier\">&lt;/</span><span class=\"synStatement\">title</span><span class=\"synIdentifier\">&gt;</span>\n<span class=\"synPreProc\">    </span><span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">script</span><span class=\"synIdentifier\"> </span><span class=\"synType\">src</span><span class=\"synIdentifier\">=</span><span class=\"synConstant\">&quot;http://platform.twitter.com/anywhere.js?id=YOUR_API_KEY&quot;</span><span class=\"synIdentifier\"> </span><span class=\"synType\">type</span><span class=\"synIdentifier\">=</span><span class=\"synConstant\">&quot;text/javascript&quot;</span><span class=\"synIdentifier\">&gt;&lt;/</span><span class=\"synStatement\">script</span><span class=\"synIdentifier\">&gt;</span>\n<span class=\"synPreProc\">  </span><span class=\"synIdentifier\">&lt;/</span><span class=\"synStatement\">head</span><span class=\"synIdentifier\">&gt;</span>\n  <span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">body</span><span class=\"synIdentifier\">&gt;</span>\n \n  <span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">script</span><span class=\"synIdentifier\"> </span><span class=\"synType\">type</span><span class=\"synIdentifier\">=</span><span class=\"synConstant\">&quot;text/javascript&quot;</span><span class=\"synIdentifier\">&gt;</span>\n<span class=\"synSpecial\"> </span>\n<span class=\"synSpecial\">    twttr.anywhere</span>(<span class=\"synConstant\">&quot;1.2.1&quot;</span><span class=\"synSpecial\">, </span><span class=\"synIdentifier\">function</span><span class=\"synSpecial\"> </span>(<span class=\"synSpecial\">T</span>)<span class=\"synSpecial\"> </span><span class=\"synIdentifier\">{</span>\n<span class=\"synSpecial\">      </span><span class=\"synComment\">// Using version 1.2.1</span>\n<span class=\"synSpecial\">    </span><span class=\"synIdentifier\">}</span>)<span class=\"synSpecial\">;</span>\n<span class=\"synSpecial\"> </span>\n<span class=\"synSpecial\">    twttr.anywhere</span>(<span class=\"synConstant\">&quot;1.4&quot;</span><span class=\"synSpecial\">, </span><span class=\"synIdentifier\">function</span><span class=\"synSpecial\"> </span>(<span class=\"synSpecial\">T</span>)<span class=\"synSpecial\"> </span><span class=\"synIdentifier\">{</span>\n<span class=\"synSpecial\">      </span><span class=\"synComment\">// Using version 1.4</span>\n<span class=\"synSpecial\">    </span><span class=\"synIdentifier\">}</span>)<span class=\"synSpecial\">;</span>\n<span class=\"synSpecial\"> </span>\n<span class=\"synSpecial\">  </span><span class=\"synIdentifier\">&lt;/</span><span class=\"synStatement\">script</span><span class=\"synIdentifier\">&gt;</span>\n \n  <span class=\"synIdentifier\">&lt;/</span><span class=\"synStatement\">body</span><span class=\"synIdentifier\">&gt;</span>\n<span class=\"synIdentifier\">&lt;/</span><span class=\"synStatement\">html</span><span class=\"synIdentifier\">&gt;</span>\n</pre>\n    <blockquote>\n        <p>最初の読み込みのところ、v=1ってのがいらなくなるんですね。</p>\n\n    </blockquote>\n\n</div>\n<div class=\"section\">\n    <h3>異なるウィンドウを指定する</h3>\n    <p>メインのウィンドウとは別のウィンドウで、@Anywhereを使用したい場合もあると思います。<br />\n例えば、iframe内でも@Anywhereは利用することができます。<br />\ntwttr.anywhereメソッドに対して、使用したいwindowを渡すことで、利用できます。</p>\n<pre class=\"code lang-javascript\" data-lang=\"javascript\" data-unlink>twttr.anywhere(<span class=\"synIdentifier\">{</span> <span class=\"synStatement\">window</span>: myFrame <span class=\"synIdentifier\">}</span>, <span class=\"synIdentifier\">function</span> (T) <span class=\"synIdentifier\">{</span>\n  <span class=\"synComment\">// Your code here</span>\n<span class=\"synIdentifier\">}</span>);\n</pre>\n</div>\n<div class=\"section\">\n    <h3>サポートブラウザ</h3>\n    <p>メジャーバージョン1では以下のブラウザをサポートしています。</p>\n\n<ul>\n<li><a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/FireFox\">FireFox</a> 3.x</li>\n<li><a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/Chrome\">Chrome</a> 4</li>\n<li><a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/Safari\">Safari</a> 4</li>\n<li><a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/Opera\">Opera</a> 10</li>\n<li><a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/Internet%20Explorer%206\">Internet Explorer 6</a>, 7, 8</li>\n</ul>\n    <blockquote>\n        <p>いつの情報やねん！</p>\n\n    </blockquote>\n\n</div>\n<div class=\"section\">\n    <h3>おわりに</h3>\n    <p>原文に忠実に訳したつもりではありますが、意訳も多々含んでます。<br />\n少しでも怪しいと思ったら、原文を確認することをオススメします。</p><p>その他関連する仕様としてみておくべきものを載せておきます。</p>\n\n<div class=\"section\">\n    <h4>仕様に関して</h4>\n    \n<ul>\n<li><a href=\"https://dev.twitter.com/docs/anywhere/tweet-box\" target=\"_blank\" title=\"@Anywhere Features: Tweet Box | Twitter Developers\">@Anywhere Features: Tweet Box | Twitter Developers</a></li>\n<li><a href=\"https://dev.twitter.com/docs/anywhere/release-notes\" target=\"_blank\" title=\"@Anywhere Release Notes | Twitter Developers\">@Anywhere Release Notes | Twitter Developers</a></li>\n</ul>\n</div>\n<div class=\"section\">\n    <h4>利用制限・リミットについて</h4>\n    \n    <blockquote>\n        <p>参考：<a href=\"https://dev.twitter.com/discussions/801\" target=\"_blank\" title=\"@anywhere rate limits | Twitter Developers\">@anywhere rate limits | Twitter Developers</a></p>\n\n    </blockquote>\n<p>このリミットについてがなぜ公式のトップの見える範囲に載ってないのかは甚だ疑問ではあります。<br />\n@Anywhereは<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/API\">API</a>を無制限に使いまくれる・・かのように思われがちですが、そんなはずはありません。<br />\n他の<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/API\">API</a>と一緒で、リク<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%A5%A8%A5%B9\">エス</a>ト元のIPに対して、</p>\n\n<ul>\n<li>認証前ユーザーだと150回/時</li>\n<li>認証後だと350回/時</li>\n</ul><p>というれっきとしたリミットがあります。</p><p>フォローボタンなんかは一回生成する度に1回なので、ほとんど使い物になりません・・・</p>\n\n</div>\n</div>"
}
