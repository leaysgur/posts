{
  "title": "続・WebRTCなコードをE2Eテストする",
  "html": "\n    <blockquote>\n        <p><a href=\"https://lealog.hateblo.jp/entry/2018/03/23/101954\">WebRTC&#x306A;&#x30B3;&#x30FC;&#x30C9;&#x3092;E2E&#x30C6;&#x30B9;&#x30C8;&#x3059;&#x308B; - console.lealog();</a></p>\n\n    </blockquote>\n<p>これの続編で、CI上で実行したい！<br />\nそう思ってあれこれやってて得られた学びです。<br />\n<br />\n</p>\n\n<div class=\"section\">\n    <h3>Dockerで動かす</h3>\n    <p>CircleCIとかなんたらCIとか、まあとりあえずDockerの中で動くようになればいけるやろってことで。</p>\n<pre class=\"code\" data-lang=\"\" data-unlink>FROM circleci/node:8.11.0\nUSER root\n\n# get the latest browsers\nRUN wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - &amp;&amp; \\\n    sh -c &#34;echo &#39;deb http://dl.google.com/linux/chrome/deb/ stable main&#39; &gt;&gt; /etc/apt/sources.list.d/google-chrome.list&#34; &amp;&amp; \\\n    apt-get update &amp;&amp; \\\n    apt-get install -y google-chrome-stable\nRUN apt-get remove binutils &amp;&amp; \\\n    sh -c &#34;echo &#39;deb http://ftp.hr.debian.org/debian sid main&#39; &gt;&gt; /etc/apt/sources.list&#34; &amp;&amp; \\\n    apt-get update &amp;&amp; \\\n    apt-get install -t sid firefox\n\n# fetch tests\nRUN git clone https://github.com/leader22/webrtc-e2e.git &amp;&amp; \\\n    cd webrtc-e2e &amp;&amp; \\\n    npm i &amp;&amp; \\\n    echo &#34;window.__SKYWAY_KEY__ = &#39;&lt;YOUR_KEY_HERE&gt;&#39;;&#34; &gt;&gt; ./src/shared/key.js\n\nWORKDIR webrtc-e2e\nCMD npm run test</pre><p>最終的にこういう感じに。</p><p>わざわざ`git clone`してるのは、まあ便宜上というやつ・・。</p><p><a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/Firefox\">Firefox</a>を自前でインストールしてるのには理由があって、次の記事を参照。</p>\n\n    <blockquote>\n        <p><a href=\"https://lealog.hateblo.jp/entry/2018/04/05/125516\">CircleCI&#x3067;FirefoxHeadless&#x3092;&#x4F7F;&#x3046; - console.lealog();</a></p>\n\n    </blockquote>\n<p><a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/Chrome\">Chrome</a>も最新バージョンが欲しいので結局自前でインストール。</p><p>さて、いよいよ学びたちです。</p>\n\n</div>\n<div class=\"section\">\n    <h3>FirefoxHeadless on <a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/Linux\">Linux</a>では、getUserMedia()できない</h3>\n    <p>冗談抜きで。<br />\n挙動として、`getUserMedia()`してる行に差し掛かるとそこで止まる風。</p><p>`{ fake: true }`なら<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%A5%D1%A1%BC%A5%DF%A5%C3%A5%B7%A5%E7%A5%F3\">パーミッション</a>はスキップできるはずだが、それでも止まる。</p>\n\n<ul>\n<li>なんかそういうフラグが必要なのか</li>\n<li>インストール方法がまずいのか</li>\n<li>TestCafeと<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/Linux\">Linux</a>の相性なのか</li>\n</ul><p>原因はわかってないけど、とりあえず動かない。</p><p>ので、<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/Canvas\">Canvas</a>から取るなりなんとかしてMediaStreamを自作しないといけない。<br />\nただ音に関しては、TestCafeでWebAudioで音を出せないっぽいので、どうしようもないのでは・・？というところまで。</p>\n\n</div>\n<div class=\"section\">\n    <h3>TestCafeのspeed</h3>\n    <p><a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/macOS\">macOS</a>のローカル、<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/macOS\">macOS</a>のDockerよりも、CircleCI上で動かすには余裕を持った設定にしないとダメだった。</p><p>これはまあポチポチ試して最適な値を見つけるしかない。</p>\n\n</div>\n<div class=\"section\">\n    <h3>謎の環境差異</h3>\n    \n<ul>\n<li>Dockerイメージは同じ</li>\n<li>ブラウザのバージョンも同じ</li>\n<li>もちろんテストコードも同じ</li>\n</ul><p>なのに、</p>\n\n<ul>\n<li><a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/macOS\">macOS</a>のローカルでPASS</li>\n<li><a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/macOS\">macOS</a>のDocker内でPASS</li>\n<li>CircleCIのDocker内でFAIL</li>\n</ul><p>するパターンがあって意味がわからない。なんのための仮想環境なの？って感じ。</p><p>まあすっぱり諦めて、忘れた頃に治ってることを祈るのが賢明かなー。</p>\n\n</div>\n<div class=\"section\">\n    <h3>E2E on CIは地獄</h3>\n    <p>だと思う、個人的に。</p><p><a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%A5%C7%A5%D0%A5%C3%A5%B0\">デバッグ</a>がつらいだけでモチベーションはがりがり溶けていくし、環境差異もつらい。</p><p>がんばって<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/Linux\">Linux</a>で動かしてCIに載せたとしても、実際のユーザーはほとんどWinか<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/mac\">mac</a>やんっていう。<br />\nあとはこの分野はブラウザのバージョンによっても大きく挙動が左右される悲しい世界。</p><p>なので、Winと<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/mac\">mac</a>でブラウザ3世代くらい入った実機をいつでもさわれるようにする方が、<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%A5%B3%A5%B9%A5%D1\">コスパ</a>いいんじゃないか？と思ったりする。<br />\nその実機をいい感じに操れる術はあるにこしたことがないけど・・。</p><p>いやーほんとにつらい世界ですね！</p>\n\n</div>"
}
