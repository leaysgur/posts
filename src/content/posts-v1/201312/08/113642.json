{
  "title": "JavaScriptの実装で、最近悩んでるコト",
  "html": "<p>たとえば、こういう要件があったとします。</p>\n\n<ul>\n<li>複数の選択肢から、nコを選んで実行する</li>\n<li>nコ以上選んだ場合は、後から選んだものを優先する</li>\n<li>リセットボタンがある</li>\n<li>決定ボタンを押すと、選んだ内容が表示される</li>\n</ul><p>みたいな。</p><p>で、こういうのを実装するにあたり、どういう実装にしようかなーと思うわけです。</p>\n\n<div class=\"section\">\n    <h3>とりあえず画面をつくる</h3>\n    <pre class=\"code lang-html\" data-lang=\"html\" data-unlink>以下から2つ選んでね\n<span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">ul</span><span class=\"synIdentifier\">&gt;</span>\n  <span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">li</span><span class=\"synIdentifier\"> </span><span class=\"synType\">class</span><span class=\"synIdentifier\">=</span><span class=\"synConstant\">&quot;js-choice&quot;</span><span class=\"synIdentifier\">&gt;</span>くう<span class=\"synIdentifier\">&lt;/</span><span class=\"synStatement\">li</span><span class=\"synIdentifier\">&gt;</span>\n  <span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">li</span><span class=\"synIdentifier\"> </span><span class=\"synType\">class</span><span class=\"synIdentifier\">=</span><span class=\"synConstant\">&quot;js-choice&quot;</span><span class=\"synIdentifier\">&gt;</span>ねる<span class=\"synIdentifier\">&lt;/</span><span class=\"synStatement\">li</span><span class=\"synIdentifier\">&gt;</span>\n  <span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">li</span><span class=\"synIdentifier\"> </span><span class=\"synType\">class</span><span class=\"synIdentifier\">=</span><span class=\"synConstant\">&quot;js-choice&quot;</span><span class=\"synIdentifier\">&gt;</span>あそぶ<span class=\"synIdentifier\">&lt;/</span><span class=\"synStatement\">li</span><span class=\"synIdentifier\">&gt;</span>\n<span class=\"synIdentifier\">&lt;/</span><span class=\"synStatement\">ul</span><span class=\"synIdentifier\">&gt;</span>\n\n<span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">div</span><span class=\"synIdentifier\">&gt;</span>\n  <span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">button</span><span class=\"synIdentifier\"> </span><span class=\"synType\">class</span><span class=\"synIdentifier\">=</span><span class=\"synConstant\">&quot;js-reset&quot;</span><span class=\"synIdentifier\">&gt;</span>選びなおす<span class=\"synIdentifier\">&lt;/</span><span class=\"synStatement\">button</span><span class=\"synIdentifier\">&gt;</span>\n  <span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">button</span><span class=\"synIdentifier\"> </span><span class=\"synType\">class</span><span class=\"synIdentifier\">=</span><span class=\"synConstant\">&quot;js-submit&quot;</span><span class=\"synIdentifier\">&gt;</span>決定<span class=\"synIdentifier\">&lt;/</span><span class=\"synStatement\">button</span><span class=\"synIdentifier\">&gt;</span>\n<span class=\"synIdentifier\">&lt;/</span><span class=\"synStatement\">div</span><span class=\"synIdentifier\">&gt;</span>\n\n<span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">div</span><span class=\"synIdentifier\">&gt;</span>やりたいこと：<span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">span</span><span class=\"synIdentifier\"> </span><span class=\"synType\">class</span><span class=\"synIdentifier\">=</span><span class=\"synConstant\">&quot;js-result&quot;</span><span class=\"synIdentifier\">&gt;</span>ここに2つ<span class=\"synIdentifier\">&lt;/</span><span class=\"synStatement\">span</span><span class=\"synIdentifier\">&gt;&lt;/</span><span class=\"synStatement\">div</span><span class=\"synIdentifier\">&gt;</span>\n</pre><p>こんな感じ。</p><p>今回は、とくにスタイルとかは考えずにやっていきます。</p>\n\n</div>\n<div class=\"section\">\n    <h3>実装パターンA</h3>\n    <p>上から順にただ処理を書いていったパターン。</p>\n<pre class=\"code lang-javascript\" data-lang=\"javascript\" data-unlink>(<span class=\"synIdentifier\">function</span>(global) <span class=\"synIdentifier\">{</span>\n  <span class=\"synConstant\">'use strict'</span>;\n\n  <span class=\"synComment\">// Private functions.</span>\n  <span class=\"synIdentifier\">var</span> klass = <span class=\"synIdentifier\">function</span>(c) <span class=\"synIdentifier\">{</span> <span class=\"synStatement\">return</span> global.<span class=\"synStatement\">document</span>.getElementsByClassName(c); <span class=\"synIdentifier\">}</span>;\n\n  <span class=\"synComment\">// Data.</span>\n  <span class=\"synIdentifier\">var</span> myChoices = <span class=\"synIdentifier\">[]</span>,\n      MAX_CHOICES = 2;\n\n  <span class=\"synComment\">// Dom elements.</span>\n  <span class=\"synIdentifier\">var</span> choices = klass(<span class=\"synConstant\">'js-choice'</span>),\n      submitBtn = klass(<span class=\"synConstant\">'js-submit'</span>)<span class=\"synIdentifier\">[</span>0<span class=\"synIdentifier\">]</span>,\n      resetBtn = klass(<span class=\"synConstant\">'js-reset'</span>)<span class=\"synIdentifier\">[</span>0<span class=\"synIdentifier\">]</span>,\n      result = klass(<span class=\"synConstant\">'js-result'</span>)<span class=\"synIdentifier\">[</span>0<span class=\"synIdentifier\">]</span>;\n\n  <span class=\"synComment\">// Handlers.</span>\n  <span class=\"synIdentifier\">var</span> save = <span class=\"synIdentifier\">function</span>(e) <span class=\"synIdentifier\">{</span>\n    <span class=\"synIdentifier\">var</span> t = e.target.textContent;\n    myChoices.push(t);\n    (myChoices.length &gt; MAX_CHOICES) &amp;&amp; myChoices.shift();\n  <span class=\"synIdentifier\">}</span>,\n\n  submit = <span class=\"synIdentifier\">function</span>() <span class=\"synIdentifier\">{</span>\n    result.textContent = myChoices.join(<span class=\"synConstant\">','</span>);\n  <span class=\"synIdentifier\">}</span>,\n\n  reset = <span class=\"synIdentifier\">function</span>() <span class=\"synIdentifier\">{</span>\n    myChoices = <span class=\"synIdentifier\">[]</span>;\n    result.textContent = <span class=\"synConstant\">''</span>;\n  <span class=\"synIdentifier\">}</span>;\n\n  <span class=\"synComment\">// Event handlers.</span>\n  submitBtn.addEventListener(<span class=\"synConstant\">'click'</span>, submit, <span class=\"synConstant\">false</span>);\n  resetBtn.addEventListener(<span class=\"synConstant\">'click'</span>, reset, <span class=\"synConstant\">false</span>);\n  \n  <span class=\"synType\">Array</span>.prototype.forEach.apply(choices, <span class=\"synIdentifier\">[function</span>(e) <span class=\"synIdentifier\">{</span>\n    e.addEventListener(<span class=\"synConstant\">'click'</span>, save, <span class=\"synConstant\">false</span>);\n  <span class=\"synIdentifier\">}]</span>);\n\n<span class=\"synIdentifier\">}</span>(<span class=\"synIdentifier\">this</span>.<span class=\"synStatement\">self</span> || global))\n</pre>\n<div class=\"section\">\n    <h4>このパターンのいいところ</h4>\n    \n<ul>\n<li>とにかくコードが短い</li>\n<li>要件が小さいだけあって、サクッと書ける</li>\n<li>見たらわかるので、知識のない人にも引き継ぎやすい</li>\n</ul>\n</div>\n<div class=\"section\">\n    <h4>このパターンのわるいところ</h4>\n    \n<ul>\n<li>仕様変更によわい</li>\n</ul>\n</div>\n</div>\n<div class=\"section\">\n    <h3>実装パターンB</h3>\n    <p>どこぞのライブラリにインスパイアされた、なんちゃって<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/MVC\">MVC</a>パターン。</p>\n<pre class=\"code lang-javascript\" data-lang=\"javascript\" data-unlink>(<span class=\"synIdentifier\">function</span>(global) <span class=\"synIdentifier\">{</span>\n  <span class=\"synConstant\">'use strict'</span>;\n\n  <span class=\"synComment\">// Private functions.</span>\n  <span class=\"synIdentifier\">var</span> klass = <span class=\"synIdentifier\">function</span>(c) <span class=\"synIdentifier\">{</span> <span class=\"synStatement\">return</span> global.<span class=\"synStatement\">document</span>.getElementsByClassName(c); <span class=\"synIdentifier\">}</span>;\n\n  <span class=\"synComment\">// Data.</span>\n  <span class=\"synIdentifier\">var</span> myChoicesCollection = <span class=\"synIdentifier\">function</span>(c) <span class=\"synIdentifier\">{</span> <span class=\"synIdentifier\">this</span>.init(c); <span class=\"synIdentifier\">}</span>;\n  myChoicesCollection.prototype = <span class=\"synIdentifier\">{</span>\n    init: <span class=\"synIdentifier\">function</span>() <span class=\"synIdentifier\">{</span>\n      <span class=\"synIdentifier\">this</span>.data = <span class=\"synIdentifier\">[]</span>;\n      <span class=\"synIdentifier\">this</span>.MAX_CHOICES = 2;\n    <span class=\"synIdentifier\">}</span>,\n    \n    push: <span class=\"synIdentifier\">function</span>(d) <span class=\"synIdentifier\">{</span>\n      <span class=\"synIdentifier\">this</span>.data.push(d);\n      (<span class=\"synIdentifier\">this</span>.data.length &gt; <span class=\"synIdentifier\">this</span>.MAX_CHOICES) &amp;&amp; <span class=\"synIdentifier\">this</span>.data.shift();\n    <span class=\"synIdentifier\">}</span>,\n    \n    get: <span class=\"synIdentifier\">function</span>() <span class=\"synIdentifier\">{</span>\n      <span class=\"synStatement\">return</span> <span class=\"synIdentifier\">this</span>.data.join(<span class=\"synConstant\">','</span>);\n    <span class=\"synIdentifier\">}</span>,\n    \n    reset: <span class=\"synIdentifier\">function</span>() <span class=\"synIdentifier\">{</span>\n      <span class=\"synIdentifier\">this</span>.data = <span class=\"synIdentifier\">[]</span>;\n    <span class=\"synIdentifier\">}</span>\n  <span class=\"synIdentifier\">}</span>;\n\n  <span class=\"synComment\">// Views</span>\n  <span class=\"synIdentifier\">var</span> ChoiceView = <span class=\"synIdentifier\">function</span>(c) <span class=\"synIdentifier\">{</span> <span class=\"synIdentifier\">this</span>.init(c); <span class=\"synIdentifier\">}</span>;\n  ChoiceView.prototype = <span class=\"synIdentifier\">{</span>\n    init: <span class=\"synIdentifier\">function</span>(c) <span class=\"synIdentifier\">{</span>\n      <span class=\"synIdentifier\">this</span>.c = c;\n      <span class=\"synIdentifier\">this</span>.el = klass(<span class=\"synConstant\">'js-choice'</span>);\n      <span class=\"synIdentifier\">this</span>.bindEvents();\n    <span class=\"synIdentifier\">}</span>,\n\n    bindEvents: <span class=\"synIdentifier\">function</span>() <span class=\"synIdentifier\">{</span>\n      <span class=\"synIdentifier\">var</span> that = <span class=\"synIdentifier\">this</span>;\n      <span class=\"synType\">Array</span>.prototype.forEach.apply(that.el, <span class=\"synIdentifier\">[function</span>(e) <span class=\"synIdentifier\">{</span>\n        e.addEventListener(<span class=\"synConstant\">'click'</span>, that.pushOne.bind(that), <span class=\"synConstant\">false</span>);\n      <span class=\"synIdentifier\">}]</span>);\n    <span class=\"synIdentifier\">}</span>,\n    \n    pushOne: <span class=\"synIdentifier\">function</span>(e) <span class=\"synIdentifier\">{</span>\n      <span class=\"synIdentifier\">var</span> that = <span class=\"synIdentifier\">this</span>;\n      that.c.myChoicesCollection.push(e.target.textContent);\n    <span class=\"synIdentifier\">}</span>\n  <span class=\"synIdentifier\">}</span>;\n\n  <span class=\"synIdentifier\">var</span> ResultView = <span class=\"synIdentifier\">function</span>(c) <span class=\"synIdentifier\">{</span> <span class=\"synIdentifier\">this</span>.init(c); <span class=\"synIdentifier\">}</span>;\n  ResultView.prototype = <span class=\"synIdentifier\">{</span>\n    init: <span class=\"synIdentifier\">function</span>(c) <span class=\"synIdentifier\">{</span>\n      <span class=\"synIdentifier\">this</span>.c = c;\n      <span class=\"synIdentifier\">this</span>.el = klass(<span class=\"synConstant\">'js-result'</span>)<span class=\"synIdentifier\">[</span>0<span class=\"synIdentifier\">]</span>;\n    <span class=\"synIdentifier\">}</span>,\n\n    render: <span class=\"synIdentifier\">function</span>() <span class=\"synIdentifier\">{</span>\n      <span class=\"synIdentifier\">this</span>.el.textContent = <span class=\"synIdentifier\">this</span>.c.myChoicesCollection.get();\n    <span class=\"synIdentifier\">}</span>\n  <span class=\"synIdentifier\">}</span>;\n\n  <span class=\"synIdentifier\">var</span> BtnView = <span class=\"synIdentifier\">function</span>(c) <span class=\"synIdentifier\">{</span> <span class=\"synIdentifier\">this</span>.init(c); <span class=\"synIdentifier\">}</span>;\n  BtnView.prototype = <span class=\"synIdentifier\">{</span>\n    init: <span class=\"synIdentifier\">function</span>(c) <span class=\"synIdentifier\">{</span>\n      <span class=\"synIdentifier\">this</span>.c = c;\n      <span class=\"synIdentifier\">this</span>.el = <span class=\"synStatement\">null</span>;\n      <span class=\"synIdentifier\">this</span>.submitBtn = klass(<span class=\"synConstant\">'js-submit'</span>)<span class=\"synIdentifier\">[</span>0<span class=\"synIdentifier\">]</span>;\n      <span class=\"synIdentifier\">this</span>.resetBtn = klass(<span class=\"synConstant\">'js-reset'</span>)<span class=\"synIdentifier\">[</span>0<span class=\"synIdentifier\">]</span>;\n      <span class=\"synIdentifier\">this</span>.bindEvents();\n    <span class=\"synIdentifier\">}</span>,\n\n    bindEvents: <span class=\"synIdentifier\">function</span>() <span class=\"synIdentifier\">{</span>\n      <span class=\"synIdentifier\">var</span> that = <span class=\"synIdentifier\">this</span>;\n\n      that.submitBtn.addEventListener(<span class=\"synConstant\">'click'</span>, that.submit.bind(that), <span class=\"synConstant\">false</span>);\n      that.resetBtn.addEventListener(<span class=\"synConstant\">'click'</span>, that.reset.bind(that), <span class=\"synConstant\">false</span>);\n    <span class=\"synIdentifier\">}</span>,\n    \n    submit: <span class=\"synIdentifier\">function</span>() <span class=\"synIdentifier\">{</span>\n      <span class=\"synIdentifier\">this</span>.c.resultView.render();\n    <span class=\"synIdentifier\">}</span>,\n    \n    reset: <span class=\"synIdentifier\">function</span>() <span class=\"synIdentifier\">{</span>\n      <span class=\"synIdentifier\">this</span>.c.myChoicesCollection.reset();\n      <span class=\"synIdentifier\">this</span>.c.resultView.render();\n    <span class=\"synIdentifier\">}</span>\n  <span class=\"synIdentifier\">}</span>;\n\n  <span class=\"synComment\">// Main app.</span>\n  <span class=\"synIdentifier\">var</span> App = <span class=\"synIdentifier\">function</span>() <span class=\"synIdentifier\">{</span> <span class=\"synIdentifier\">this</span>.init(); <span class=\"synIdentifier\">}</span>;\n  App.prototype = <span class=\"synIdentifier\">{</span>\n    init: <span class=\"synIdentifier\">function</span>() <span class=\"synIdentifier\">{</span>\n      <span class=\"synIdentifier\">this</span>.myChoicesCollection = <span class=\"synStatement\">new</span> myChoicesCollection(<span class=\"synIdentifier\">this</span>);\n      <span class=\"synIdentifier\">this</span>.choiceView = <span class=\"synStatement\">new</span> ChoiceView(<span class=\"synIdentifier\">this</span>);\n      <span class=\"synIdentifier\">this</span>.resultView = <span class=\"synStatement\">new</span> ResultView(<span class=\"synIdentifier\">this</span>);\n      <span class=\"synIdentifier\">this</span>.btnView = <span class=\"synStatement\">new</span> BtnView(<span class=\"synIdentifier\">this</span>);\n    <span class=\"synIdentifier\">}</span>\n  <span class=\"synIdentifier\">}</span>;\n  <span class=\"synStatement\">new</span> App();\n\n<span class=\"synIdentifier\">}</span>(<span class=\"synIdentifier\">this</span>.<span class=\"synStatement\">self</span> || global))\n</pre><p>ガーッと書き終わって気付いた細かいところはあるけども、まぁそっとしておこう。</p>\n\n<div class=\"section\">\n    <h4>このパターンのいいところ</h4>\n    \n<ul>\n<li>仕様変更にそこそこ強い</li>\n</ul>\n</div>\n<div class=\"section\">\n    <h4>このパターンのわるいところ</h4>\n    \n<ul>\n<li>とにかくコードが長い</li>\n<li>サクッと書けない</li>\n<li>周りからはその程度、「スグできるっしょ！」って思われてるので、工数がもらえない</li>\n<li>知識のない人にも引き継ぐにしては、ちょっとオレオレ感が半端ない</li>\n</ul>\n</div>\n</div>\n<div class=\"section\">\n    <h3>悩んでるコト</h3>\n    <p>まぁサンプルのコードを見てもらった上で、こういう要件の場合に、</p>\n\n<ul>\n<li>どっちのパターンを使うべきか。</li>\n<li>また、その判断基準はどういうもので、どのタイミングで判断すべきか。</li>\n</ul><p>ってのに悩んでます、と。</p><p>最初に聞いてる要件だと、パターンAで全然いけそうやと思ってたけど、<br />\nなんか日を追うごとに要件が増えていって、コレはもうあかん！ってなってパターンBに、<br />\nしかし書き直す時間はないっていうのが最近多いんですよねー。</p><p>主要な機能に関しては保守性重視の後者、小さい機能に関しては前者ってしてますが、<br />\nそのせいで中途半端な規模の機能がきたときに悩む。</p><p>プロジェクトの規模とか、案件のメンバーとかそういう諸条件によるとしか言えないのはまぁわかるとしても。<br />\n単純に羅列して機能が5コ以上あったらもうDOMベースの<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/JavaScript\">JavaScript</a>はキツいなーとか、あるのかしら・・。</p><p>うーん、やはり設計力が試される感じなのか。</p>\n\n</div>"
}
