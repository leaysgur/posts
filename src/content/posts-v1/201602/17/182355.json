{
  "title": "WebRTC Conference Japan 2日目行ってきたメモ #WebRTCConfJP",
  "html": "<p>昨日に引き続き、2日目。</p><p>ただBiz向けではなくDev向けのTrackにずっといたので、偏りがありますｗ<br />\n<br />\n</p>\n\n<div class=\"section\">\n    <h3>WebRTC <a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/Boot%20Camp\">Boot Camp</a></h3>\n    <p>いわゆるハンズオン。</p><p><a href=\"https://github.com/mganeko/bootcamp\">https://github.com/mganeko/bootcamp</a><br />\n</p>\n\n<ul>\n<li>カメラ・オーディオストリーム</li>\n<li>WebRTCの制御</li>\n<li><a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%A5%B7%A5%B0%A5%CA%A5%EA%A5%F3%A5%B0\">シグナリング</a>(呼制御)</li>\n</ul><p>この3ステップを理解してないと、WebRTC開発はつらいよというところからハンズオン開始。<br />\n以下、完成したサンプルをベタ貼り。</p>\n\n<div class=\"section\">\n    <h4>HTML</h4>\n    <pre class=\"code lang-html\" data-lang=\"html\" data-unlink><span class=\"synComment\">&lt;!DOCTYPE html&gt;</span>\n<span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">html</span><span class=\"synIdentifier\"> </span><span class=\"synType\">lang</span><span class=\"synIdentifier\">=</span><span class=\"synConstant\">&quot;en&quot;</span><span class=\"synIdentifier\">&gt;</span>\n<span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">head</span><span class=\"synIdentifier\">&gt;</span>\n<span class=\"synPreProc\">  </span><span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">meta</span><span class=\"synIdentifier\"> </span><span class=\"synType\">charset</span><span class=\"synIdentifier\">=</span><span class=\"synConstant\">&quot;UTF-8&quot;</span><span class=\"synIdentifier\">&gt;</span>\n<span class=\"synPreProc\">  </span><span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">title</span><span class=\"synIdentifier\">&gt;</span>WebRTC Handson<span class=\"synIdentifier\">&lt;/</span><span class=\"synStatement\">title</span><span class=\"synIdentifier\">&gt;</span>\n<span class=\"synPreProc\">  </span><span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">style</span><span class=\"synIdentifier\">&gt;</span>\n    <span class=\"synStatement\">body</span> <span class=\"synIdentifier\">{</span> <span class=\"synType\">font-size</span>: <span class=\"synConstant\">120%</span>; <span class=\"synType\">text-align</span>: <span class=\"synType\">center</span>; <span class=\"synIdentifier\">}</span>\n    video <span class=\"synIdentifier\">{</span> <span class=\"synType\">background-color</span>: <span class=\"synConstant\">#000</span>; <span class=\"synIdentifier\">}</span>\n  <span class=\"synIdentifier\">&lt;/</span><span class=\"synStatement\">style</span><span class=\"synIdentifier\">&gt;</span>\n<span class=\"synIdentifier\">&lt;/</span><span class=\"synStatement\">head</span><span class=\"synIdentifier\">&gt;</span>\n<span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">body</span><span class=\"synIdentifier\">&gt;</span>\n\n  <span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">p</span><span class=\"synIdentifier\">&gt;</span>1から順に、AB画面それぞれでやるとつながるよ<span class=\"synIdentifier\">&lt;/</span><span class=\"synStatement\">p</span><span class=\"synIdentifier\">&gt;</span>\n\n  <span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">div</span><span class=\"synIdentifier\">&gt;</span>\n   <span class=\"synIdentifier\">&lt;</span>video<span class=\"synIdentifier\"> </span><span class=\"synType\">id</span><span class=\"synIdentifier\">=</span><span class=\"synConstant\">&quot;myVideo&quot;</span><span class=\"synIdentifier\">   autoplay muted </span><span class=\"synType\">width</span><span class=\"synIdentifier\">=</span><span class=\"synConstant\">&quot;320&quot;</span><span class=\"synIdentifier\"> </span><span class=\"synType\">height</span><span class=\"synIdentifier\">=</span><span class=\"synConstant\">&quot;180&quot;</span><span class=\"synIdentifier\">&gt;&lt;/</span>video<span class=\"synIdentifier\">&gt;</span>\n   <span class=\"synIdentifier\">&lt;</span>video<span class=\"synIdentifier\"> </span><span class=\"synType\">id</span><span class=\"synIdentifier\">=</span><span class=\"synConstant\">&quot;yourVideo&quot;</span><span class=\"synIdentifier\"> autoplay muted </span><span class=\"synType\">width</span><span class=\"synIdentifier\">=</span><span class=\"synConstant\">&quot;320&quot;</span><span class=\"synIdentifier\"> </span><span class=\"synType\">height</span><span class=\"synIdentifier\">=</span><span class=\"synConstant\">&quot;180&quot;</span><span class=\"synIdentifier\">&gt;&lt;/</span>video<span class=\"synIdentifier\">&gt;</span>\n    <span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">br</span><span class=\"synIdentifier\">&gt;</span>\n    <span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">button</span><span class=\"synIdentifier\"> </span><span class=\"synType\">type</span><span class=\"synIdentifier\">=</span><span class=\"synConstant\">&quot;button&quot;</span><span class=\"synIdentifier\"> </span><span class=\"synType\">id</span><span class=\"synIdentifier\">=</span><span class=\"synConstant\">&quot;cameraOn&quot;</span><span class=\"synIdentifier\">&gt;</span>[A1 / B1] Camera on<span class=\"synIdentifier\">&lt;/</span><span class=\"synStatement\">button</span><span class=\"synIdentifier\">&gt;</span>\n    <span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">button</span><span class=\"synIdentifier\"> </span><span class=\"synType\">type</span><span class=\"synIdentifier\">=</span><span class=\"synConstant\">&quot;button&quot;</span><span class=\"synIdentifier\"> </span><span class=\"synType\">id</span><span class=\"synIdentifier\">=</span><span class=\"synConstant\">&quot;cameraOff&quot;</span><span class=\"synIdentifier\">&gt;</span>Camera off<span class=\"synIdentifier\">&lt;/</span><span class=\"synStatement\">button</span><span class=\"synIdentifier\">&gt;</span>\n  <span class=\"synIdentifier\">&lt;/</span><span class=\"synStatement\">div</span><span class=\"synIdentifier\">&gt;</span>\n\n  <span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">p</span><span class=\"synIdentifier\">&gt;</span>\n    [A2 / B4] Copy\n    <span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">br</span><span class=\"synIdentifier\">&gt;</span>\n    <span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">textarea</span><span class=\"synIdentifier\"> </span><span class=\"synType\">id</span><span class=\"synIdentifier\">=</span><span class=\"synConstant\">&quot;sendSdp&quot;</span><span class=\"synIdentifier\"> </span><span class=\"synType\">rows</span><span class=\"synIdentifier\">=</span><span class=\"synConstant\">&quot;5&quot;</span><span class=\"synIdentifier\"> </span><span class=\"synType\">cols</span><span class=\"synIdentifier\">=</span><span class=\"synConstant\">&quot;70&quot;</span><span class=\"synIdentifier\"> </span><span class=\"synType\">readonly</span><span class=\"synIdentifier\">=</span><span class=\"synConstant\">&quot;readonly&quot;</span><span class=\"synIdentifier\">&gt;&lt;/</span><span class=\"synStatement\">textarea</span><span class=\"synIdentifier\">&gt;</span>\n    <span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">br</span><span class=\"synIdentifier\">&gt;</span>\n    <span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">button</span><span class=\"synIdentifier\"> </span><span class=\"synType\">type</span><span class=\"synIdentifier\">=</span><span class=\"synConstant\">&quot;button&quot;</span><span class=\"synIdentifier\"> </span><span class=\"synType\">id</span><span class=\"synIdentifier\">=</span><span class=\"synConstant\">&quot;syn&quot;</span><span class=\"synIdentifier\">&gt;</span>[A2] Syn<span class=\"synIdentifier\">&lt;/</span><span class=\"synStatement\">button</span><span class=\"synIdentifier\">&gt;</span>\n  <span class=\"synIdentifier\">&lt;/</span><span class=\"synStatement\">p</span><span class=\"synIdentifier\">&gt;</span>\n\n  <span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">p</span><span class=\"synIdentifier\">&gt;</span>\n    [B3 / A5] Paste\n    <span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">br</span><span class=\"synIdentifier\">&gt;</span>\n    <span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">textarea</span><span class=\"synIdentifier\"> </span><span class=\"synType\">id</span><span class=\"synIdentifier\">=</span><span class=\"synConstant\">&quot;receiveSdp&quot;</span><span class=\"synIdentifier\"> </span><span class=\"synType\">rows</span><span class=\"synIdentifier\">=</span><span class=\"synConstant\">&quot;5&quot;</span><span class=\"synIdentifier\"> </span><span class=\"synType\">cols</span><span class=\"synIdentifier\">=</span><span class=\"synConstant\">&quot;70&quot;</span><span class=\"synIdentifier\">&gt;&lt;/</span><span class=\"synStatement\">textarea</span><span class=\"synIdentifier\">&gt;</span>\n    <span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">br</span><span class=\"synIdentifier\">&gt;</span>\n    <span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">button</span><span class=\"synIdentifier\"> </span><span class=\"synType\">type</span><span class=\"synIdentifier\">=</span><span class=\"synConstant\">&quot;button&quot;</span><span class=\"synIdentifier\"> </span><span class=\"synType\">id</span><span class=\"synIdentifier\">=</span><span class=\"synConstant\">&quot;synAck&quot;</span><span class=\"synIdentifier\">&gt;</span>[B3] SynAck<span class=\"synIdentifier\">&lt;/</span><span class=\"synStatement\">button</span><span class=\"synIdentifier\">&gt;</span>\n    <span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">button</span><span class=\"synIdentifier\"> </span><span class=\"synType\">type</span><span class=\"synIdentifier\">=</span><span class=\"synConstant\">&quot;button&quot;</span><span class=\"synIdentifier\"> </span><span class=\"synType\">id</span><span class=\"synIdentifier\">=</span><span class=\"synConstant\">&quot;ack&quot;</span><span class=\"synIdentifier\">&gt;</span>[A5] Ack<span class=\"synIdentifier\">&lt;/</span><span class=\"synStatement\">button</span><span class=\"synIdentifier\">&gt;</span>\n    <span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">button</span><span class=\"synIdentifier\"> </span><span class=\"synType\">type</span><span class=\"synIdentifier\">=</span><span class=\"synConstant\">&quot;button&quot;</span><span class=\"synIdentifier\"> </span><span class=\"synType\">id</span><span class=\"synIdentifier\">=</span><span class=\"synConstant\">&quot;disconn&quot;</span><span class=\"synIdentifier\">&gt;</span>Disconnect<span class=\"synIdentifier\">&lt;/</span><span class=\"synStatement\">button</span><span class=\"synIdentifier\">&gt;</span>\n  <span class=\"synIdentifier\">&lt;/</span><span class=\"synStatement\">p</span><span class=\"synIdentifier\">&gt;</span>\n\n  <span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">script</span><span class=\"synIdentifier\"> </span><span class=\"synType\">src</span><span class=\"synIdentifier\">=</span><span class=\"synConstant\">&quot;./main.js&quot;</span><span class=\"synIdentifier\">&gt;&lt;/</span><span class=\"synStatement\">script</span><span class=\"synIdentifier\">&gt;</span>\n<span class=\"synIdentifier\">&lt;/</span><span class=\"synStatement\">body</span><span class=\"synIdentifier\">&gt;</span>\n<span class=\"synIdentifier\">&lt;/</span><span class=\"synStatement\">html</span><span class=\"synIdentifier\">&gt;</span>\n</pre>\n</div>\n<div class=\"section\">\n    <h4>js</h4>\n    <pre class=\"code lang-javascript\" data-lang=\"javascript\" data-unlink>(<span class=\"synIdentifier\">function</span>(global) <span class=\"synIdentifier\">{</span>\n<span class=\"synConstant\">'use strict'</span>;\n\n  <span class=\"synComment\">// お約束</span>\n  navigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia || navigator.msGetUserMedia;\n  global.RTCPeerConnection = global.RTCPeerConnection || global.webkitRTCPeerConnection || global.mozRTCPeerConnection;\n  global.RTCSessionDescription = global.RTCSessionDescription || global.webkitRTCSessionDescription || global.mozRTCSessionDescription;\n\n  <span class=\"synComment\">// めんどくさいのでヘルパ</span>\n  <span class=\"synIdentifier\">function</span> getElmByIdAndBindClick(id, func) <span class=\"synIdentifier\">{</span>\n    <span class=\"synIdentifier\">var</span> el = <span class=\"synStatement\">document</span>.getElementById(id);\n    el.addEventListener(<span class=\"synConstant\">'click'</span>, func, <span class=\"synConstant\">false</span>);\n  <span class=\"synIdentifier\">}</span>\n  <span class=\"synIdentifier\">function</span> noop() <span class=\"synIdentifier\">{}</span>;\n  <span class=\"synIdentifier\">function</span> handleError(err) <span class=\"synIdentifier\">{</span> console.error(err); <span class=\"synIdentifier\">}</span>\n\n  <span class=\"synComment\">// グローバルにあると便利</span>\n  <span class=\"synIdentifier\">var</span> myVideo   = <span class=\"synStatement\">document</span>.getElementById(<span class=\"synConstant\">'myVideo'</span>);\n  <span class=\"synIdentifier\">var</span> yourVideo = <span class=\"synStatement\">document</span>.getElementById(<span class=\"synConstant\">'yourVideo'</span>);\n  <span class=\"synIdentifier\">var</span> sendSDP    = <span class=\"synStatement\">document</span>.getElementById(<span class=\"synConstant\">'sendSdp'</span>);\n  <span class=\"synIdentifier\">var</span> receiveSDP = <span class=\"synStatement\">document</span>.getElementById(<span class=\"synConstant\">'receiveSdp'</span>);\n\n  <span class=\"synIdentifier\">var</span> myStream = <span class=\"synStatement\">null</span>;\n  <span class=\"synIdentifier\">var</span> peer = <span class=\"synStatement\">null</span>;\n\n  <span class=\"synComment\">// bind!</span>\n  getElmByIdAndBindClick(<span class=\"synConstant\">'sendSdp'</span>, <span class=\"synIdentifier\">function</span>(ev) <span class=\"synIdentifier\">{</span> ev.target.select(); <span class=\"synIdentifier\">}</span>);\n  getElmByIdAndBindClick(<span class=\"synConstant\">'cameraOn'</span>,  startCamera);\n  getElmByIdAndBindClick(<span class=\"synConstant\">'cameraOff'</span>, stopCamera);\n  getElmByIdAndBindClick(<span class=\"synConstant\">'disconn'</span>, disconnect);\n  <span class=\"synComment\">// 厳密にはSYN/ACKとかじゃないけど便宜的に</span>\n  getElmByIdAndBindClick(<span class=\"synConstant\">'syn'</span>,    syn);\n  getElmByIdAndBindClick(<span class=\"synConstant\">'synAck'</span>, synAck);\n  getElmByIdAndBindClick(<span class=\"synConstant\">'ack'</span>,    ack);\n\n\n  <span class=\"synComment\">// 自分用カメラON</span>\n  <span class=\"synIdentifier\">function</span> startCamera() <span class=\"synIdentifier\">{</span>\n    navigator.getUserMedia(\n      <span class=\"synIdentifier\">{</span> video: <span class=\"synConstant\">true</span> <span class=\"synIdentifier\">}</span>,\n      <span class=\"synIdentifier\">function</span>(stream) <span class=\"synIdentifier\">{</span>\n        myStream = stream;\n        myVideo.src = global.URL.createObjectURL(myStream);\n      <span class=\"synIdentifier\">}</span>,\n      handleError\n    );\n  <span class=\"synIdentifier\">}</span>\n\n  <span class=\"synComment\">// 自分用カメラOFF</span>\n  <span class=\"synIdentifier\">function</span> stopCamera() <span class=\"synIdentifier\">{</span>\n    <span class=\"synComment\">// 横着する</span>\n    myStream.getTracks().forEach(<span class=\"synIdentifier\">function</span>(t) <span class=\"synIdentifier\">{</span> t.stop(); <span class=\"synIdentifier\">}</span>);\n    myStream = <span class=\"synStatement\">null</span>;\n\n    myVideo.pause();\n    global.URL.revokeObjectURL(myVideo.src);\n    myVideo.src = <span class=\"synConstant\">''</span>;\n  <span class=\"synIdentifier\">}</span>\n\n  <span class=\"synComment\">// 通信先に自分のSDPを用意する</span>\n  <span class=\"synIdentifier\">function</span> syn() <span class=\"synIdentifier\">{</span>\n    _openPeer();\n\n    peer.createOffer(<span class=\"synIdentifier\">function</span>(sdp) <span class=\"synIdentifier\">{</span>\n      peer.setLocalDescription(sdp, noop, handleError);\n    <span class=\"synIdentifier\">}</span>, handleError, <span class=\"synIdentifier\">{}</span>);\n  <span class=\"synIdentifier\">}</span>\n\n  <span class=\"synComment\">// もらったSDPでもって相手の情報を保存しつつ、自分のSDPを用意する</span>\n  <span class=\"synIdentifier\">function</span> synAck() <span class=\"synIdentifier\">{</span>\n    _openPeer();\n\n    <span class=\"synIdentifier\">var</span> offer = <span class=\"synStatement\">new</span> RTCSessionDescription(<span class=\"synIdentifier\">{</span>\n      type: <span class=\"synConstant\">'offer'</span>,\n      <span class=\"synComment\">// 相手側からコピーしてきたSDP</span>\n      sdp: receiveSDP.value\n    <span class=\"synIdentifier\">}</span>);\n\n    peer.setRemoteDescription(\n      offer,\n      <span class=\"synIdentifier\">function</span>() <span class=\"synIdentifier\">{</span>\n        peer.createAnswer(<span class=\"synIdentifier\">function</span>(sdp) <span class=\"synIdentifier\">{</span>\n          peer.setLocalDescription(sdp, noop, handleError);\n        <span class=\"synIdentifier\">}</span>, handleError, <span class=\"synIdentifier\">{}</span>);\n      <span class=\"synIdentifier\">}</span>,\n      handleError\n    );\n  <span class=\"synIdentifier\">}</span>\n\n  <span class=\"synComment\">// 相手のSDPをもらったら、それで相手情報を保存する</span>\n  <span class=\"synIdentifier\">function</span> ack() <span class=\"synIdentifier\">{</span>\n    <span class=\"synIdentifier\">var</span> answer = <span class=\"synStatement\">new</span> RTCSessionDescription(<span class=\"synIdentifier\">{</span>\n      type: <span class=\"synConstant\">'answer'</span>,\n      <span class=\"synComment\">// 相手側からコピーしてきたSDP</span>\n      sdp:  receiveSDP.value\n    <span class=\"synIdentifier\">}</span>);\n\n    peer.setRemoteDescription(answer, noop, handleError);\n  <span class=\"synIdentifier\">}</span>\n\n  <span class=\"synIdentifier\">function</span> disconnect() <span class=\"synIdentifier\">{</span>\n    _closePeer();\n  <span class=\"synIdentifier\">}</span>\n\n  <span class=\"synIdentifier\">function</span> _openPeer() <span class=\"synIdentifier\">{</span>\n    peer = <span class=\"synStatement\">new</span> RTCPeerConnection(<span class=\"synIdentifier\">{</span> iceServers:<span class=\"synIdentifier\">[]</span> <span class=\"synIdentifier\">}</span>);\n\n    peer.addEventListener(<span class=\"synConstant\">'icecandidate'</span>, <span class=\"synIdentifier\">function</span>(ev) <span class=\"synIdentifier\">{</span>\n      <span class=\"synComment\">// 全部揃うまで待つ</span>\n      <span class=\"synStatement\">if</span> (ev.candidate) <span class=\"synIdentifier\">{</span> <span class=\"synStatement\">return</span>; <span class=\"synIdentifier\">}</span>\n      sendSDP.value = peer.localDescription.sdp;\n    <span class=\"synIdentifier\">}</span>, <span class=\"synConstant\">false</span>);\n\n    peer.addEventListener(<span class=\"synConstant\">'addstream'</span>, <span class=\"synIdentifier\">function</span>(ev) <span class=\"synIdentifier\">{</span>\n      yourVideo.src = global.URL.createObjectURL(ev.stream);\n    <span class=\"synIdentifier\">}</span>, <span class=\"synConstant\">false</span>);\n\n    peer.addEventListener(<span class=\"synConstant\">'removestream'</span>, <span class=\"synIdentifier\">function</span>() <span class=\"synIdentifier\">{</span>\n      yourVideo.pause();\n      global.URL.revokeObjectURL(yourVideo.src);\n      yourVideo.src = <span class=\"synConstant\">''</span>;\n    <span class=\"synIdentifier\">}</span>, <span class=\"synConstant\">false</span>);\n\n    peer.addStream(myStream);\n  <span class=\"synIdentifier\">}</span>\n\n  <span class=\"synIdentifier\">function</span> _closePeer() <span class=\"synIdentifier\">{</span>\n    peer.close();\n    peer = <span class=\"synStatement\">null</span>;\n  <span class=\"synIdentifier\">}</span>\n\n<span class=\"synIdentifier\">}</span>(<span class=\"synIdentifier\">this</span>));\n</pre><p>もちろん細かい制御はサボってます。<br />\n時間足りん！</p>\n\n<ul>\n<li>streamを用意</li>\n<li>peerConnectionを作る</li>\n<li>offerしてSDPを用意</li>\n<li>SDPを伝える</li>\n<li>もらったSDPで<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/answer\">answer</a>してSDPを用意</li>\n<li>SDPを伝える</li>\n<li>どちらも相手情報を取得できたので、スタート</li>\n</ul><p>peer.jsとか使わずに書くと、やっぱそれなりに煩雑なコードになっちゃうし、まったく手軽ではないよなー・・。</p>\n\n    <blockquote>\n        <p>てかコレを時間内に完成できる人、このハンズオン出る必要ない！<br />\nそして参加者の9割は絶対に完成できないってやる前からわかってたと思うの・・。</p>\n\n    </blockquote>\n\n</div>\n</div>\n<div class=\"section\">\n    <h3>WebRTC on Native App (<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/iOS\">iOS</a>/<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/Android\">Android</a>)</h3>\n    <p>SkyWayの<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/iOS\">iOS</a>/<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/Android\">Android</a>用の<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/SDK\">SDK</a>を作ったときの話。</p>\n\n<ul>\n<li><a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/Google\">Google</a>作のlibjingleという<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/C%2B%2B\">C++</a>ラッパを使った\n<ul>\n<li><a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/GoogleTalk\">GoogleTalk</a>で使われてるやつ</li>\n</ul></li>\n<li>2GB超えの大作<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/SDK\">SDK</a>になった</li>\n<li>libjingle Core\n<ul>\n<li>ビデオ・オーディオコーデックの処理(SW Codec)</li>\n<li>RTP/RTCP</li>\n<li>STUN/TURN</li>\n<li>SDP ICE</li>\n</ul></li>\n<li>libjingle自体の変化も速くてつらい\n<ul>\n<li>OS/実機 or Sim/32 or 64bit/Chip などの差でもコードがころころ変わる</li>\n</ul></li>\n<li>一括ビルド<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%A5%C4%A1%BC%A5%EB\">ツール</a>もあるけど・・\n<ul>\n<li><a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/iOS\">iOS</a>用に<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/H.264\">H.264</a>の有効化とかしたくなるから結局<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%BC%EA%BD%F1%A4%AD\">手書き</a>する</li>\n</ul></li>\n<li>ハードウェアによってプロファイルが違うとかある</li>\n<li><a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/Android\">Android</a>はメーカーによって挙動違ったりする</li>\n<li>オーディオまわりのほうが闇が深いらしい</li>\n</ul><p>門外漢過ぎてさっぱりわからんかった。</p>\n\n</div>\n<div class=\"section\">\n    <h3>ここがつらいよWebRTC - WebRTC開発の落とし穴</h3>\n    <p>パネルディスカッション。</p>\n\n<div class=\"section\">\n    <h4>どこまで対象にしてサポートしてるか</h4>\n    \n<ul>\n<li>だいたいどこも<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/Chrome\">Chrome</a> / <a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/FireFox\">FireFox</a></li>\n<li><a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/IE\">IE</a> / <a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/Safari\">Safari</a>は<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%A5%D7%A5%E9%A5%B0%A5%A4%A5%F3\">プラグイン</a></li>\n<li>モバイルブラウザは<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/Android\">Android</a> <a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/Chrome\">Chrome</a>なら・・</li>\n</ul>\n</div>\n<div class=\"section\">\n    <h4>ブラウザのバージョン差異をどうするか</h4>\n    \n<ul>\n<li>adapter.js: <a href=\"https://github.com/webrtc/adapter\">https://github.com/webrtc/adapter</a></li>\n<li>peer.jsとかは元から差異対応してくれてる</li>\n<li>SkyWayなら・・</li>\n</ul>\n</div>\n<div class=\"section\">\n    <h4>端末性能</h4>\n    \n<ul>\n<li>端末の内蔵カメラはそれなりに動くがマイクは怪しい</li>\n<li>外付けマイク強い</li>\n<li>元からWebRTCはVoLTE並の音質</li>\n</ul>\n</div>\n<div class=\"section\">\n    <h4>つながらない問題</h4>\n    \n<ul>\n<li>つながらないって言われる・・\n<ul>\n<li>PCのスペックが足りないとかはまだマシ</li>\n<li>接続数が増えてきてつながらないケースとかは切り分けつらい</li>\n</ul></li>\n<li>社内ネットワークでそもそもつながらない</li>\n<li>っていうケースがあるだけで、基本的にはつながる</li>\n<li>getUserMediaの許可まわりが一番多い\n<ul>\n<li>全画面で説明するくらいでもいい</li>\n</ul></li>\n<li><a href=\"https://test.webrtc.org/\">https://test.webrtc.org/</a> の社内版を用意したり</li>\n</ul>\n</div>\n<div class=\"section\">\n    <h4><a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%A5%B7%A5%B0%A5%CA%A5%EA%A5%F3%A5%B0\">シグナリング</a>/TURNサーバーどうしてるか</h4>\n    \n<ul>\n<li>SkyWayおすすめ</li>\n<li>自作の場合、WebSocketのポート埋まってること多いので注意</li>\n<li>TURNは<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/AWS\">AWS</a>(US)でも特に困ってない</li>\n<li>TURNは1台で良かったりする</li>\n</ul>\n</div>\n</div>\n<div class=\"section\">\n    <h3>WebRTCアプリケーションのテストの課題・解決方法について</h3>\n    <p>SkyWayにおけるテストの話。</p>\n\n<ul>\n<li>テストつらい</li>\n<li>そもそもノウハウが少ない\n<ul>\n<li>大企業でもリソースが・・</li>\n<li>やるにしても手動つらい・・</li>\n</ul></li>\n<li><a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/VoIP\">VoIP</a>のノウハウが使えない\n<ul>\n<li>規格もクライアントもアップデートが遅い</li>\n<li>WebRTCの<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%A5%B7%A5%B0%A5%CA%A5%EA%A5%F3%A5%B0\">シグナリング</a>は独自</li>\n<li><a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/Chrome\">Chrome</a>/<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/FireFox\">FireFox</a>アップデートしすぎ</li>\n</ul></li>\n<li>Web屋の知らないスタックが多すぎる</li>\n<li>NATの種類によっては、<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%A5%DE%A5%C3%A5%D4%A5%F3%A5%B0\">マッピング</a>・フィルタリングの挙動が違う\n<ul>\n<li><a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/UDP\">UDP</a>ホールパンチングの可否がそれによって変わる</li>\n</ul></li>\n</ul><p>なので、自動テスト<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%A5%C4%A1%BC%A5%EB\">ツール</a>つくった。</p>\n\n<ul>\n<li>先述のNATのタイプまでテストするので、<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/AWS\">AWS</a>の<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/VPC\">VPC</a>で動かす\n<ul>\n<li>中で特製のNAT(<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/iptables\">iptables</a>ではなくスクラッチ)を使ってテストできる</li>\n<li>そこで、<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/Selenium\">Selenium</a>同士が通信</li>\n</ul></li>\n<li>テストパターンが多いのでそれなりに時間はかかる</li>\n<li><a href=\"http://status.skyway.io/\">http://status.skyway.io/</a>\n<ul>\n<li>今は映像だけをテストしてる(= 音声トラックはバンドルされてるのでたぶん大丈夫(質は別))</li>\n</ul></li>\n<li><a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/Selenium\">Selenium</a>を動かすためのシェルが一番泥臭い</li>\n</ul><p>Web屋の知らないスタックが多すぎる問題は本当に感じていて、そんなのを意識せずに使えるようになる日がこないものかと待ち望んでいる感じです・・。</p>\n\n</div>\n<div class=\"section\">\n    <h3>WebRTC <a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/SFU\">SFU</a> コトハジメ</h3>\n    <p>WebRTCといえばの人。</p><p>資料はコレ: <a href=\"https://gist.github.com/voluntas/4d2bd3e878965bdd747a\">https://gist.github.com/voluntas/4d2bd3e878965bdd747a</a></p><p>聞くのに忙しくてメモはありません。<br />\nというか、資料が全てとのこと。</p><p>すーぱーわかりやすく説明してもらってると思うんですけど、なるほどわからん！</p>\n\n    <blockquote>\n        <p><a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/P2P\">P2P</a>のWebRTCが結局スケールしなくて<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/SFU\">SFU</a>になるなら、そもそもWebSocketで似たようなスタックは作れないものなのかってのが気になるので試してみようと思う</p>\n\n    </blockquote>\n\n</div>\n<div class=\"section\">\n    <h3>WebRTC Next Version時代の<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/JavaScript\">JavaScript</a>開発</h3>\n    \n<ul>\n<li>ライブラリやらプラットフォームが流行るとWebRTC力が下がる\n<ul>\n<li>生身だと何もできないわからない -> 危険！</li>\n</ul></li>\n<li>次期WebRTC(ORTCとの統合的な)に備えよ\n<ul>\n<li>offer/<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/answer\">answer</a>モデルからの脱却</li>\n<li>SDP -> <a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/JSON\">JSON</a></li>\n</ul></li>\n<li>EdgeにはORTCの一部が実装されてる</li>\n</ul>\n<div class=\"section\">\n    <h4>EdgeのORTCシーケンス</h4>\n    \n    <blockquote>\n        <p><a href=\"https://msdn.microsoft.com/ja-jp/library/mt588497(v=vs.85).aspx\">Object RTC API</a></p>\n\n    </blockquote>\n\n<ul>\n<li>[事前準備]</li>\n<li>MediaStream</li>\n<li>RTCIceGatherOptions\n<ul>\n<li>IceTransport / DtlsTransport</li>\n</ul></li>\n<li>RtpSender / RtpReceiver</li>\n<li>[/事前準備]</li>\n<li>ここまでしてやっと通信開始</li>\n<li>MediaStreamにaddTrack</li>\n</ul><p>例のadapter.jsだと、EdgeでもWebRTC1.0のコードで書けるらしい。<br />\nあとEdgeは同一のカメラを同一のブラウザで触れないとのこと。</p>\n\n</div>\n</div>\n<div class=\"section\">\n    <h3>WebRTCショートセッション４本勝負！</h3>\n    <p>2日間の締めくくり。</p>\n\n<div class=\"section\">\n    <h4><a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%A5%B9%A5%DE%A5%DB\">スマホ</a>チャットアプリにおけるWebRTC通話アプリ開発事例</h4>\n    <p>TriFort社の人。<br />\nサービスはコレかな？: <a href=\"http://startalk.trifort.jp/\">http://startalk.trifort.jp/</a><br />\n</p>\n\n<ul>\n<li>LINEみたいなチャットアプリに、生放送機能をいれた</li>\n<li><a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/VoIP\">VoIP</a>で組むか、WebRTCで組むか\n<ul>\n<li>通話品質を試したがどちらも差異がなかったので、WebRTCに</li>\n</ul></li>\n<li><a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%A5%B9%A5%DE%A5%DB\">スマホ</a>で<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%B4%F0%C3%CF%B6%C9\">基地局</a>が変わった時に切断される\n<ul>\n<li>再接続の仕組みをいれた</li>\n</ul></li>\n<li>1:Nだと7人くらい、N:Nでも5人くらいが限界(よくある<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%A5%B9%A5%DE%A5%DB\">スマホ</a>)\n<ul>\n<li>PCが親だと30人とかでもいける</li>\n<li>コーデック変えればもうちょい伸びるかも？</li>\n</ul></li>\n<li><a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/IPv6\">IPv6</a>対応しないと<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/Apple\">Apple</a>にリジェクトされるらしいが・・？</li>\n</ul>\n</div>\n<div class=\"section\">\n    <h4>WebRTCアプリを個人で開発・運営してみた話</h4>\n    <p>イカデンワの人こと@mzsm_jより。</p>\n\n<ul>\n<li>通話相手を切り替えられる通話アプリがほしい</li>\n<li>開発1週間くらい</li>\n<li><a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%A5%B7%A5%B0%A5%CA%A5%EA%A5%F3%A5%B0\">シグナリング</a>サーバーはEasyRTC\n<ul>\n<li>ルーム機能が標準にあったから</li>\n</ul></li>\n<li>ミュート機能はWebSocket</li>\n<li><a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/SFU\">SFU</a>ではない\n<ul>\n<li>音声だけなら</li>\n<li>8人以上は検証してないけど17人でもいけたらしい</li>\n</ul></li>\n<li>アプリ: さくら<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/VPS\">VPS</a> x STUN/TURN: ConoHa</li>\n<li><a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/SSL\">SSL</a>導入が面倒だった</li>\n<li><a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/Skype\">Skype</a>落ちた勢が避難してきてサーバー落ちた</li>\n</ul>\n</div>\n<div class=\"section\">\n    <h4>色々なデバイスの映像を使ったWebブラウザでのWebRTC映像中継</h4>\n    \n    <blockquote>\n        <p><a href=\"https://device-webapi.org/\">&#x30C7;&#x30D0;&#x30A4;&#x30B9;WebAPI&#x30B3;&#x30F3;&#x30BD;&#x30FC;&#x30B7;&#x30A2;&#x30E0;</a></p>\n\n    </blockquote>\n\n<ul>\n<li>WebRTC非対応の端末に<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%A5%D7%A5%E9%A5%B0%A5%A4%A5%F3\">プラグイン</a>をつないで</li>\n<li>GotAPI</li>\n<li>aka デバイスWebAPI</li>\n<li>THETAで撮った映像を、VRで見たり</li>\n<li><a href=\"https://github.com/DeviceConnect/DeviceConnect\">https://github.com/DeviceConnect/DeviceConnect</a></li>\n</ul>\n</div>\n<div class=\"section\">\n    <h4>WebRTC x IoT その現状と可能性を探る</h4>\n    \n<ul>\n<li>北米のIoT事情\n<ul>\n<li>Hueが普通に量販店で売ってる</li>\n<li><a href=\"http://service.amaryllo.eu/\">http://service.amaryllo.eu/</a></li>\n</ul></li>\n<li>リモートカメラでWebRTC</li>\n<li>IoTをMicroService化して組みあわせる視点</li>\n<li>これからセキュリティやプライバシーも焦点になってくる</li>\n<li>IoT x WebRTCで\n<ul>\n<li>安心: カメラで見たい</li>\n<li>AIと融合: 人の代わりに考えたり</li>\n<li>コミュニケーションの多様化: ロボットが代わりに</li>\n<li>操作性: 操作をデータ化してアーカイブ</li>\n</ul></li>\n<li>近視眼的に捉えない\n<ul>\n<li>海外社会の背景など加味しつつ、今できることを</li>\n</ul></li>\n</ul>\n</div>\n</div>\n<div class=\"section\">\n    <h3>おわりに</h3>\n    <p>参加費がちょっと高かったけど、WebRTC情報って珍しい気がするし、色んなジャンルの話が聞けてよかったかなーと。<br />\nお弁当も出るし事前に資料を冊子にして渡してくれるし、いつもの勉強会とは違う感じでした。</p><p>WebRTCそれ自体に関してはやっぱりWeb屋としてはつらい分野が多くて、きっと実案件でも困るのはそのあたりな気がしてます。<br />\n限られた環境での簡単な<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%A5%D3%A5%C7%A5%AA%A5%C1%A5%E3%A5%C3%A5%C8\">ビデオチャット</a>とかなら作れる気はするけど、それ以上のニーズってどんなんがあるんやろ？</p>\n\n</div>"
}
