{
  "title": "text-indentに潜むワナ",
  "html": "<p>ワナってほどでもないですけど、久しぶりに困ったので。<br />\nやっぱり<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/Css\">Css</a>にしろ何にせよ概念レベルはもちろん、きっちり実装レベルで理解できてないとどっかで困るみたい。</p><p>最近はそりゃあ検索すればスグわかるってのもあるけど、それでもやっぱり知ってたいし、知りたい。</p>\n\n<div class=\"seemore\">\n    \n<div class=\"section\">\n    <h3>困ったこと</h3>\n    \n<ul>\n<li>タップするとモーダルが開く</li>\n<li>そのモーダルはリストのUIで、縦に数行ある</li>\n<li>各通知はタップするとタップ時のスタイルが反映されるよう<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/Css\">Css</a>を組んである</li>\n<li>このモーダルのタイトルは画像を使っていて、テキストノードはtext-indent: -9999pxを指定</li>\n</ul><p>こういう条件のとき。</p>\n\n<div class=\"section\">\n    <h4>タップ時のスタイル反映がやけに遅い</h4>\n    <p>タップ時のスタイルは<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/JavaScript\">JavaScript</a>でclassを付与するようにしてて、グラデーションの色合いや影をつけてます。<br />\nで、そのタップ時の挙動がとにかく遅い。</p>\n<pre class=\"code lang-css\" data-lang=\"css\" data-unlink><span class=\"synSpecial\">.</span>list <span class=\"synIdentifier\">{</span>\n<span class=\"synComment\">/* グラデーション薄い版 */</span>\n<span class=\"synIdentifier\">}</span>\n<span class=\"synSpecial\">.</span>list-tapped\n<span class=\"synComment\">/* グラデーション濃い版 */</span>\n</pre><p>背景色の着色が、画面右から左方向に反映されていく様が目で追えるくらい遅いｗ<br />\ntransitionでも間違って設定したかと思うほどに。</p>\n\n</div>\n<div class=\"section\">\n    <h4>犯人はtext-indent時のoverflow不在</h4>\n    <p><a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%A5%C7%A5%D0%A5%C3%A5%B0\">デバッグ</a>としては、</p>\n\n<ul>\n<li><a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/JavaScript\">JavaScript</a>のクラスの付与がここだけ遅い？：遅くなる理由がない＋他は問題ないので却下</li>\n<li><a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/Css\">Css</a>の指定(グラデーション)におかしいのがある？：単色でも同じく遅いので、スタイルの問題ではなさそう</li>\n<li>関係ない要素も含め、全部を1つずつ削除して力ずくで確認：犯人発見(リスト関係な・・・)</li>\n</ul><p>全く関係ないと思っていたタイトルを削除したら、あっさり早くなりました。</p><p>どうやらtext-indentで左方向に思い切り広がった要素のせいで、スタイルの反映に遅れが出ていた模様。<br />\nそりゃあ300倍の要素やもんね・・。</p>\n<pre class=\"code lang-css\" data-lang=\"css\" data-unlink><span class=\"synSpecial\">.</span><span class=\"synStatement\">img</span>-header <span class=\"synIdentifier\">{</span>\n  <span class=\"synType\">text-indent</span>: <span class=\"synConstant\">-9999px</span>;\n  <span class=\"synType\">overflow</span>: <span class=\"synType\">hidden</span>;<span class=\"synComment\">/* できるならセットで */</span>\n<span class=\"synIdentifier\">}</span>\n</pre><p>これでひとまずは解決。</p>\n\n</div>\n</div>\n<div class=\"section\">\n    <h3>最近のテキスト→画像置換なら</h3>\n    <p>そんでコレを解決したころに思い出したのがこの記事。</p>\n\n    <blockquote>\n        <p>参考：<a href=\"http://terkel.jp/archives/2012/04/css-image-replacement-2012/\" target=\"_blank\" title=\"画像置換のあれへの補足 – terkel.jp\">画像置換のあれへの補足 – terkel.jp</a></p>\n\n    </blockquote>\n<p>PC向けなりタブレット(というか初代<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/iPad\">iPad</a>)なりターゲットデバイスが決まってれば、どうすべきか決めれそうなもんですけどねー。<br />\nいわゆる<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%A5%B9%A5%DE%A1%BC%A5%C8%A5%D5%A5%A9%A5%F3\">スマートフォン</a>向けだと、どういうのが最適なのかしら。</p>\n\n<ul>\n<li>9999pxを100%にしたところで、結局overflow: hiddenで消さなきゃいけないっていう。</li>\n</ul><p><a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%A5%A2%A5%AF%A5%BB%A5%B7%A5%D3%A5%EA%A5%C6%A5%A3\">アクセシビリティ</a>の観点を置いておくとして、パフォーマンス的にはどっちが良いのかしら。</p>\n\n    <blockquote>\n        <p>ちなみにコレ、iOS5だけ如実に遅かったんですよね。<br />\niOS6やAndroid2.2↑、PCなどなど問題なく動作する中、iOS5だけ・・・！</p>\n\n    </blockquote>\n\n</div>\n</div>"
}
