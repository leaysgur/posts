{
  "title": "いまさらまとめるChrome ExtensionでのJavaScript挿入",
  "html": "<p>今さらやけど、まとめ。<br />\n注：自分用まとめのため、下記リンクとか見ていただいた方が幸せになれるかもしれません。</p>\n\n    <blockquote>\n        <p>参考：<a href=\"http://developer.chrome.com/extensions/docs.html\" target=\"_blank\">Hello There! - Google Chrome</a></p>\n\n    </blockquote>\n<p>メッセージングとかそういった高尚な内容にも踏み込まないレベル。<br />\n<br />\n</p>\n\n<div class=\"section\">\n    <h3>最低限の構成</h3>\n    <p><a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/Chrome\">Chrome</a>拡張！とは言えそんな身構える必要はなくて、最低限のファイルさえ用意すれば、ちゃんと動いてくれます。</p>\n\n<ul>\n<li>manifest.<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/json\">json</a></li>\n<li>(アイコン)</li>\n</ul><p>ほんと、最小限すぎるけどコレだけでも立派な拡張として認識してくれますｗ</p>\n\n<div class=\"section\">\n    <h4>manifest.<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/json\">json</a></h4>\n    <pre class=\"code lang-javascript\" data-lang=\"javascript\" data-unlink><span class=\"synIdentifier\">{</span>\n\t<span class=\"synComment\">// Require!</span>\n\t<span class=\"synConstant\">&quot;manifest_version&quot;</span>: 2,\n\t<span class=\"synConstant\">&quot;name&quot;</span>: <span class=\"synConstant\">&quot;myEx&quot;</span>,\n\t<span class=\"synConstant\">&quot;version&quot;</span>: <span class=\"synConstant\">&quot;1.0&quot;</span>,\n\n\t<span class=\"synComment\">// Recommend.</span>\n\t<span class=\"synConstant\">&quot;description&quot;</span>: <span class=\"synConstant\">&quot;My first extension.&quot;</span>,\n\t<span class=\"synConstant\">&quot;icons&quot;</span>: <span class=\"synIdentifier\">{</span>\n\t\t<span class=\"synConstant\">&quot;16&quot;</span>: <span class=\"synConstant\">&quot;icons/icon_16x16.png&quot;</span>,\n\t\t<span class=\"synConstant\">&quot;48&quot;</span>: <span class=\"synConstant\">&quot;icons/icon_48x48.png&quot;</span>,\n\t\t<span class=\"synConstant\">&quot;128&quot;</span>: <span class=\"synConstant\">&quot;icons/icon_128x128.png&quot;</span>\n\t<span class=\"synIdentifier\">}</span>\n<span class=\"synIdentifier\">}</span>\n</pre><p>どんな<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%B3%C8%C4%A5%B5%A1%C7%BD\">拡張機能</a>かを記した<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/json\">json</a>ファイル。<br />\nこれを入れたフォルダを用意するだけで、あっという間にオリジナル機能が。</p>\n\n    <blockquote>\n        <p>参考：<a href=\"http://developer.chrome.com/extensions/manifest.html\" target=\"_blank\">Formats: Manifest Files - Google Chrome</a></p>\n\n    </blockquote>\n\n</div>\n</div>\n<div class=\"section\">\n    <h3>Browser Action | Page Action</h3>\n    <p>これで完成！なんてわけにはいかず、こっからが本題。</p><p>だいたいの<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/Chrome\">Chrome</a> Extensionはこの2種に大別されます。</p>\n\n<div class=\"section\">\n    <h4>Browser Action</h4>\n    <p>ブラウザ右上に鎮座するアイコン群の一員になりたいならこっち。<br />\nどこのページとか関係なく、ブラウザそのものの機能を拡張したりする思想の場合はこっち。</p><p>こっちの場合のみ、バッジなるちっさいテキストの表示ができます。</p>\n\n</div>\n<div class=\"section\">\n    <h4>Page Action</h4>\n    <p><a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%C6%C3%C4%EA\">特定</a>のページ・URL下での利用を想定する場合はこっち。<br />\nアドレスバーの右端に出るアイツです。</p><p>Browser Actionと違って、アイコンは出たり消えたりします。</p><br />\n<p>どっちを選んでも「だいたい」できることは一緒。<br />\n作りたいものに対して、あるべき姿でどっちか決まるはず・・といった感じ。</p>\n\n</div>\n</div>\n<div class=\"section\">\n    <h3><a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/JavaScript\">JavaScript</a>の挿し込み方法</h3>\n    <p>もちろん拡張を作るにあたって、色々目的はあるでしょうがだいたいは、<br />\n<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/JavaScript\">JavaScript</a>で見ているページを操作することがメインになると思ってます。</p><p>で、ページに対して<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/JavaScript\">JavaScript</a>をいかに埋め込むかというのが問題。<br />\nやり方としては、以下のまたしても2種。</p>\n\n<ul>\n<li>Content Script</li>\n<li>executeScript</li>\n</ul>\n<div class=\"section\">\n    <h4>Content Script</h4>\n    <p>問答無用で<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/JavaScript\">JavaScript</a>を実行するならこっちのパターン。<br />\nとは言えどこのページ(URL)で実行するかどうかの指定はできる。</p><p><a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/Google\">Google</a>のページでのみ実行する<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%A5%B9%A5%AF%A5%EA%A5%D7%A5%C8\">スクリプト</a>を作るとすると。</p>\n\n<div class=\"section\">\n    <h5>manifest.<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/json\">json</a></h5>\n    <pre class=\"code lang-javascript\" data-lang=\"javascript\" data-unlink><span class=\"synIdentifier\">{</span>\n\t<span class=\"synComment\">// Require!</span>\n\t<span class=\"synConstant\">&quot;manifest_version&quot;</span>: 2,\n\t<span class=\"synConstant\">&quot;name&quot;</span>: <span class=\"synConstant\">&quot;myEx&quot;</span>,\n\t<span class=\"synConstant\">&quot;version&quot;</span>: <span class=\"synConstant\">&quot;1.0&quot;</span>,\n\n\t<span class=\"synComment\">// Recommend.</span>\n\t<span class=\"synConstant\">&quot;description&quot;</span>: <span class=\"synConstant\">&quot;My first extension.&quot;</span>,\n\t<span class=\"synConstant\">&quot;icons&quot;</span>: <span class=\"synIdentifier\">{</span>\n\t\t<span class=\"synConstant\">&quot;16&quot;</span>: <span class=\"synConstant\">&quot;icons/icon_16x16.png&quot;</span>,\n\t\t<span class=\"synConstant\">&quot;48&quot;</span>: <span class=\"synConstant\">&quot;icons/icon_48x48.png&quot;</span>,\n\t\t<span class=\"synConstant\">&quot;128&quot;</span>: <span class=\"synConstant\">&quot;icons/icon_128x128.png&quot;</span>\n\t<span class=\"synIdentifier\">}</span>,\n\n\t<span class=\"synConstant\">&quot;content_scripts&quot;</span>: <span class=\"synIdentifier\">[</span>\n\t\t<span class=\"synIdentifier\">{</span>\n\t\t\t<span class=\"synConstant\">&quot;matches&quot;</span>: <span class=\"synIdentifier\">[</span><span class=\"synConstant\">&quot;http://*.google.co.jp/*&quot;</span><span class=\"synIdentifier\">]</span>,\n\t\t\t<span class=\"synConstant\">&quot;js&quot;</span>: <span class=\"synIdentifier\">[</span><span class=\"synConstant\">&quot;sample1.js&quot;</span>, <span class=\"synConstant\">&quot;sample2.js&quot;</span><span class=\"synIdentifier\">]</span>\n\t\t<span class=\"synIdentifier\">}</span>\n\t<span class=\"synIdentifier\">]</span>\n<span class=\"synIdentifier\">}</span>\n</pre><p>以下2ファイルを読み込ませます。</p>\n\n</div>\n<div class=\"section\">\n    <h5>sample1.js</h5>\n    <pre class=\"code lang-javascript\" data-lang=\"javascript\" data-unlink><span class=\"synIdentifier\">var</span> myVar = <span class=\"synConstant\">'Pass to sample2!'</span>;\n<span class=\"synStatement\">alert</span>(<span class=\"synConstant\">'Hello '</span> + <span class=\"synStatement\">document</span>.title);\n</pre><p>変数もグローバルにしておけば、</p>\n\n</div>\n<div class=\"section\">\n    <h5>sample2.js</h5>\n    <pre class=\"code lang-javascript\" data-lang=\"javascript\" data-unlink><span class=\"synStatement\">if</span>(myVar)<span class=\"synIdentifier\">{</span>\n\t<span class=\"synStatement\">alert</span>(myVar);\n\t<span class=\"synStatement\">document</span>.body.style.backgroundColor = <span class=\"synConstant\">'#eeeeee'</span>;\n<span class=\"synIdentifier\">}</span>\n</pre><p>拾えます。<br />\n<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/jQuery\">jQuery</a>とか使える！</p><p>そしてContent Scriptと言いつつ、<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/Css\">Css</a>も読み込ませられるという。</p>\n\n    <blockquote>\n        <p>参考：<a href=\"http://developer.chrome.com/extensions/content_scripts.html\" target=\"_blank\" title=\"Content Scripts - Google Chrome\">Content Scripts - Google Chrome</a></p>\n\n    </blockquote>\n\n</div>\n</div>\n<div class=\"section\">\n    <h4>executeScript</h4>\n    <p>Content Scriptが問答無用で実行するのに対し、こっちを使えば任意のタイミングで実行することができます。</p><p>ただし、Page ActionではなくBrowser Action限定です。(←ちょっと自信ない)<br />\n上記サンプルをこっちの方式でやる場合のサンプル。</p>\n\n<div class=\"section\">\n    <h5>manifest.<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/json\">json</a></h5>\n    <pre class=\"code lang-javascript\" data-lang=\"javascript\" data-unlink><span class=\"synIdentifier\">{</span>\n\t<span class=\"synComment\">// Require!</span>\n\t<span class=\"synConstant\">&quot;manifest_version&quot;</span>: 2,\n\t<span class=\"synConstant\">&quot;name&quot;</span>: <span class=\"synConstant\">&quot;myEx&quot;</span>,\n\t<span class=\"synConstant\">&quot;version&quot;</span>: <span class=\"synConstant\">&quot;1.0&quot;</span>,\n\n\t<span class=\"synComment\">// Recommend.</span>\n\t<span class=\"synConstant\">&quot;description&quot;</span>: <span class=\"synConstant\">&quot;My first extension.&quot;</span>,\n\t<span class=\"synConstant\">&quot;icons&quot;</span>: <span class=\"synIdentifier\">{</span>\n\t\t<span class=\"synConstant\">&quot;16&quot;</span>: <span class=\"synConstant\">&quot;icons/icon_16x16.png&quot;</span>,\n\t\t<span class=\"synConstant\">&quot;48&quot;</span>: <span class=\"synConstant\">&quot;icons/icon_48x48.png&quot;</span>,\n\t\t<span class=\"synConstant\">&quot;128&quot;</span>: <span class=\"synConstant\">&quot;icons/icon_128x128.png&quot;</span>\n\t<span class=\"synIdentifier\">}</span>,\n\n\t<span class=\"synConstant\">&quot;browser_action&quot;</span>: <span class=\"synIdentifier\">{</span>\n\t\t<span class=\"synConstant\">&quot;default_icon&quot;</span>: <span class=\"synConstant\">&quot;icons/icon_19x19.png&quot;</span>\n\t<span class=\"synIdentifier\">}</span>,\n\t<span class=\"synConstant\">&quot;background&quot;</span>: <span class=\"synIdentifier\">{</span>\n\t\t<span class=\"synConstant\">&quot;scripts&quot;</span>: <span class=\"synIdentifier\">[</span><span class=\"synConstant\">&quot;background.js&quot;</span><span class=\"synIdentifier\">]</span>\n\t<span class=\"synIdentifier\">}</span>,\n \t<span class=\"synConstant\">&quot;permissions&quot;</span>: <span class=\"synIdentifier\">[</span><span class=\"synConstant\">&quot;tabs&quot;</span>, <span class=\"synConstant\">&quot;http://*.google.co.jp/*&quot;</span><span class=\"synIdentifier\">]</span>\n<span class=\"synIdentifier\">}</span>\n</pre><p>アイコンをクリックすると、さっきのコードが実行されます。<br />\nさっきのsample1.jsとsample2.jsは、同じディレクトリにでも入れておくだけでOK。</p>\n\n</div>\n<div class=\"section\">\n    <h5>background.js</h5>\n    <pre class=\"code lang-javascript\" data-lang=\"javascript\" data-unlink><span class=\"synComment\">// Icon clicked.</span>\nchrome.browserAction.onClicked.addListener(<span class=\"synIdentifier\">function</span>(tab) <span class=\"synIdentifier\">{</span>\n\tchrome.tabs.executeScript(<span class=\"synStatement\">null</span>,\n\t\t<span class=\"synIdentifier\">{</span>file: <span class=\"synConstant\">&quot;sample1.js&quot;</span><span class=\"synIdentifier\">}</span>, <span class=\"synIdentifier\">function</span>()<span class=\"synIdentifier\">{</span>\n\t\t\tchrome.tabs.executeScript(<span class=\"synStatement\">null</span>,\n\t\t\t\t<span class=\"synIdentifier\">{</span>file: <span class=\"synConstant\">&quot;sample2.js&quot;</span><span class=\"synIdentifier\">}</span>, <span class=\"synIdentifier\">function</span>()<span class=\"synIdentifier\">{</span>\n\t\t\t\t\tconsole.log(<span class=\"synConstant\">'Script injected.'</span>);\n\t\t\t<span class=\"synIdentifier\">}</span>);\n\t<span class=\"synIdentifier\">}</span>);\n<span class=\"synIdentifier\">}</span>);\n</pre><p>なんだコレ！なネストコードですが、こうすれば無理やり各ファイル間での変数を共有できます。<br />\n正確には、外側のスコープを参照できるって感じ。<br />\n※sample1.jsとsample2.jsは同じ内容なので割愛。</p>\n\n</div>\n</div>\n</div>\n<div class=\"section\">\n    <h3>あとは</h3>\n    <p>今のところPopupが必要になってないのでまとめませんが、そのうち使ってみたいと思ってたり。</p><p>そのほかはPage Actionの時にアイコンでなくてちょっと詰まったり、どうしてもデータ保存したい場合はlocalStorageとか使ったらいいよとか、だいたいのことはサンプル見れば載ってることがわかった！</p>\n\n    <blockquote>\n        <p>参考：<a href=\"http://developer.chrome.com/extensions/samples.html\" target=\"_blank\" title=\"Sample Extensions - Google Chrome Extensions\">Sample Extensions - Google Chrome Extensions</a></p>\n\n    </blockquote>\n\n</div>"
}
