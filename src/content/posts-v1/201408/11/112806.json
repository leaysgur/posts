{
  "title": "jQueryでadd/removeClassする前にhasClassすべきか",
  "html": "<p>ちょうど気になってたので調べてみました。</p><p>結論からいうと、しなくて良いみたい。<br />\n<br />\n</p>\n\n<div class=\"section\">\n    <h3>気になるポイント</h3>\n    \n<ul>\n<li>チェックしなくても、addClass/removeClassしてくれるっぽいしいらないのでは</li>\n<li>でもclassNameに値入れるってことは、再<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%A5%EC%A5%F3%A5%C0%A5%EA%A5%F3%A5%B0\">レンダリング</a>されちゃうのでは</li>\n<li>値入れるのはコスト高なイメージあるので、できれば避けるべきでは</li>\n</ul><p>ってとこかな？</p>\n\n</div>\n<div class=\"section\">\n    <h3>肝心のソース</h3>\n    <pre class=\"code lang-javascript\" data-lang=\"javascript\" data-unlink><span class=\"synComment\">/**</span>\n<span class=\"synComment\"> * Source code from v2.1.1</span>\n<span class=\"synComment\"> *</span>\n<span class=\"synComment\"> */</span>\n\naddClass: <span class=\"synIdentifier\">function</span>( value ) <span class=\"synIdentifier\">{</span>\n    <span class=\"synIdentifier\">var</span> classes, elem, cur, clazz, j, finalValue,\n        proceed = <span class=\"synStatement\">typeof</span> value === <span class=\"synConstant\">&quot;string&quot;</span> &amp;&amp; value,\n        i = 0,\n        len = <span class=\"synIdentifier\">this</span>.length;\n\n    <span class=\"synStatement\">if</span> ( jQuery.isFunction( value ) ) <span class=\"synIdentifier\">{</span>\n        <span class=\"synStatement\">return</span> <span class=\"synIdentifier\">this</span>.each(<span class=\"synIdentifier\">function</span>( j ) <span class=\"synIdentifier\">{</span>\n            jQuery( <span class=\"synIdentifier\">this</span> ).addClass( value.call( <span class=\"synIdentifier\">this</span>, j, <span class=\"synIdentifier\">this</span>.className ) );\n        <span class=\"synIdentifier\">}</span>);\n    <span class=\"synIdentifier\">}</span>\n\n    <span class=\"synStatement\">if</span> ( proceed ) <span class=\"synIdentifier\">{</span>\n        <span class=\"synComment\">// The disjunction here is for better compressibility (see removeClass)</span>\n        classes = ( value || <span class=\"synConstant\">&quot;&quot;</span> ).match( rnotwhite ) || <span class=\"synIdentifier\">[]</span>;\n\n        <span class=\"synStatement\">for</span> ( ; i &lt; len; i++ ) <span class=\"synIdentifier\">{</span>\n            elem = <span class=\"synIdentifier\">this[</span> i <span class=\"synIdentifier\">]</span>;\n            cur = elem.nodeType === 1 &amp;&amp; ( elem.className ?\n                ( <span class=\"synConstant\">&quot; &quot;</span> + elem.className + <span class=\"synConstant\">&quot; &quot;</span> ).replace( rclass, <span class=\"synConstant\">&quot; &quot;</span> ) "
}
