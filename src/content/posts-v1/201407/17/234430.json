{
  "title": "タイプライターみたくテキストを扱えるtype-write.js",
  "html": "<p>書いたので一応。<br />\n<br />\n</p>\n\n    <blockquote>\n        <p>参考：<a href=\"https://github.com/leader22/type-write.js\" target=\"_blank\" title=\"leader22/type-write.js\">leader22/type-write.js</a></p>\n\n    </blockquote>\n\n<div class=\"section\">\n    <h3>特徴</h3>\n    <p>というか、自作した理由です。</p>\n\n<ul>\n<li>1塊のテキスト内で、独自のタグを入れることで複数の文字スタイルを共存可能</li>\n<li>いかなる瞬間も、HTMLとして不適切な状態にならない</li>\n<li><a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/jQuery\">jQuery</a>等のライブラリに依存しない</li>\n</ul><p>最初のが中々クセモノで、探しても見つからなかったんですよねー。<br />\n1塊単位でスタイル指定とかは割とあったけど。</p><p>2つ目はまあ良いっちゃいいのですが、「特定の瞬間は、閉じタグが存在しない」みたいなのがイヤだったので。</p>\n\n</div>\n<div class=\"section\">\n    <h3>サンプル</h3>\n    <p>雑ですがサンプル置いておきます。</p>\n<pre class=\"code lang-javascript\" data-lang=\"javascript\" data-unlink>;(<span class=\"synIdentifier\">function</span>(global) <span class=\"synIdentifier\">{</span>\n  <span class=\"synConstant\">'use strict'</span>;\n\n  <span class=\"synIdentifier\">var</span> doc = global.<span class=\"synStatement\">document</span>;\n  <span class=\"synIdentifier\">var</span> $ = doc.querySelector.bind(doc)\n\n  <span class=\"synIdentifier\">var</span> outputElm1 = $(<span class=\"synConstant\">'#output1'</span>);\n  <span class=\"synIdentifier\">var</span> duration   = $(<span class=\"synConstant\">'#duration'</span>);\n  <span class=\"synIdentifier\">var</span> startBtn1  = $(<span class=\"synConstant\">'#start1'</span>);\n  <span class=\"synIdentifier\">var</span> outputElm2 = $(<span class=\"synConstant\">'#output2'</span>);\n  <span class=\"synIdentifier\">var</span> startBtn2  = $(<span class=\"synConstant\">'#start2'</span>);\n\n  <span class=\"synIdentifier\">var</span> sampleText = <span class=\"synConstant\">'あのイーハトーヴォのすきとおった風、{|}夏でも底に冷たさをもつ{&lt;blue}青い{&gt;}そら、{|}うつくしい{&lt;green}森{&gt;}で飾られたモリーオ市、郊外のぎらぎらひかる草の{&lt;italic blue}波{&gt;}。'</span>\n\n  <span class=\"synComment\">// 1</span>\n  startBtn1.addEventListener(<span class=\"synConstant\">'click'</span>, <span class=\"synIdentifier\">function</span>() <span class=\"synIdentifier\">{</span>\n    <span class=\"synIdentifier\">var</span> typeDuration = duration.value;\n\n    <span class=\"synIdentifier\">var</span> typeWrite1 = <span class=\"synStatement\">new</span> TypeWrite(<span class=\"synIdentifier\">{</span>\n      text: sampleText,\n      typeWriteDuration: typeDuration,\n      onStart: <span class=\"synIdentifier\">function</span>() <span class=\"synIdentifier\">{</span>\n        outputElm1.innerHTML = <span class=\"synConstant\">'はじまるよー&lt;hr&gt;'</span>;\n      <span class=\"synIdentifier\">}</span>,\n      onTypeWrite: <span class=\"synIdentifier\">function</span>(<span class=\"synStatement\">char</span>) <span class=\"synIdentifier\">{</span>\n        outputElm1.innerHTML += <span class=\"synStatement\">char</span>;\n      <span class=\"synIdentifier\">}</span>,\n      onEnd: <span class=\"synIdentifier\">function</span>() <span class=\"synIdentifier\">{</span>\n        outputElm1.innerHTML += <span class=\"synConstant\">'&lt;hr&gt;ふぃにっしゅ！'</span>;\n      <span class=\"synIdentifier\">}</span>\n    <span class=\"synIdentifier\">}</span>);\n\n    typeWrite1.start();\n  <span class=\"synIdentifier\">}</span>, <span class=\"synConstant\">false</span>);\n\n\n  <span class=\"synComment\">// 2</span>\n  startBtn2.addEventListener(<span class=\"synConstant\">'click'</span>, <span class=\"synIdentifier\">function</span>() <span class=\"synIdentifier\">{</span>\n    <span class=\"synIdentifier\">var</span> typeWrite2 = <span class=\"synStatement\">new</span> TypeWrite(<span class=\"synIdentifier\">{</span>\n      text: sampleText,\n      isResult: <span class=\"synConstant\">true</span>\n    <span class=\"synIdentifier\">}</span>);\n\n    <span class=\"synIdentifier\">var</span> resultText = typeWrite2.start();\n    outputElm2.innerHTML = resultText;\n  <span class=\"synIdentifier\">}</span>, <span class=\"synConstant\">false</span>);\n\n<span class=\"synIdentifier\">}</span>(<span class=\"synStatement\">window</span>));\n</pre><p>ソース見ればすぐわかると思いますが、<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/CSS\">CSS</a>は別途用意しなきゃだめです。<br />\n他にも文字送りの強制終了や、独自メタ文字の書式をオプションで渡せたりします。</p><p>以上、ご参考まで。</p>\n\n</div>"
}
