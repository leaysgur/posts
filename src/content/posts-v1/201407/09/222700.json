{
  "title": "$.fn.fadeIn(fn)をCSSアニメでやる",
  "html": "<p>最初は便利かなーと思ったのですが、使い勝手はイマイチでした・・。<br />\nまあ一応書いたので、メモっとこうと。<br />\n<br />\n</p>\n\n<div class=\"section\">\n    <h3>コード</h3>\n    <p><script src=\"https://gist.github.com/c5fca6eea5de0299d1d4.js\"> </script><br />\n<a href=\"https://gist.github.com/c5fca6eea5de0299d1d4\">jQuery add/removeClass with transition and callbac ...</a><br />\n</p>\n\n</div>\n<div class=\"section\">\n    <h3>これを使うと</h3>\n    <pre class=\"code\" data-unlink>$(<span class=\"synConstant\">'.elm'</span>).fadeIn(<span class=\"synIdentifier\">function</span>() <span class=\"synIdentifier\">{</span>\n  <span class=\"synComment\">// do something...</span>\n<span class=\"synIdentifier\">}</span>);\n</pre><p>ってのが、</p>\n<pre class=\"code\" data-unlink><span class=\"synIdentifier\">.elm</span> <span class=\"synIdentifier\">{</span>\n  opacity: <span class=\"synConstant\">0</span>;\n  transition: opacity <span class=\"synConstant\">1s</span> ease;\n<span class=\"synIdentifier\">}</span>\n\n<span class=\"synIdentifier\">.elm.is-animated</span> <span class=\"synIdentifier\">{</span>\n  opacity: <span class=\"synConstant\">1</span>;\n<span class=\"synIdentifier\">}</span>\n</pre><p>ってのを用意すれば、</p>\n<pre class=\"code\" data-unlink>$(<span class=\"synConstant\">'.elm'</span>).addClassWithTransitionCallback(<span class=\"synConstant\">'is-animated'</span>, <span class=\"synIdentifier\">function</span>() <span class=\"synIdentifier\">{</span>\n  <span class=\"synComment\">// do something...</span>\n<span class=\"synIdentifier\">}</span>);\n</pre><p>ってできます。</p>\n\n</div>\n<div class=\"section\">\n    <h3>いちおう嬉しいところ</h3>\n    <p>やっぱりfor文でがんばるアニメーションは、<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/Android\">Android</a>とか低スペック端末で若干辛いです。<br />\nそれをまあ出来る限り救おうというのが趣旨です。</p><p>とはいえ、transitionEndのイベントの挙動がそもそも怪しかったり、コードが冗長になったりするので、一概に良いとも言えず。</p>\n\n</div>\n<div class=\"section\">\n    <h3>結論</h3>\n    <p>いや、<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/jQuery\">jQuery</a>で良いです・・。</p>\n\n</div>"
}
