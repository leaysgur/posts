{
  "title": "TwitterのAPIについてのメモ",
  "html": "<p>なんか作ってみたいと思ってるので、そのメモ。</p><p>大きく分けて2つの<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/API\">API</a>があるみたい。</p>\n\n<div class=\"seemore\">\n    \n<div class=\"section\">\n    <h3><a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/API\">API</a>の種類</h3>\n    \n<ul>\n<li>REST <a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/API\">API</a></li>\n<li>Streaming <a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/API\">API</a></li>\n</ul><p>その他、サイトに貼れる<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%A5%A6%A5%A3%A5%B8%A5%A7%A5%C3%A5%C8\">ウィジェット</a>やったり、ツイートボタンやったりも紹介されてます。</p>\n\n    <blockquote>\n        <p>参考：<a href=\"https://dev.twitter.com/docs\" target=\"_blank\" title=\"Documentation | Twitter Developers\">Documentation | Twitter Developers</a></p>\n\n    </blockquote>\n\n</div>\n<div class=\"section\">\n    <h3>Streaming <a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/API\">API</a></h3>\n    <p>こっちを使うつもりはないのであんまり見てませんが。</p>\n\n    <blockquote>\n        <p>The <a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/Twitter\">Twitter</a> Streaming <a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/API\">API</a> allows high-throughput near-realtime access to various subsets of public and protected <a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/Twitter\">Twitter</a> data.<br />\nDevelopers are strongly encouraged to read all of the documentation linked to by this document thoroughly.</p>\n\n    </blockquote>\n<p><a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/Twitter\">Twitter</a>のリアルタイムな情報を利用できます、ってなこっちゃ。</p><p>タイムラインをリアルタイムに取得して反映・・みたいな仕様にする場合は、こっちがよさげ。</p>\n\n    <blockquote>\n        <p>HTTP Basic Authentication or OAuth is required to access the streaming <a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/API\">API</a> methods.<br />\nA client must, for Basic Authentication, provide the credentials of a valid <a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/Twitter\">Twitter</a> account, or for OAuth, sign the request appropriately.</p>\n\n    </blockquote>\n<p>ただ使うには認証が必要です。</p>\n\n</div>\n<div class=\"section\">\n    <h3>REST <a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/API\">API</a></h3>\n    <p>RESTについては最近知ったとこなので、いまいちな解釈かもしれませんがー。<br />\nいわゆるHttpでリクエストして結果をもらう、とか「いわゆるWebの<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/API\">API</a>」っていうのは大抵コレなんやろうか。</p>\n\n    <blockquote>\n        <p>参考：<a href=\"https://dev.twitter.com/docs/api\" target=\"_blank\" title=\"REST API Resources | Twitter Developers\">REST API Resources | Twitter Developers</a></p>\n\n    </blockquote>\n<p>取得できる内容は、以下の分類。</p>\n\n<ul>\n<li>Timelines</li>\n<li>Tweets</li>\n<li>Search</li>\n<li>Direct Messages</li>\n<li>Friends & Followers</li>\n<li>Users</li>\n<li>Suggested Users</li>\n<li>Favorites</li>\n<li>Lists</li>\n<li>Accounts</li>\n<li>Notification</li>\n<li>Saved Searches</li>\n<li>Local Trends</li>\n<li>Places & Geo</li>\n<li>Trends</li>\n<li>Block</li>\n<li><a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/Spam\">Spam</a> Reporting</li>\n<li>OAuth</li>\n<li>Help</li>\n<li>Legal</li>\n<li>Deprecated</li>\n</ul><p>多いわ！ｗ</p><p>なにはともあれ、<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/Twitter\">Twitter</a>の全てがココに！<br />\nそれぞれGETかPOSTかどっちもか、できます。</p><p>はてさて。</p>\n\n</div>\n<div class=\"section\">\n    <h3>REST -Search <a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/API\">API</a></h3>\n    <p>今回狙ってるのはこいつ！</p>\n\n    <blockquote>\n        <p>参考：<a href=\"https://dev.twitter.com/docs/api/1/get/search\" target=\"_blank\" title=\"GET search | Twitter Developers\">GET search | Twitter Developers</a><br />\n参考：<a href=\"https://dev.twitter.com/docs/using-search\" target=\"_blank\" title=\"Using the Twitter Search API | Twitter Developers\">Using the Twitter Search API | Twitter Developers</a><br />\n参考：<a href=\"https://dev.twitter.com/docs/tweet-entities\" target=\"_blank\" title=\"Tweet Entities | Twitter Developers\">Tweet Entities | Twitter Developers</a></p>\n\n    </blockquote>\n<p>だいたいこの3ページに知りたいことは全て書いてあるはず。</p>\n\n<div class=\"section\">\n    <h4>取得結果</h4>\n    <p>JSONかatomか<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/JSONP\">JSONP</a>の形式から。</p>\n\n</div>\n<div class=\"section\">\n    <h4>クエリ</h4>\n    <p>1つ目と2つ目の参考URL参照。<br />\ninclude_entitiesをtrueにすると、参考URL3つ目にあるように、Tweet Entitiesなるものも取得可能。</p>\n\n    <blockquote>\n        <p>Tweet text can potentially mention other users or lists, but also contain URLs, media, hashtags...<br />\nInstead of parsing the text yourself to try to extract those entities, you can use the entities attribute that contains this parsed and structured data.</p>\n\n    </blockquote>\n<p><a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%A5%E1%A5%BF%A5%C7%A1%BC%A5%BF\">メタデータ</a>ってやつですね。<br />\nつぶやきの補足データ：リンクを含んでるか、ハッシュタグがあるか、などなど。</p><p>これは使えそうー！</p>\n\n</div>\n<div class=\"section\">\n    <h4>利用制限</h4>\n    \n<ul>\n<li>全ての結果を検索できるわけではなく、6〜9日前くらいまでしかデータはありません。</li>\n<li>1週間より前のつぶやきは検索できません。</li>\n<li>クエリが複雑すぎると、エラーになります。</li>\n<li>中には取得されなりつぶやきもあったりします。(それが嫌ならStreaming <a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/API\">API</a>を使ってね！)</li>\n<li>他のREST <a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/API\">API</a>と違って、時間あたりのリクエスト回数ではなく、クエリの複雑性のみで制限がかかります。</li>\n</ul>\n</div>\n<div class=\"section\">\n    <h4>利用のコツ</h4>\n    \n<ul>\n<li>きっちり<a href=\"http://en.wikipedia.org/wiki/URL_encoding\" target=\"_blank\" title=\"Percent-encoding - Wikipedia, the free encyclopedia\">エンコード</a>してからリクエストする。</li>\n<li>since_idパラメータを使う。</li>\n<li>パラメータは10コ以内にする。</li>\n<li><a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/UA\">UA</a>を付与してリクエストする。</li>\n</ul>\n</div>\n<div class=\"section\">\n    <h4>result_type</h4>\n    <p>mixed / Popular / Recent<br />\nこれがいまいちよくわかんない。</p><p>つぶやきには人気のもの、最近のものっていう独自の分類があって、そういったバイアスを含んだ結果を返すかどうか、ってことなんかな？</p><br />\n<p>以上、メモでした。</p>\n\n</div>\n</div>\n</div>"
}
