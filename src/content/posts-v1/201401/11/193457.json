{
  "title": "JavaScriptのカスタムイベント",
  "html": "<p><a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/JavaScript\">JavaScript</a>でよくある、</p>\n\n<ul>\n<li>そんなユーザーインプットが行われたわけではないが、それをエミュレートしたい時</li>\n<li>各クラス間を<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%C1%C2%B7%EB%B9%E7\">疎結合</a>に保ったまま、データのやりとりに独自のイベントを使いたい時</li>\n</ul><p>そんな時などに使われるだろうアレです。</p><p>MDNくらいしか検索しても情報出てこないので、個人的にまとめ。</p>\n\n    <blockquote>\n        <p>参考：<a href=\"https://developer.mozilla.org/en-US/docs/Web/Guide/Events/Creating_and_triggering_events\" target=\"_blank\" title=\"Creating and triggering events - Web developer guide | MDN\">Creating and triggering events - Web developer guide | MDN</a></p>\n\n    </blockquote>\n\n<div class=\"section\">\n    <h3>キホンのやつ</h3>\n    <pre class=\"code lang-javascript\" data-lang=\"javascript\" data-unlink><span class=\"synComment\">// いつもどおりなんやかんや書いて</span>\nelm.addEventListener(<span class=\"synConstant\">'touchstart'</span>, <span class=\"synIdentifier\">function</span>() <span class=\"synIdentifier\">{</span> <span class=\"synStatement\">alert</span>(<span class=\"synConstant\">'touch!'</span>); <span class=\"synIdentifier\">}</span>, <span class=\"synConstant\">false</span>);\n\n<span class=\"synComment\">// イベント作って</span>\n<span class=\"synIdentifier\">var</span> ev = <span class=\"synStatement\">new</span> Event(<span class=\"synConstant\">'touchstart'</span>);\n<span class=\"synComment\">// 発火！</span>\nelm.dispatchEvent(ev);\n</pre><p>とまあこんな簡単にできちゃうもんです。<br />\nすこし(?)前までは、</p>\n<pre class=\"code lang-javascript\" data-lang=\"javascript\" data-unlink><span class=\"synComment\">// いつもどおりなんやかんや書いて</span>\nelm.addEventListener(<span class=\"synConstant\">'touchstart'</span>, <span class=\"synIdentifier\">function</span>() <span class=\"synIdentifier\">{</span> <span class=\"synStatement\">alert</span>(<span class=\"synConstant\">'touch!'</span>); <span class=\"synIdentifier\">}</span>, <span class=\"synConstant\">false</span>);\n\n<span class=\"synComment\">// イベント作って</span>\n<span class=\"synIdentifier\">var</span> ev = <span class=\"synStatement\">document</span>.createEvent(<span class=\"synConstant\">'Event'</span>);\n<span class=\"synComment\">// そしたら登録して</span>\nev.initEvent(<span class=\"synConstant\">'touchstart'</span>, <span class=\"synConstant\">true</span>, <span class=\"synConstant\">true</span>);\n<span class=\"synComment\">// 発火！</span>\nelm.dispatchEvent(ev);\n</pre><p>と、一手間多かったみたい。</p>\n\n</div>\n<div class=\"section\">\n    <h3>オプション渡したりしたい</h3>\n    <p>上記のキホンverだと、ほんとに発火しかできません。<br />\n発火時に引数でいろいろ触りたい・・なんてのはよくあることで、その場合はこう。</p>\n<pre class=\"code lang-javascript\" data-lang=\"javascript\" data-unlink><span class=\"synComment\">// new Event じゃなくて new customEvent</span>\n<span class=\"synIdentifier\">var</span> ev = <span class=\"synStatement\">new</span> customEvent(<span class=\"synConstant\">'hoge'</span>, <span class=\"synIdentifier\">{</span>\n  <span class=\"synComment\">// このdetail以下にぶらさげる</span>\n  detail: <span class=\"synIdentifier\">{</span>\n    some: <span class=\"synIdentifier\">{</span>\n      vars: <span class=\"synConstant\">'are here'</span>,\n      and: <span class=\"synConstant\">'here too'</span>\n    <span class=\"synIdentifier\">}</span>,\n    foo: <span class=\"synConstant\">'bar'</span>\n  <span class=\"synIdentifier\">}</span>\n<span class=\"synIdentifier\">}</span>);\n\n<span class=\"synComment\">// detail以下からアクセスできる</span>\nelm.addEventListener(<span class=\"synConstant\">'hoge'</span>, <span class=\"synIdentifier\">function</span>(e) <span class=\"synIdentifier\">{</span> console.log(e.detail.some); <span class=\"synIdentifier\">}</span>, <span class=\"synConstant\">false</span>);\nelm.dispatchEvent(ev);\n</pre><p>ちなみにすこし(?)前までは、</p>\n<pre class=\"code lang-javascript\" data-lang=\"javascript\" data-unlink><span class=\"synComment\">// イベント作って</span>\n<span class=\"synIdentifier\">var</span> ev = <span class=\"synStatement\">document</span>.createEvent(<span class=\"synConstant\">'Event'</span>);\n<span class=\"synComment\">// そしたら登録して</span>\nev.initEvent(<span class=\"synConstant\">'hoge'</span>, <span class=\"synConstant\">true</span>, <span class=\"synConstant\">true</span>);\nev.hoge = <span class=\"synConstant\">'fuga'</span>;\n\n<span class=\"synComment\">// いつもどおりなんやかんや書いて</span>\nelm.addEventListener(<span class=\"synConstant\">'hoge'</span>, <span class=\"synIdentifier\">function</span>(e) <span class=\"synIdentifier\">{</span> console.log(e.hoge); <span class=\"synIdentifier\">}</span>, <span class=\"synConstant\">false</span>);\nelm.dispatchEvent(ev);\n</pre><p>みたくev.detail とか関係なく渡せたぽい。</p>\n\n    <blockquote>\n        <p>参考：<a href=\"https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent\" target=\"_blank\" title=\"CustomEvent - Web API Interfaces | MDN\">CustomEvent - Web API Interfaces | MDN</a></p>\n\n    </blockquote>\n\n</div>\n<div class=\"section\">\n    <h3>気になるブラウザ互換性</h3>\n    <p>いわゆるPCモダンブラウザはいけるのかしら・・？<br />\nでもCustomEventは<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/IE\">IE</a>非対応みたいなこともMDNには書いてる・・・。</p><p>気になるモバイルさんはというと・・。</p>\n\n    <blockquote>\n        <p>参考：<a href=\"http://stackoverflow.com/questions/18845309/android-browser-still-uses-the-old-way-of-creating-events-in-javascritp?rq=1\" target=\"_blank\" title=\"javascript - android browser still uses the old way of creating events in javascritp - Stack Overflow\">javascript - android browser still uses the old way of creating events in javascritp - Stack Overflow</a></p>\n\n    </blockquote>\n<p>うーん、もしやこれはだめなやつなのでは・・・！<br />\niPhone5s x iOS7とかでは動いてるけど。</p><p><a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/jQuery\">jQuery</a>とかBackboneとか似たようなことしてないかなーと思ったけども、<br />\n特に new Event みたいなことはしてないみたい。<br />\nというか、createEvent とかもしてない！</p><p>いったいどこでどう使うもんなんやろうね、この<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/API\">API</a>・・。</p>\n\n    <blockquote>\n        <p>追記：<br />\nCustomEventですが、特に問題なく動作してます・・たぶん。<br />\nというのも、検証チームから特に何も言われてないので大丈夫だったんでしょう。<br />\nちなみに、Android2.3以上、<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/iOS5\">iOS5</a>以上しかわかんないです。</p>\n\n    </blockquote>\n\n</div>"
}
