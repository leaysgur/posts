{
  "title": "Node Expressで、Handlebarsを使う",
  "html": "<p>最初はちょっと手間取りましたが、なんとか使えるようになりました。</p>\n\n    <blockquote>\n        <p>参考：<a href=\"https://github.com/donpark/hbs\" target=\"_blank\" title=\"donpark/hbs · GitHub\">donpark/hbs · GitHub</a></p>\n\n    </blockquote>\n\n<div class=\"section\">\n    <h3>普通に使うだけ</h3>\n    <p>種も仕掛けもなかった。</p>\n<pre class=\"code lang-javascript\" data-lang=\"javascript\" data-unlink><span class=\"synComment\">// app.js</span>\n<span class=\"synIdentifier\">var</span> express = require(<span class=\"synConstant\">'express'</span>),\n      app = module.exports = express();\n\n<span class=\"synComment\">// ...</span>\n\n<span class=\"synIdentifier\">var</span> hbs = require(<span class=\"synConstant\">'hbs'</span>);\n\n<span class=\"synComment\">// ...</span>\n\napp.set(<span class=\"synConstant\">'view engine'</span>, <span class=\"synConstant\">'html'</span>);\napp.engine(<span class=\"synConstant\">'html'</span>, hbs.__express);\n</pre><p>とりあえずコレだけで、もうあの {{hoge}} が使えます。<br />\n拡張子をhtmlにしてることに特に意味はないので、hbsでもなんでも変更。</p>\n\n</div>\n<div class=\"section\">\n    <h3>テンプレートをインクルードしたい</h3>\n    <p>別ファイルをそのまま読み込みたいという話です。<br />\nejsでいうところの、</p>\n<pre class=\"code lang-javascript\" data-lang=\"javascript\" data-unlink>&lt;% include header.ejs %&gt;\n</pre><p>みたいなやつ。</p><p>それ、Handlebarsでもできるよ！</p>\n<pre class=\"code lang-javascript\" data-lang=\"javascript\" data-unlink><span class=\"synComment\">// app.jsのつづき</span>\n<span class=\"synIdentifier\">var</span> hbs = require(<span class=\"synConstant\">'hbs'</span>);\n<span class=\"synIdentifier\">var</span> fs = require(<span class=\"synConstant\">'fs'</span>);\n\n<span class=\"synComment\">// ...</span>\n\nhbs.registerPartial(<span class=\"synConstant\">'header'</span>, fs.readFileSync(__dirname + <span class=\"synConstant\">'/views/header.html'</span>, <span class=\"synConstant\">'utf8'</span>));\n</pre><p>とかするだけで、</p>\n<pre class=\"code lang-html\" data-lang=\"html\" data-unlink><span class=\"synComment\">&lt;!-- header.html --&gt;</span>\nこちらheader、こちらheader！\n</pre><p>を、</p>\n<pre class=\"code lang-html\" data-lang=\"html\" data-unlink><span class=\"synComment\">&lt;!-- index.html --&gt;</span>\n{{<span class=\"synError\">&gt;</span> header}}\n<span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">hr</span><span class=\"synIdentifier\">&gt;</span>\nメインのコンテンツやで\n</pre><p>ってできる。</p>\n\n</div>\n<div class=\"section\">\n    <h3>一気にregisterPartialする</h3>\n    <p>どこからコピーしてきたか忘れてしまったのですが・・。</p>\n<pre class=\"code lang-javascript\" data-lang=\"javascript\" data-unlink>fs.readdirSync(__dirname + <span class=\"synConstant\">'/views/partials'</span>).forEach(<span class=\"synIdentifier\">function</span>(fileName) <span class=\"synIdentifier\">{</span>\n  <span class=\"synIdentifier\">var</span> matches = <span class=\"synConstant\">/^([^.]+).hbs$/</span>.exec(fileName);\n  <span class=\"synStatement\">if</span> (!matches) <span class=\"synIdentifier\">{</span> <span class=\"synStatement\">return</span>; <span class=\"synIdentifier\">}</span>\n\n  <span class=\"synIdentifier\">var</span> name = matches<span class=\"synIdentifier\">[</span>1<span class=\"synIdentifier\">]</span>,\n        template = fs.readFileSync(__dirname + <span class=\"synConstant\">'/views/partials/'</span> + fileName, <span class=\"synConstant\">'utf8'</span>);\n  hbs.registerPartial(name, template);\n<span class=\"synIdentifier\">}</span>); \n</pre><p>としてあげれば、アプリ起動時にまとめてロードできて素敵。</p>\n\n</div>"
}
