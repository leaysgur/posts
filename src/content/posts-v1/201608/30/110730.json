{
  "title": "Object Rest/Spread Propertiesの気になる挙動",
  "html": "\n    <blockquote>\n        <p><a href=\"http://sebmarkbage.github.io/ecmascript-rest-spread/\">Object Rest/Spread Properties</a></p>\n\n    </blockquote>\n<p>この記事を書いてる時点でStage 2。</p>\n<pre class=\"code lang-javascript\" data-lang=\"javascript\" data-unlink><span class=\"synComment\">// Rest properties</span>\n<span class=\"synIdentifier\">let</span> <span class=\"synIdentifier\">{</span> x, y, ...z <span class=\"synIdentifier\">}</span> = <span class=\"synIdentifier\">{</span> x: 1, y: 2, a: 3, b: 4 <span class=\"synIdentifier\">}</span>;\nconsole.log(x); <span class=\"synComment\">// 1</span>\nconsole.log(y); <span class=\"synComment\">// 2</span>\nconsole.log(z); <span class=\"synComment\">// { a: 3, b: 4 }</span>\n\n<span class=\"synComment\">// Spread properties</span>\n<span class=\"synIdentifier\">let</span> n = <span class=\"synIdentifier\">{</span> x, y, ...z <span class=\"synIdentifier\">}</span>;\nconsole.log(n); <span class=\"synComment\">// { x: 1, y: 2, a: 3, b: 4 }</span>\n</pre><p>スプレッド<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%B1%E9%BB%BB%BB%D2\">演算子</a>の挙動がオブジェクトのプロパティでも使える便利なやつ。<br />\nご利用はBabelの<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%A5%D7%A5%E9%A5%B0%A5%A4%A5%F3\">プラグイン</a>からどうぞ。</p>\n\n    <blockquote>\n        <p><a href=\"https://github.com/babel/babel/tree/master/packages/babel-plugin-transform-object-rest-spread\">babel/packages/babel-plugin-transform-object-rest-spread at master &middot; babel/babel &middot; GitHub</a></p>\n\n    </blockquote>\n<p><br />\nいまBabelでこれを使うときに、「こうするとどうなる？」を試したメモがこの記事です。<br />\n決して仕様通りに動かねーじゃねーか！とかそういのではないです。<br />\n<br />\n<br />\n<br />\n</p>\n\n<div class=\"section\">\n    <h3>複数のオブジェクトをRestすると？</h3>\n    <pre class=\"code lang-javascript\" data-lang=\"javascript\" data-unlink><span class=\"synIdentifier\">let</span> A = <span class=\"synIdentifier\">{</span> a: 1, b: 2, c: 3, d: 4 <span class=\"synIdentifier\">}</span>;\n\n<span class=\"synIdentifier\">let</span> <span class=\"synIdentifier\">{</span> a, ...x, b, ...y <span class=\"synIdentifier\">}</span> = A;\n\nconsole.log(x); <span class=\"synComment\">// {&quot;b&quot;:2,&quot;c&quot;:3,&quot;d&quot;:4}</span>\nconsole.log(y); <span class=\"synComment\">// {&quot;c&quot;:3,&quot;d&quot;:4}</span>\n</pre><p>受ける変数より先に指定されてたキーを除くオブジェクトが代入されるらしい。</p><p>ちなみにコレ、Specでは書かれてないけどBabelだと動く系のやつらしい。<br />\nIssueもあった -> <a href=\"https://phabricator.babeljs.io/T7265\">https://phabricator.babeljs.io/T7265</a></p><p><blockquote class=\"twitter-tweet\" data-lang=\"ja\"><p lang=\"ja\" dir=\"ltr\"><a href=\"https://twitter.com/leader22\">@leader22</a> <a href=\"https://t.co/74khHatTOz\">https://t.co/74khHatTOz</a> <br>このセクションです。ArgumentPropertyList は ArgumentRestProperty を持っておらず、末尾に ArgumentRestProperty が書かれています。</p>&mdash; Toru Nagashima (@mysticatea) <a href=\"https://twitter.com/mysticatea/status/772665218098835458\">2016年9月5日</a></blockquote><script async src=\"//platform.twitter.com/widgets.js\" charset=\"utf-8\"></script></p><p>thx!</p>\n\n</div>\n<div class=\"section\">\n    <h3>オブジェクトじゃないやつをSpreadしたらどうなる？</h3>\n    <pre class=\"code lang-javascript\" data-lang=\"javascript\" data-unlink><span class=\"synIdentifier\">let</span> a = <span class=\"synConstant\">'a'</span>, b = 2, c = <span class=\"synConstant\">false</span>, A = <span class=\"synIdentifier\">{</span> A: <span class=\"synConstant\">'A'</span> <span class=\"synIdentifier\">}</span>, B = <span class=\"synIdentifier\">[</span><span class=\"synConstant\">'B'</span>, <span class=\"synConstant\">'BB'</span><span class=\"synIdentifier\">]</span>;\n\n<span class=\"synIdentifier\">let</span> x = <span class=\"synIdentifier\">{</span> ...a, ...b, ...c <span class=\"synIdentifier\">}</span>\n<span class=\"synIdentifier\">let</span> y = <span class=\"synIdentifier\">{</span> ...a, ...b, ...c, ...A, ...B <span class=\"synIdentifier\">}</span>\n\nconsole.log(x); <span class=\"synComment\">// {&quot;0&quot;:&quot;a&quot;}</span>\nconsole.log(y); <span class=\"synComment\">// {&quot;0&quot;:&quot;B&quot;,&quot;1&quot;:&quot;BB&quot;,&quot;A&quot;:&quot;A&quot;}</span>\n</pre><p>どうやらItterableなやつなら展開されるがそうでないものは何もしないっぽい。<br />\n文字列はItterableなので、一文字ずつ展開されるけど、同名のプロパティを後から指定すると上書きになるらしい。</p>\n\n</div>\n<div class=\"section\">\n    <h3>複数のオブジェクトをSpreadすると？</h3>\n    <pre class=\"code lang-javascript\" data-lang=\"javascript\" data-unlink><span class=\"synIdentifier\">let</span> a = <span class=\"synIdentifier\">{</span> a: 1 <span class=\"synIdentifier\">}</span>, b = <span class=\"synIdentifier\">{</span> b: 2 <span class=\"synIdentifier\">}</span>;\n\n<span class=\"synIdentifier\">let</span> x = <span class=\"synIdentifier\">{</span> ...a, ...b <span class=\"synIdentifier\">}</span>;\n\nconsole.log(x); <span class=\"synComment\">// {&quot;a&quot;:1,&quot;b&quot;:2}</span>\n</pre><p>普通にできる便利なやつ。<br />\nというかコレただの`Object.assign()`やし。</p>\n\n</div>"
}
