{
  "title": "iOSのSafariでvideoを複数再生したい",
  "html": "<p>もちろん音ありで。</p><p>いわゆるWebRTCでの複数人<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%A5%D3%A5%C7%A5%AA%A5%C1%A5%E3%A5%C3%A5%C8\">ビデオチャット</a>みたいなケース。</p><p>ただ普通に動画ファイルでもHLSでもなんでも、複数同時再生したいならこの問題にハマるはず。<br />\n<br />\n</p>\n\n<div class=\"section\">\n    <h3>現状の縛り</h3>\n    <p>現時点の<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/iOS\">iOS</a> <a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/Safari\">Safari</a>（確認したのは<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/iOS\">iOS</a> 11なので<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/Safari\">Safari</a> 11）で、`video`を複数再生するためには、いくつかの条件がある。</p>\n\n<ul>\n<li>無音であること\n<ul>\n<li>`video.muted = true`にする</li>\n<li>Audioのトラックが元々含まれないメディアである</li>\n</ul></li>\n<li>`playsinline`が効くこと\n<ul>\n<li>古いほうのWebViewだと使えないとかなかったっけ？（覚えてない）</li>\n</ul></li>\n</ul><p>この両方に当てはまる場合なら、複数の`video`を同時に再生できる。</p><p>ちなみに、自動再生はまた別のトピックなので割愛。</p>\n\n</div>\n<div class=\"section\">\n    <h3>問題</h3>\n    <p>WebRTCなコードで頻出するコレ。</p>\n<pre class=\"code lang-javascript\" data-lang=\"javascript\" data-unlink>video.autoplay = video.playsInline = <span class=\"synConstant\">true</span>;\nvideo.srcObject = stream;\n</pre><p>リモートのピアから送られてきたストリームを、`video`で再生したい。</p><p>もちろんカメラ映像だけでなく、マイク音声も乗ってるストリーム。</p><p>ただこれだと最初に書いたように、無音でないため同時に再生できない。</p><p>2つ目以降を再生しようと（`srcObject`に代入）すると、それまで再生されてた`video`が止まって、最後に再生しようとした`video`だけが音ありで再生される。</p><p>もちろん`muted`にしてる場合は、複数の`video`は再生できるので、映像だけは届く。ただし音がでない。意味ない。</p><p>別にWebRTCだからではなく、普通の動画ファイルでさえも、複数同時に再生することはできない。</p>\n\n</div>\n<div class=\"section\">\n    <h3>どうにかするには</h3>\n    <p>`video`は`muted`で再生できるようにしつつ、`audio`で音を鳴らす。</p>\n<pre class=\"code lang-javascript\" data-lang=\"javascript\" data-unlink><span class=\"synComment\">// さっきのコードに加えて</span>\n\n<span class=\"synComment\">// 必ずミュート</span>\nvideo.muted = <span class=\"synConstant\">true</span>;\nvideo.srcObject = stream;\n<span class=\"synComment\">// 音はaudioで</span>\naudio.autoplay = <span class=\"synConstant\">true</span>;\naudio.srcObject = stream;\n</pre><p>これだと、思った通りに動作する。</p>\n<pre class=\"code lang-html\" data-lang=\"html\" data-unlink><span class=\"synComment\">&lt;!-- これの代わりに --&gt;</span>\n<span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">video</span><span class=\"synIdentifier\"> </span><span class=\"synType\">src</span><span class=\"synIdentifier\">=</span><span class=\"synConstant\">&quot;&quot;</span><span class=\"synIdentifier\"> playsinline autoplay /&gt;</span>\n\n<span class=\"synComment\">&lt;!-- こうするってこと --&gt;</span>\n<span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">video</span><span class=\"synIdentifier\"> </span><span class=\"synType\">src</span><span class=\"synIdentifier\">=</span><span class=\"synConstant\">&quot;&quot;</span><span class=\"synIdentifier\"> muted playsinline autoplay /&gt;</span>\n<span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">audio</span><span class=\"synIdentifier\"> </span><span class=\"synType\">src</span><span class=\"synIdentifier\">=</span><span class=\"synConstant\">&quot;&quot;</span><span class=\"synIdentifier\"> autoplay /&gt;</span>\n</pre><p>現時点ではコレが一番リーズナブルな選択肢かなーと。</p><p>おそらくWebAudioで再生する方式でもいけるけど、根本的には同じなので、個人的には特にやる意義が見いだせない。</p><p>昔の<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/Android\">Android</a>で、`video`と`audio`を使って<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/2ch\">2ch</a>で音を鳴らそうと頑張ってた時のことを思い出して悲しくなった。</p>\n\n</div>\n<div class=\"section\">\n    <h3>おまけ</h3>\n    <p>なんとか`video`だけでやれんかと考えて試したあれこれ。</p>\n\n<div class=\"section\">\n    <h4>まず`muted`で再生してから解除</h4>\n    <p>WebRTCで取ってきたストリームではなく、ローカルにある動画ファイルで試した。</p><p>すると、</p>\n\n<ul>\n<li>`loop autoplay playsinline`な`video\n<ul>\n<li>すべて無音で再生される</li>\n</ul></li>\n<li>すべて`muted = false` にする\n<ul>\n<li>そのループ中だけは音ありで再生できる</li>\n<li>2ループ目からは、1つの`video`を残して再生が止まる</li>\n</ul></li>\n</ul><p>なにこのバグっぽい動き。</p>\n\n</div>\n<div class=\"section\">\n    <h4>`video`はひとつ、あとは`<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/canvas\">canvas</a>`で</h4>\n    <p>見えてる要素としての`video`を1つだけにして、後は裏方で`<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/canvas\">canvas</a>`に書けばいいのでは？作戦。</p>\n\n<ul>\n<li>`video`は1つなので音ありで再生できる</li>\n<li>`<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/canvas\">canvas</a>`は音がでないので、裏でWebAudioか`audio`で音を出す\n<ul>\n<li>実質、<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/JavaScript\">JavaScript</a>で音を担当するパターンと同じ</li>\n<li>`audio`タグ併用パターンのが<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%A5%B3%A5%B9%A5%D1\">コスパ</a>がいい</li>\n</ul></li>\n</ul><p>まあなんというか試す時間の無駄だった。<br />\n<br />\n</p>\n\n</div>\n<div class=\"section\">\n    <h4>音を出す`video`は1つにする</h4>\n    <p>UIと相談できるなら。</p><p>そもそもモバイルで表示領域も少ないし、複数`video`再生しても全部見れんわ！っていう前提のもと。</p><p>まあこれはこれで良い解決策だとは思う。</p>\n\n</div>\n</div>"
}
