{
  "title": "Node学園 24時限目 に行ってきたメモ #tng24",
  "html": "<p>東京は東京でも有楽町だった回。</p>\n\n    <blockquote>\n        <p><a href=\"https://nodejs.connpass.com/event/53534/\">Node&#x5B66;&#x5712; 24&#x6642;&#x9650;&#x76EE; - connpass</a></p>\n\n    </blockquote>\n\n<div class=\"section\">\n    <h3>「Node.js x WebAssembly」 by yosuke_furukawa</h3>\n    \n    <blockquote>\n        <p><a href=\"https://speakerdeck.com/yosuke_furukawa/node-dot-js-x-webassembly\">Node.js x WebAssembly // Speaker Deck</a></p>\n\n    </blockquote>\n\n<div class=\"section\">\n    <h4>WebAssemblyとは</h4>\n    \n<ul>\n<li>ポータブルで効率のいいバイナリ</li>\n<li>Nativeと同等の速度を目指す</li>\n</ul>\n</div>\n<div class=\"section\">\n    <h4><a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%A5%E6%A1%BC%A5%B9%A5%B1%A1%BC%A5%B9\">ユースケース</a></h4>\n    \n<ul>\n<li>ネイティブモジュールをWebで使いたい\n<ul>\n<li>`<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/vim\">vim</a>`とか <- 誰がやるん</li>\n<li><a href=\"https://rhysd.github.io/react-vimjs/\">https://rhysd.github.io/react-vimjs/</a></li>\n</ul></li>\n<li>ゲーム</li>\n<li>ブラウザ外でも使えるけどそんなにターゲットではなさそう</li>\n<li>全部を置き換えるのではなく、Cとか<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/C%2B%2B\">C++</a>で書いてあるものを動かすところから</li>\n</ul>\n</div>\n<div class=\"section\">\n    <h4>Node.js x Native Module</h4>\n    \n<ul>\n<li>現時点で、どうやってNative Moduleを使うか</li>\n<li>NAN\n<ul>\n<li><a href=\"https://github.com/nodejs/nan\">https://github.com/nodejs/nan</a></li>\n<li>V8の<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/API\">API</a>変更を吸収してくれる</li>\n<li>自由度は高いがbindingコストが・・</li>\n</ul></li>\n<li>node-<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/ffi\">ffi</a>\n<ul>\n<li><a href=\"https://github.com/node-ffi/node-ffi\">https://github.com/node-ffi/node-ffi</a></li>\n<li>外部呼び出し（Foreign Function Interface）はNodeに限らずある</li>\n</ul></li>\n<li><a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/emscripten\">emscripten</a>で`asm.js`に\n<ul>\n<li><a href=\"https://github.com/kripken/emscripten\">https://github.com/kripken/emscripten</a></li>\n<li><a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/Mozilla\">Mozilla</a>提唱の`asm.js`</li>\n<li>jsになっちゃうのでファイルサイズが↑↑</li>\n</ul></li>\n<li><a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/emscripten\">emscripten</a>で`wasm`に\n<ul>\n<li>V8の最新だと普通に動く</li>\n<li><a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/JIT\">JIT</a>が効かなそうな処理でないと恩恵が薄いかも</li>\n</ul></li>\n<li>stable module ABI\n<ul>\n<li><a href=\"https://github.com/nodejs/abi-stable-node\">https://github.com/nodejs/abi-stable-node</a></li>\n<li>まだNodeに対してはp-rがきてるだけ</li>\n</ul></li>\n</ul>\n</div>\n</div>\n<div class=\"section\">\n    <h3>「Node.js+GraphQLでBFFを作った話」 by qsona</h3>\n    \n    <blockquote>\n        <p><a href=\"http://qiita.com/qsona/items/2c906a4c736f9a10a2c5\">Node.js + GraphQL&#x3067;BFF&#x3092;&#x4F5C;&#x3063;&#x305F;&#x8A71; - Qiita</a></p>\n\n    </blockquote>\n\n<ul>\n<li>BFF is Backend For Frontends\n<ul>\n<li>クライアントとバックエンドの間のバックエンドサーバー</li>\n</ul></li>\n</ul>\n<div class=\"section\">\n    <h4>気をつけたこと</h4>\n    \n<ul>\n<li><a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%A5%C9%A5%E1%A5%A4%A5%F3\">ドメイン</a>ロジックは持たないように</li>\n<li>リクエストをまとめる役割だけに</li>\n<li>手探り = 何があるかわからないので、やりすぎない程度に</li>\n</ul>\n</div>\n<div class=\"section\">\n    <h4>やらなかったこと</h4>\n    \n<ul>\n<li>レスポンスの整形</li>\n<li>更新処理をまとめるとか</li>\n</ul>\n</div>\n<div class=\"section\">\n    <h4>Why Node.js</h4>\n    \n<ul>\n<li>フロントエンドの人でもさわりやすいように</li>\n<li>他にハマる言語がなかった</li>\n</ul>\n</div>\n<div class=\"section\">\n    <h4>Why GraphQL</h4>\n    \n<ul>\n<li>柔軟なクエリがかける</li>\n<li>型もある\n<ul>\n<li><a href=\"http://graphql.org/graphql-js/type/\">http://graphql.org/graphql-js/type/</a></li>\n</ul></li>\n<li>Backendをリソース指向にしていくと、束ねる役割が欲しくなる\n<ul>\n<li>凝集度も下げられる</li>\n</ul></li>\n</ul>\n</div>\n<div class=\"section\">\n    <h4>導入後の問題</h4>\n    \n<ul>\n<li>特定のキーだけ欲しいみたいなケースがあまりない\n<ul>\n<li>変にクエリを変えるとキャッシュが効きにくくなる</li>\n</ul></li>\n<li>改善したい内容がかぶる\n<ul>\n<li>Backend: <a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/JSON\">JSON</a> Schema / BFF: GraphQLTypes / Client: 腐敗防止層</li>\n<li>どこでやるべきか</li>\n<li>チーム的にも結合度が高いなら、普通に内製したほうがよい場面も</li>\n</ul></li>\n<li>GraphQLIntは32bitまで・・・</li>\n</ul>\n</div>\n<div class=\"section\">\n    <h4>振り返り</h4>\n    \n<ul>\n<li>一部だけで使うより、やっぱり全部通したい</li>\n<li>とりあえずBFF置く、まずは全<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/API\">API</a>をProxyする\n<ul>\n<li>そしてstep by stepでみたいな進め方のほうが良かったかも</li>\n</ul></li>\n</ul>\n</div>\n</div>\n<div class=\"section\">\n    <h3>「HyperApp - 1kbのビューライブラリ」 by Jorge Bucaran</h3>\n    \n    <blockquote>\n        <p><a href=\"http://qiita.com/jbucaran/items/ac7d54d862dcb33673f1\">HyperApp - 1kb&#x306E;&#x30D3;&#x30E5;&#x30FC;&#x30E9;&#x30A4;&#x30D6;&#x30E9;&#x30EA; - Qiita</a></p>\n\n    </blockquote>\n\n<div class=\"section\">\n    <h4>HyperApp</h4>\n    \n<ul>\n<li><a href=\"https://github.com/hyperapp/hyperapp\">https://github.com/hyperapp/hyperapp</a></li>\n<li><a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/gzip\">gzip</a>で1kb以下</li>\n<li>なのにパフォーマンスはReactと遜色ない</li>\n<li><a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%A5%EB%A1%BC%A5%BF%A1%BC\">ルーター</a>機能まで入ってるよ</li>\n<li>Reactはheavyだったので自作した</li>\n<li>V-DOMの実装はミニマルなものを探した\n<ul>\n<li>がなかったので、自作した</li>\n<li><a href=\"https://github.com/hyperapp/hyperapp/blob/master/src/app.js\">https://github.com/hyperapp/hyperapp/blob/master/src/app.js</a></li>\n</ul></li>\n</ul>\n</div>\n<div class=\"section\">\n    <h4>コードの雰囲気</h4>\n    \n<ul>\n<li>app = model + actions + view\n<ul>\n<li>JSXもかけるよ</li>\n</ul></li>\n<li>0 dependencies</li>\n<li>300行くらい</li>\n<li>これから\n<ul>\n<li>rAFでパッチするようにしていきたい</li>\n<li><a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/SSR\">SSR</a>できるようにしたい</li>\n<li>REPLとかも</li>\n</ul></li>\n</ul>\n</div>\n</div>\n<div class=\"section\">\n    <h3>「node-<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/whatwg\">whatwg</a>-url」 by abouthiroppy</h3>\n    \n    <blockquote>\n        <p><a href=\"https://abouthiroppy.github.io/slides/node-whatwg-url/\">abouthiroppy/node-whatwg-url</a></p>\n\n    </blockquote>\n\n<div class=\"section\">\n    <h4><a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/whatwg\">whatwg</a>とは</h4>\n    \n<ul>\n<li>ざっくり言うと、Webのいろいろな仕様を管理しているところ</li>\n<li>URLはその中で管理されてるひとつ\n<ul>\n<li><a href=\"https://url.spec.whatwg.org/\">https://url.spec.whatwg.org/</a></li>\n</ul></li>\n</ul>\n</div>\n<div class=\"section\">\n    <h4>URL</h4>\n    \n<ul>\n<li>準拠な実装 -> <a href=\"https://github.com/jsdom/whatwg-url\">https://github.com/jsdom/whatwg-url</a>\n<ul>\n<li>これを完成させるのは、Node.jsが担うミッションのひとつ</li>\n</ul></li>\n<li>仕様としてのStageは1</li>\n<li>IDLはこんな感じ\n<ul>\n<li><a href=\"https://url.spec.whatwg.org/#api\">https://url.spec.whatwg.org/#api</a></li>\n</ul></li>\n<li>`new URL(args)`した`url.searchParams`にはいってるのが`URLSearchParams`\n<ul>\n<li><a href=\"https://url.spec.whatwg.org/#interface-urlsearchparams\">https://url.spec.whatwg.org/#interface-urlsearchparams</a></li>\n</ul></li>\n<li>Nodeには既に`qs`というライブラリがあるが、それとは役割が違う（あくまでURLのためのもの）</li>\n<li>内部的な？Utilityっぽい<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/API\">API</a>も\n<ul>\n<li>domain to ASCII</li>\n<li>domain to <a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/Unicode\">Unicode</a></li>\n</ul></li>\n</ul>\n</div>\n</div>\n<div class=\"section\">\n    <h3>「llnode」 by kysnm</h3>\n    \n    <blockquote>\n        <p><a href=\"https://slides.com/kysnm/llnode/\">llnode by kysnm</a></p>\n\n    </blockquote>\n\n<div class=\"section\">\n    <h4>llnode</h4>\n    \n<ul>\n<li>えるえるのーど</li>\n<li>Node.js <a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/C%2B%2B\">C++</a> lldb plugin\n<ul>\n<li><a href=\"https://github.com/nodejs/llnode\">https://github.com/nodejs/llnode</a></li>\n</ul></li>\n<li>lldb\n<ul>\n<li><a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/LLVM\">LLVM</a>系の言語のためのデバッガー</li>\n<li>「LLDB is the default debugger in <a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/Xcode\">Xcode</a> on <a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/Mac%20OS%20X\">Mac OS X</a>」らしい</li>\n<li><a href=\"http://lldb.llvm.org/\">http://lldb.llvm.org/</a></li>\n</ul></li>\n<li>公式のデモが雰囲気をみるのにわかりよい（しかし長い）\n<ul>\n<li><a href=\"https://asciinema.org/a/29589\">https://asciinema.org/a/29589</a></li>\n</ul></li>\n</ul>\n</div>\n<div class=\"section\">\n    <h4>インス<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%A5%C8%A1%BC%A5%EB\">トール</a></h4>\n    \n<ul>\n<li>npmでインス<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%A5%C8%A1%BC%A5%EB\">トール</a>したらコケた</li>\n<li><a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/brew\">brew</a>で入れられるけど、linkは自分でやらないとダメ</li>\n<li>もしくは、git cloneして<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%A5%B3%A5%F3%A5%D1%A5%A4%A5%EB\">コンパイル</a>する <- おすすめ</li>\n</ul>\n</div>\n</div>\n<div class=\"section\">\n    <h3>「<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/OSS\">OSS</a>翻訳と GitLocalize」by sotayamashita</h3>\n    \n    <blockquote>\n        <p>資料は見つけたら</p>\n\n    </blockquote>\n\n<div class=\"section\">\n    <h4>翻訳で<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/OSS\">OSS</a>に貢献</h4>\n    \n<ul>\n<li><a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/OSS\">OSS</a>に貢献したい・・でも敷居が高い・・そんなあなたには翻訳がおすすめ！</li>\n<li>ドキュメントを読む・調べるので自然と詳しくなる</li>\n<li>コミュニティに溶け込める + 存在感UP -> 今後もやりやすくなる</li>\n<li>母国語があるので技術・コミュニティがより活性化</li>\n</ul>\n</div>\n<div class=\"section\">\n    <h4>問題</h4>\n    \n<ul>\n<li>公式（だいたい英語）だけが最新で、他の言語が追いついてないことが多い\n<ul>\n<li>というのが色んなコミュニティで問題になってる</li>\n</ul></li>\n</ul>\n</div>\n<div class=\"section\">\n    <h4>GitLocalize</h4>\n    \n<ul>\n<li><a href=\"https://gitlocalize.com/\">https://gitlocalize.com/</a></li>\n<li>先月パブリックベータ</li>\n<li><a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/GitHub\">GitHub</a>でForkしてきて、翻訳してく\n<ul>\n<li>レビューしてもらってコミットして育っていく</li>\n<li><a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/GitHub\">GitHub</a>に似たデザインで使いやすい</li>\n</ul></li>\n<li>Nodeのドキュメントの翻訳も進めていきます</li>\n</ul>\n</div>\n</div>\n<div class=\"section\">\n    <h3>「glitch.comでnode.jsのアプリを作る話」 by kosamari</h3>\n    \n    <blockquote>\n        <p>資料は見つけたら</p>\n\n    </blockquote>\n\n<ul>\n<li>技術の勉強した成果物どこに置こう問題\n<ul>\n<li><a href=\"https://kosamari.github.io/sweaterify/\">https://kosamari.github.io/sweaterify/</a></li>\n<li><a href=\"https://kosamari.github.io/translucent/\">https://kosamari.github.io/translucent/</a></li>\n<li>etc..</li>\n</ul></li>\n<li>クライアントサイドの技術だけで済むなら<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/GitHub\">GitHub</a>とかでもいい</li>\n<li>でもサーバーサイドが必要になるやつもある</li>\n<li>どうしようーーー・・</li>\n</ul>\n<div class=\"section\">\n    <h4>そこでGlitch</h4>\n    \n<ul>\n<li><a href=\"https://glitch.com/\">https://glitch.com/</a></li>\n<li>コラボレーションできるWebIDE</li>\n<li>StackOverflow作った会社と同じ系譜の人たち\n<ul>\n<li>リアルタイム</li>\n</ul></li>\n<li>いじった内容は<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/GitHub\">GitHub</a>にコミットもできる</li>\n</ul>\n</div>\n<div class=\"section\">\n    <h4>いいところ</h4>\n    \n<ul>\n<li>ファイルが階層化されて1つずつ編集できる\n<ul>\n<li>codepenとかは3ペイン見えてるので、初心者的に混乱する</li>\n</ul></li>\n<li>`npm start`みたくscriptsが書ける・動く\n<ul>\n<li>実行ログもちゃんと出る</li>\n</ul></li>\n<li>とにかくさくっと書ける！\n<ul>\n<li>設定でjs疲れやってないでコード書け</li>\n</ul></li>\n</ul>\n</div>\n<div class=\"section\">\n    <h4>もうちょいなところ</h4>\n    \n<ul>\n<li><a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%C6%C8%BC%AB%A5%C9%A5%E1%A5%A4%A5%F3\">独自ドメイン</a>はまだできない</li>\n<li>`alert()`がUIだったりする</li>\n<li>いろいろベータ版なところがあるよ</li>\n</ul>\n</div>\n</div>"
}
