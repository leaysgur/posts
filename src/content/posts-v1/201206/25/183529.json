{
  "title": "JavaScriptの「参照」について",
  "html": "<p>一体どこへ向かおうとしてるのかわからない感がありますが、サービス作るのは一旦休憩して、あいも変わらず<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/JavaScript\">JavaScript</a>道を追い求めております。<br />\n<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/JavaScript\">JavaScript</a>を通してプログラミングとは何たるかってのを知り、そこから色々派生していけばいいなぁという感じです、たしか。</p><p>というわけで、<a href=\"http://www.amazon.co.jp/gp/product/1590597273/ref=as_li_ss_tl?ie=UTF8&tag=leader22-22&linkCode=as2&camp=247&creative=7399&creativeASIN=1590597273\">Pro Javascript Techniques</a><img src=\"http://www.assoc-amazon.jp/e/ir?t=leader22-22&l=as2&o=9&a=1590597273\" width=\"1\" height=\"1\" border=\"0\" alt=\"\" style=\"border:none !important; margin:0px !important;\" />という本を買いました。<br />\n<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/jQuery\">jQuery</a>の作者、John Resigさんによる<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/JavaScript\">JavaScript</a>の参考書。<br />\n全編英語のペーパーバックです。<br />\nこれを読み切った頃には、いっぱしのJavaScripterになれると信じて頑張りますです。</p><p>ちょいちょいメモしながら勉強していこうと思ってまして、まずはその一回目。<br />\n<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/JavaScript\">JavaScript</a>特有の変数の「参照」やらについて。</p>\n\n<div class=\"seemore\">\n    \n<div class=\"section\">\n    <h3><a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/JavaScript\">JavaScript</a>の参照</h3>\n    <p>変数に格納した値を、別の変数から参照する場合に、元の値をいじくったらどうなるでしょう？シリーズ。</p>\n\n<div class=\"section\">\n    <h4>Objectの場合</h4>\n    <pre class=\"code lang-javascript\" data-lang=\"javascript\" data-unlink><span class=\"synComment\">// Object</span>\n<span class=\"synIdentifier\">var</span> obj1 = <span class=\"synIdentifier\">{}</span>;\n<span class=\"synIdentifier\">var</span> obj2 = obj1;\nobj1.a = <span class=\"synConstant\">true</span>;\n\nconsole.log(obj1, obj2, obj1.a === obj2.a); <span class=\"synComment\">// true</span>\n</pre>\n</div>\n<div class=\"section\">\n    <h4>Arrayの場合</h4>\n    <pre class=\"code lang-javascript\" data-lang=\"javascript\" data-unlink><span class=\"synComment\">// Array#1</span>\n<span class=\"synIdentifier\">var</span> arr1 = <span class=\"synIdentifier\">[</span>1,2,3<span class=\"synIdentifier\">]</span>;\n<span class=\"synIdentifier\">var</span> arr2 = arr1;\narr1.push(4);\n\nconsole.log(arr1, arr2, arr1.length === arr2.length); <span class=\"synComment\">// true</span>\n\n<span class=\"synComment\">// Array#2</span>\n<span class=\"synIdentifier\">var</span> arr3 = <span class=\"synIdentifier\">[</span>1,2,3<span class=\"synIdentifier\">]</span>;\n<span class=\"synIdentifier\">var</span> arr4 = arr3;\narr3 = <span class=\"synIdentifier\">[</span>4,5,6,7<span class=\"synIdentifier\">]</span>;\n\nconsole.log(arr3, arr4, arr3.length === arr4.length); <span class=\"synComment\">// false</span>\n</pre>\n</div>\n<div class=\"section\">\n    <h4>Stringの場合</h4>\n    <pre class=\"code lang-javascript\" data-lang=\"javascript\" data-unlink><span class=\"synComment\">//String</span>\n<span class=\"synIdentifier\">var</span> str1 = <span class=\"synConstant\">'Str'</span>;\n<span class=\"synIdentifier\">var</span> str2 = str1;\nstr1 += <span class=\"synConstant\">'ing'</span>;\n\nconsole.log(str1, str2, str1 === str2); <span class=\"synComment\">// false</span>\n</pre>\n</div>\n</div>\n<div class=\"section\">\n    <h3>挙動の違い</h3>\n    <p>新しい値の代入になるのか、既存のオブジェクトの操作かどうかで挙動が違うんですね。</p>\n<pre class=\"code lang-javascript\" data-lang=\"javascript\" data-unlink><span class=\"synComment\">// 新しい値の代入</span>\n<span class=\"synIdentifier\">var</span> arr3 = <span class=\"synIdentifier\">[</span>1,2,3<span class=\"synIdentifier\">]</span>;  <span class=\"synComment\">// arr3はメモリ上の[1,2,3]が格納された場所を参照している。</span>\n<span class=\"synIdentifier\">var</span> arr4 = arr3;     <span class=\"synComment\">// arr4もメモリ上の[1,2,3]が格納された場所を参照している。(arr3と同じところを参照)</span>\narr3 = <span class=\"synIdentifier\">[</span>4,5,6,7<span class=\"synIdentifier\">]</span>;    <span class=\"synComment\">// arr3はメモリ上の[4,5,6,7]が格納された場所を参照するようになる。(arr4とは違うところを参照)</span>\n\nconsole.log(arr3, arr4, arr3.length === arr4.length); <span class=\"synComment\">// false</span>\n</pre><p>変数への新しい値の「代入」＝変数の持ってた参照先が変わってしまうってこと。</p><p>この「参照先」ってイメージが掴めれば、<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/JavaScript\">JavaScript</a>の変数の中身に惑わされることはない感じ。</p>\n\n</div>\n</div>"
}
