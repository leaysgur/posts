{
  "title": "GETした値のエスケープのために必要なこと",
  "html": "<p><a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/PHP\">PHP</a>にしろなんにしろ、<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%A5%A6%A5%A7%A5%D6%A5%B5%A1%BC%A5%D3%A5%B9\">ウェブサービス</a>を作るにあたってPOSTやらGETやらとは無縁でいられませんね。</p><p><a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/XSS\">XSS</a>やら<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/SQL%A5%A4%A5%F3%A5%B8%A5%A7%A5%AF%A5%B7%A5%E7%A5%F3\">SQLインジェクション</a>やらの魔の手を回避するためにも、エスケープについて知っておくべき必要がありそうです。</p><p>ちょっとした前提知識はあるものの、実際何をどう書けば良いかわからんかったので、調べたメモをここに。</p>\n\n<div class=\"seemore\">\n    \n<div class=\"section\">\n    <h3>最低限エスケープすべきもの</h3>\n    \n    <pre class=\"code\" data-unlink>&amp;\n&#39;\n&#34;\n&lt;\n&gt;</pre>\n<p>最低限これはやっとけだそうです。<br />\nそのための関数として、</p>\n\n    <pre class=\"code lang-php\" data-lang=\"php\" data-unlink>$str = $_GET[&#39;query&#39;];\n$e_str = htmlspecialchars($str, ENT_QUOTES, &#34;utf-8&#34;);</pre>\n\n    <blockquote>\n        <p>参考：<a href=\"http://php.net/manual/ja/function.htmlspecialchars.php\" target=\"_blank\" title=\"PHP: htmlspecialchars - Manual\">PHP: htmlspecialchars - Manual</a></p>\n\n    </blockquote>\n<p>第二・第三引数は省略できるそうですが、きっちり指定しろとどこかで読んだ覚えがあります。</p><p>最低限はこうすべしとのこと。</p>\n\n<div class=\"section\">\n    <h4>もっとしっかりエスケープ</h4>\n    \n    <pre class=\"code lang-php\" data-lang=\"php\" data-unlink>htmlentities($str, ENT_QUOTES, &#34;utf-8&#34;);</pre>\n<p>より沢山の種類をエスケープしてくれるとのこと。<br />\n特に理由がない限りこっちを使ったら良いと思います。</p>\n\n</div>\n</div>\n<div class=\"section\">\n    <h3>シングルクォートにバックスラッシュが勝手に付く</h3>\n    <p>これにちょっとハマりました。<br />\n<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/PHP\">PHP</a>にはマジッククォートなる仕組みがあるらしく。</p>\n\n    <blockquote>\n        <p>参考：<a href=\"http://nyx.pu1.net/practice/form/form3.php\" target=\"_blank\" title=\"PHPスクリプト講座：マジッククォートの処理 -- そふぃのphp入門\">PHPスクリプト講座：マジッククォートの処理 -- そふぃのphp入門</a></p>\n\n    </blockquote>\n<p>エスケープとかしなくても、サーバーの設定によっては自動でシングルクォート・ダブルクォートがエスケープされるそうな。<br />\nスラッシュ：\"/\"がくっついてかえってきます。</p><p>そのまま表示には使えないので、スラッシュを外します。</p>\n\n    <pre class=\"code lang-php\" data-lang=\"php\" data-unlink>function escStr($str, $entq=ENT_QUOTES, $strcode=&#39;UTF-8&#39;){\n    if (is_array($str)) {\n        $esstr = array_map(&#34;escStr&#34;, $str);\n    } else {\n        $esstr = htmlentities($str, $entq, $strcode);\n    }\n    \n    if ( get_magic_quotes_gpc() ) { // サーバーで自動的にスラッシュをエスケープする設定になってるかチェック\n\t\treturn stripslashes( $esstr ); // スラッシュを外す関数\n\t}else{\n\t\treturn $esstr;\n\t}\n}\n\necho escStr($_GET[&#39;query&#39;]); //エスケープ後！</pre>\n\n    <blockquote>\n        <p>参考：<a href=\"http://www.mapee.jp/wlh/htmlphp.html\" target=\"_blank\" title=\"HTMLエスケープを簡単にする独自のPHP関数 - ウェブライフハック\">HTMLエスケープを簡単にする独自のPHP関数 - ウェブライフハック</a></p>\n\n    </blockquote>\n<p>これで良さそう。</p>\n\n</div>\n<div class=\"section\">\n    <h3><a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/SQL\">SQL</a>関係のエスケープには</h3>\n    <p>そういう時はそういう用に、</p>\n\n    <pre class=\"code lang-php\" data-lang=\"php\" data-unlink>mysql_real_escape_string($str);</pre>\n<p>とかそういうのがあるみたいです。</p><p>HTMLとして画面に出す文字のエスケープと、DBに格納するため・SQL発行のための文字のエスケープは別と考えた方が良さそうです。<br />\nそっちはまた今度！</p><p>もっと良い書き方がある・あれを忘れてるなどあればぜひぜひ教えていただけると助かります。</p>\n\n</div>\n</div>"
}
