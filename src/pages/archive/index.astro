---
import { getCollection } from "astro:content";
import { toPath, toDate } from "../../libs/utils";
import RootLayout from "../../components/root-layout/index.astro";
import PostList from "../../components/post-list.astro";

const { PUBLIC_BASE_PATH } = import.meta.env;

const [allPostsV1, allPostsV2] = await Promise.all([
  getCollection("posts-v1"),
  getCollection("posts-v2"),
]);

const allPosts = [...allPostsV1, ...allPostsV2].map((p) => ({
  path: toPath(p.id),
  title: p.data.title,
  date: toDate(p.id),
}));
allPosts.sort((a, b) => b.path.localeCompare(a.path));

type PostsGroup = {
  year: number;
  posts: typeof allPosts;
};

const grouped = [];
for (const post of allPosts) {
  const year = post.date.getFullYear();
  if (grouped.at(-1)?.year !== year) {
    const group: PostsGroup = { year, posts: [] };
    grouped.push(group);
  }

  grouped.at(-1)!.posts.push(post);
}
---

<RootLayout pageTitle="All Posts">
  <h1>All Posts</h1>
  <p>There are {allPosts.length} posts.</p>
  {
    grouped.map(({ year, posts }, idx) => (
      <details open={idx === 0}>
        <summary>
          <a href={PUBLIC_BASE_PATH + "archive/" + year + "/"}>{year}</a>:{" "}
          {posts.length} posts
        </summary>
        <PostList items={posts} />
      </details>
    ))
  }
</RootLayout>
