{
  "title": "Twitterとの連携でできることのまとめ",
  "html": "<p>何事も「まずやってみる」のは大事なことですよね。<br />\nとはいえ「やる前に少し調べる」のはもっと大事ですよね・・。<br />\nただ・・・「やる前に少し調べるつもりが調べっぱなしになる」なんてことにはご注意。</p><p>というわけで、ウェブサービスやらを作る時に、絶賛ブレイク中のTwitterを使って、「何ができるのか」をまとめてみます。<br />\n適当に調べてここまできたけど、実は何通りかやり方があって、その他のやり方のが明らかに効率的・・・！なんてことにならないためにも、事前に調べられることは調べておきましょうってな趣旨です。<br />\n広く浅くいきます！</p>\n\n    <blockquote>\n        <p>※以下の内容は、2012年01月27日時点のものです。</p>\n\n    </blockquote>\n\n<div class=\"seemore\">\n    \n<div class=\"section\">\n    <h3>Twitterが提供するAPIの一覧</h3>\n    \n<ul>\n<li>Widget</li>\n<li>Button</li>\n<li>Embedded Tweets</li>\n<li>Web Intents</li>\n</ul>\n<ul>\n<li>Search API</li>\n<li>REST API</li>\n<li>@Anywhere</li>\n</ul>\n<ul>\n<li>Streaming API</li>\n</ul>\n<ul>\n<li>Bookmarklet(おまけ)</li>\n<li>Image Resouces(おまけ)</li>\n</ul><p>意外にいっぱいあります。<br />\nただ用途によって使い分ける必要があります。<br />\n例えば、「つぶやき表示する」だけでも、REST API、Search API、Streaming API、Widget、Embedded Tweets、Widget・・・という選択肢が用意されます。<br />\nAPIを使うにあたって、それぞれどういったものか、導入しやすいかなどチェックすべき観点が変わってきます。</p><p>それを、ゆるくまとめてみようと思います。<br />\nサイトは静的、サービスは動的というイメージです。<br />\nサイトとブログの違いは、特定のテーマに沿って構築されたものか、最小単位が記事なのかで分けました。<br />\nアプリは特定のテーマのもの、クライアントアプリはいわゆるクライアントです。<br />\nちなみに、用途も難度も素人な私の感覚ですので本気にしないでくださ・・。</p><p>では、導入しやすそうなものからどうぞ。</p>\n\n</div>\n<div class=\"section\">\n    <h3>Widget</h3>\n    \n    <blockquote>\n        <p>概要：<br />\nあちこちのサイトのサイドバーとかによくいる、ブログパーツみたいなやつです。<br />\n用途：<br />\nウェブサービス、ウェブサイト、ブログ<br />\n難度：★☆☆☆☆</p>\n\n    </blockquote>\n\n<div class=\"section\">\n    <h4>もっとも簡単</h4>\n    <p>もはや説明不要じゃないかと・・。<br />\n一応URLを。</p>\n\n    <blockquote>\n        <p>参考：<a href=\"https://twitter.com/about/resources/widgets\">Twitter / ウィジェット</a></p>\n\n    </blockquote>\n<p>ここで作ったコードを貼るだけです。<br />\nwidget.jsについては後述します。</p>\n\n</div>\n<div class=\"section\">\n    <h4>ウィジェットの種類</h4>\n    \n<ul>\n<li>自分のTL</li>\n<li>検索結果</li>\n<li>お気に入り</li>\n<li>リストのTL</li>\n</ul><p>以上4つを表示できます。</p><p></p>\n\n</div>\n</div>\n<div class=\"section\">\n    <h3>Button</h3>\n    \n    <blockquote>\n        <p>概要：<br />\nつぶやきボタン、フォローボタンなどなど。<br />\nこのページにもあるよく見かけるアレです。<br />\nコードを生成して、貼っつけるだけ。<br />\n用途：<br />\nウェブサービス、ウェブサイト、ブログ<br />\n難度：★☆☆☆☆</p>\n\n    </blockquote>\n\n<div class=\"section\">\n    <h4>ボタンの種類</h4>\n    \n<ul>\n<li>特定のページをつぶやくボタン</li>\n<li>特定のハッシュタグについてつぶやくボタン</li>\n<li>特定のユーザーに@mentionするボタン</li>\n<li>特定のユーザーをフォローするボタン</li>\n</ul>\n</div>\n<div class=\"section\">\n    <h4>ブログやるなら置きたいつぶやきボタン</h4>\n    \n    <pre class=\"code lang-html\" data-lang=\"html\" data-unlink>&lt;a href=&#34;https://twitter.com/share&#34; class=&#34;twitter-share-button&#34; data-lang=&#34;en&#34;&gt;Tweet&lt;/a&gt;\n&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=&#34;//platform.twitter.com/widgets.js&#34;;fjs.parentNode.insertBefore(js,fjs);}}(document,&#34;script&#34;,&#34;twitter-wjs&#34;);&lt;/script&gt;</pre>\n<p>たった２行！</p><p>つぶやかれた数を表示したり、ボタンのサイズを変えたりできます。</p>\n\n</div>\n<div class=\"section\">\n    <h4>コード書かなくても</h4>\n    \n    <blockquote>\n        <p>参考：<a href=\"https://twitter.com/about/resources/buttons#tweet\">Twitter / Twitterボタン</a></p>\n\n    </blockquote>\n<p>ここで簡単に使えます。<br />\nWordPressならショートコードとか、プラグインとかも出てますよね。</p>\n\n</div>\n<div class=\"section\">\n    <h4>ちなみに</h4>\n    <p>ターゲット自体はaタグに囲まれた中を参照するみたいですが、JavaScriptを読み込んだ時点でリンクが生成されるようです。<br />\nAjaxで後から構築した要素に対して・・とか考えたのですが、どうやらできないみたいです・・。<br />\n↑できる方法があれば是非教えてください。</p><p></p>\n\n</div>\n</div>\n<div class=\"section\">\n    <h3>Embedded Tweets</h3>\n    \n    <blockquote>\n        <p>概要：<br />\n特定のつぶやきを、サイトに埋め込みます。<br />\n用途：<br />\nウェブサービス、ウェブサイト、ブログ<br />\n難度：★★☆☆☆</p>\n\n    </blockquote>\n\n    <blockquote>\n        <p>参考：<a href=\"https://dev.twitter.com/docs/embedded-tweets\">Embedded Tweets | Twitter Developers</a></p>\n\n    </blockquote>\n\n<div class=\"section\">\n    <h4>つぶやきIDさえわかれば簡単に</h4>\n    \n    <pre class=\"code lang-html\" data-lang=\"html\" data-unlink>&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p&gt;Search API will now always return&#34;real&#34; Twitter user IDs. The with_twitter_user_id parameter is no longernecessary. An era has ended. ^TS&lt;/p&gt;&amp;mdash;Twitter API (@twitterapi) &lt;a href=&#34;https://twitter.com/twitterapi/status/133640144317198338&#34; data-datetime=&#34;2011-11-07T20:21:07+00:00&#34;&gt;November7, 2011&lt;/a&gt;&lt;/blockquote&gt;\n&lt;script src=&#34;//platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;</pre>\n<p>これでOK！<br />\nwidget.jsなるファイルですが、何かとよー出てきます。<br />\nウィジェットとかつぶやきボタンとか、フォローボタンのときに。<br />\nこのファイルですが、読み込むのはページに1回で良かったりします。<br />\n他ですでに読み込んでて、かぶってる場合は不要です。</p>\n\n</div>\n<div class=\"section\">\n    <h4>APIあります</h4>\n    <p>そこは天下のTwitter！<br />\n上記のREST APIに、これを表示するためのhtmlを取得できるAPIがあります。</p>\n\n    <blockquote>\n        <p>参考：<a href=\"https://dev.twitter.com/docs/api/1/get/statuses/oembed\">GET statuses/oembed | Twitter Developers</a></p>\n\n    </blockquote>\n<p>動的につぶやきIDを受け取って生成してくれます。<br />\nでもただのREST APIなので、もちろんリクエスト制限ありですが・・。</p><p>でもキレイなので、ブログとかにはオススメです。</p><p></p>\n\n</div>\n</div>\n<div class=\"section\">\n    <h3>Web Intents</h3>\n    \n    <blockquote>\n        <p>概要：<br />\nただのリンク・・・！<br />\n用途：<br />\nウェブサービス、ウェブサイト、ブログ<br />\n難度：★★☆☆☆</p>\n\n    </blockquote>\n\n<div class=\"section\">\n    <h4>なにこれ？</h4>\n    <p>いわゆるつぶやきに対してできる行為である、</p>\n\n<ul>\n<li>リプライ</li>\n<li>お気に入り</li>\n<li>リツイート</li>\n<li>フォローとプロフィール</li>\n</ul><p>を、リンクからのポップアップで提供できるものです。</p>\n\n</div>\n<div class=\"section\">\n    <h4>つかいみち</h4>\n    <p>影は薄いですよね。<br />\n他のREST API、Embedded Tweetsなどなどあるので出番は少ないかもです。<br />\nでもまぁ、API制限を気にする必要があって、どうにか返信やRTの機能をつける時には使えるかと。<br />\n今作ってるサービスでも使おうと思ってます。</p>\n\n</div>\n<div class=\"section\">\n    <h4>Javascript Eventsあります</h4>\n    <p>影の薄い・・とか書いたものの、実はwidget.jsの親玉みたいなやつやったりします。<br />\n上述のフォローボタン然り、こういうリンク系はポップアップ＝サイト外なので、基本的にこちらから手が出せません。</p><p>GoogleAnalyticsなどで、他の機能に対してフォローボタンやRTリンクを押されたことを拾うためには、これで監視する必要ありです。<br />\nクリックイベントに他の処理を絡めたり・・っていうやつです。</p>\n\n    <pre class=\"code\" data-unlink>ひとやすみひとやすみ。\n\nここからは、機能によっては開発者登録が必要です。</pre>\n\n</div>\n</div>\n<div class=\"section\">\n    <h3>@Anywhere</h3>\n    \n    <blockquote>\n        <p>概要：<br />\nTwitterの機能を手軽にサイトに統合できるものです。<br />\nユーザー名のリンクにマウスを乗せたら、なんかカードみたいな表示が出たり・・したことないですか？<br />\nあれです。<br />\n用途：<br />\nウェブサービス、ウェブサイト、ブログ<br />\n難度：★★★☆☆<br />\n登録：要</p>\n\n    </blockquote>\n\n<div class=\"section\">\n    <h4>機能</h4>\n    \n<ul>\n<li>テキストから@ユーザー名をリンクに変換</li>\n<li>ユーザー名にホバーすると、情報を表示</li>\n<li>つぶやきボックス</li>\n<li>フォローボタン</li>\n<li>ログイン機能</li>\n</ul>\n</div>\n<div class=\"section\">\n    <h4>見栄えよしやけど・・</h4>\n    <p>やっぱりホバーで出るHovercardsがかっこよいです。<br />\nなんかすごい機能を実装した感覚になるので。</p><p>ただこれもDOM構築時にリンクを作るようで、Ajaxで後から作ったやつに適応するためには、その度にオブジェクトを作る必要があるみたいです。<br />\nそしてそんなことしてると、あっという間にAPI制限を食いつぶし・・・（ｒｙ<br />\n当たり前なんですけど、これがショックやった・・・！<br />\nただ、こじんまり使うにはとっても便利ですよ。</p><p>こちらは開発者登録をして、APIキーを取得する必要があります。</p><p></p>\n\n</div>\n</div>\n<div class=\"section\">\n    <h3>Search API</h3>\n    \n    <blockquote>\n        <p>概要：<br />\nTwitterを検索できます。<br />\nこちらもHttpでリクエストし、結果をXMLやJSONで取得します。<br />\n用途：<br />\nウェブサービス、アプリ、クライアントアプリ<br />\n難度：★★★☆☆</p>\n\n    </blockquote>\n\n<div class=\"section\">\n    <h4>REST APIと違う点</h4>\n    <p>API制限がリクエスト回数ではなく、検索クエリの複雑さによって決まります。<br />\n基本的には制限なしに使えます。<br />\n7-10日前くらいまでしか見れません。</p>\n\n</div>\n<div class=\"section\">\n    <h4>Search APIの生い立ち</h4>\n    <p>これをREST APIと分けたのは、Twitter社自体が説明しているように、Twitter APIの変遷を考慮してです。<br />\n説明にもありますが、この検索機能は、昔別の会社が持ってた機能だそうです。<br />\nだから純粋にTwitterに溜まっているデータと、検索APIの結果として返ってくるデータには若干の差異(フォーマットなり数なり)があるとのこと。</p>\n\n</div>\n</div>\n<div class=\"section\">\n    <h3>REST API</h3>\n    \n    <blockquote>\n        <p>概要：<br />\n用意された機能に応じたURLに対し、Httpで特定のパラメータをリクエスト。<br />\nその結果をJSONやXML形式で取得できるAPI。<br />\n用途：<br />\nウェブサービス、アプリ、クライアントアプリ<br />\n難度：★★★★☆</p>\n\n    </blockquote>\n\n<div class=\"section\">\n    <h4>Twitterで提供される機能のすべてがここに！</h4>\n    <p>タイムラインの取得、つぶやき、リプライはもちろんDMやお気に入りも。<br />\nユーザーのフォローやリストへの登録、ブロックなんかも。<br />\nもはやマッシュアップに必須なOAuthの認証も使えます。<br />\nいわゆるウェブAPIです。</p>\n\n</div>\n<div class=\"section\">\n    <h4>API制限</h4>\n    <p>切っては切れないのがこのAPI制限。<br />\n無制限にデータを取得できるわけではなく、一定数を超えてリクエストすると制限がかかります。<br />\nOAuthで認証されてるシーンと、そうでない認証なしで制限値が変わります。</p>\n\n</div>\n<div class=\"section\">\n    <h4>全部入りなので</h4>\n    <p>サービス作る！アプリ作る！なら間違いなくお世話になります。<br />\nそうでない人には、敷居が高すぎます・・。←<br />\nそして、OAuthなしでは一瞬でAPI制限にかかるので、認証もほとんど必須やと思います。<br />\n後述のStreaming APIとの棲み分けを、実装したい機能と相談すべきではあります。</p><br />\n<p></p>\n\n</div>\n</div>\n<div class=\"section\">\n    <h3>Streaming API</h3>\n    \n    <blockquote>\n        <p>概要：<br />\nREST APIはリクエストする度にレスポンスしてくれるのに対し、レスポンスされっぱなしになるのがコレ。<br />\nもちろんレスポンスにはフィルタをかけることができます。<br />\nよりリアルタイム性を追求する場合には、コレを。<br />\n用途：<br />\nウェブサービス、アプリ、クライアントアプリ<br />\n難度：★★★★★</p>\n\n    </blockquote>\n\n<div class=\"section\">\n    <h4>No data...</h4>\n    <p>すみませんが、これに関してはほとんど調べていないのでなんとも言えないです。<br />\nREST APIに比べて、「low-latency high-volume」だそうです。<br />\nTwitterのデータをマイニングして分析・・とか、TLを耐えず監視して・・とかいう場合に使います。</p><p>HttpsでしかAPIを叩けなかったり(?)、Twitter社以外にもデータを提供してる会社があったり。<br />\nでもゆくゆくは使えるようになりたいなぁと思ってます。</p><br />\n<p></p>\n\n</div>\n</div>\n<div class=\"section\">\n    <h3>Bookmarklet(おまけ)</h3>\n    <p>おまけです。<br />\nただのブックマークレットです。</p><p>特定のページについてつぶやきたい場合に。</p>\n\n    <blockquote>\n        <p>参考：<a href=\"https://dev.twitter.com/docs/share-bookmarklet\">Share Bookmarklet | Twitter Developers</a></p>\n\n    </blockquote>\n\n    <pre class=\"code lang-javascript\" data-lang=\"javascript\" data-unlink>javascript:(function(){window.twttr=window.twttr||{};var D=550,A=450,C=screen.height,B=screen.width,H=Math.round((B/2)-(D/2)),G=0,F=document,E;if(C&amp;gt;A){G=Math.round((C/2)-(A/2))}window.twttr.shareWin=window.open(&#39;http://twitter.com/share&#39;,&#39;&#39;,&#39;left=&#39;+H+&#39;,top=&#39;+G+&#39;,width=&#39;+D+&#39;,height=&#39;+A+&#39;,personalbar=0,toolbar=0,scrollbars=1,resizable=1&#39;);E=F.createElement(&#39;script&#39;);E.src=&#39;http://platform.twitter.com/bookmarklets/share.js?v=1&#39;;F.getElementsByTagName(&#39;head&#39;)[0].appendChild(E)}());</pre>\n<p>ブラウザのお気に入りに上記のコードを登録して、つぶやきたいページでぽんと。</p>\n\n</div>\n<div class=\"section\">\n    <h3>Image Resouces(おまけ)</h3>\n    <p>こちらもおまけです。</p><p>Twitterのロゴや、RT・お気に入り・リプライの画像です。</p>\n\n    <blockquote>\n        <p>参考：<a href=\"https://dev.twitter.com/docs/image-resources\">Image Resources | Twitter Developers</a><br />\n参考：<a href=\"https://twitter.com/about/resources/logos\">Twitter / ロゴとアイコン</a></p>\n\n    </blockquote>\n<p>ちっちゃい鳥のロゴがかわいいですです。</p>\n\n</div>\n<div class=\"section\">\n    <h3>さいごに</h3>\n    <p>広く浅くのつもりが、地味に深くなってしまった・・。</p><p>開発者の方には言うまでもないと思いますが、ガイドラインには最低限目を通した上で、アプリやサービスを開発するべきやと思います。<br />\nぜひご一読を。</p>\n\n    <blockquote>\n        <p>参考：<a href=\"https://dev.twitter.com/docs/things-every-developer-should-know\">Things Every Developer Should Know | Twitter Developers</a><br />\n参考：<a href=\"http://support.twitter.com/articles/249071-twitter-api\">Twitter ヘルプセンター | Twitter リミットについて (投稿、API、ダイレクトメッセージ、フォロー)</a><br />\n参考：<a href=\"https://dev.twitter.com/terms/display-guidelines\">Display Guidelines | Twitter Developers</a></p>\n\n    </blockquote>\n<p>ただつぶやき表示するだけでも、こんなにルールがあるとは知らなんだ！</p><p>ライブラリもたくさん出てますので、デキる開発者の皆さんは、それを活用されたし。<br />\nそんな人たちはここを見ることはないでしょうけどｗ</p><p>はてさて。<br />\n個人サービスを作ってまして、詰まったらリファレンスをのぞくことにしてるんです<br />\nけど、いやぁ・・、人並みに英語が読めてよかったー。</p><p>誰かのお役に立ちますように！</p>\n\n</div>\n</div>"
}
