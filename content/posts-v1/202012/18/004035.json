{
  "title": "SVGをcanvas要素で扱う",
  "html": "<p>普通の`img`やら`video`要素なら、`CanvasRenderingContext2D`の`drawImage()`で楽勝なんですが、<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/SVG\">SVG</a>は画像であって画像ではないので、ひと手間が必要・・・。</p><p>地味に面倒だったのでメモ。<br />\n<br />\n</p>\n\n<div class=\"section\">\n    <h3>やりたかったこと</h3>\n    \n<ul>\n<li>インライン<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/SVG\">SVG</a>を使う</li>\n<li><a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/CSS\">CSS</a>で色を適当に変える</li>\n<li>それを、`<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/canvas\">canvas</a>`に貼り付ける</li>\n<li>画像としてダウンロードする</li>\n</ul><p>その過程で、<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/SVG\">SVG</a>を`<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/canvas\">canvas</a>`に載せたくて、どうしよう？ってなった。</p>\n\n</div>\n<div class=\"section\">\n    <h3>こうなった</h3>\n    <pre class=\"code lang-javascript\" data-lang=\"javascript\" data-unlink><span class=\"synStatement\">const</span> SIZE = 400;\n\n<span class=\"synComment\">//</span>\n<span class=\"synComment\">// SVG</span>\n<span class=\"synComment\">// - change color by CSS via inline-svg</span>\n<span class=\"synComment\">//</span>\n<span class=\"synStatement\">const</span> $svg = <span class=\"synStatement\">document</span>.querySelector(<span class=\"synConstant\">&quot;svg&quot;</span>);\n$svg.querySelector(<span class=\"synConstant\">&quot;path.a&quot;</span>).style.fill = <span class=\"synConstant\">&quot;#e8e733&quot;</span>;\n\n<span class=\"synComment\">//</span>\n<span class=\"synComment\">// CANVAS</span>\n<span class=\"synComment\">// - change color by canvas</span>\n<span class=\"synComment\">// - draw SVG above</span>\n<span class=\"synComment\">//</span>\n<span class=\"synStatement\">const</span> $canvas = <span class=\"synStatement\">document</span>.createElement(<span class=\"synConstant\">&quot;canvas&quot;</span>);\n$canvas.width = $canvas.height = SIZE;\n\n<span class=\"synStatement\">const</span> ctx = $canvas.getContext(<span class=\"synConstant\">&quot;2d&quot;</span>);\n\nctx.fillStyle = <span class=\"synConstant\">&quot;lightgreen&quot;</span>;\nctx.fillRect(0, 0, SIZE, SIZE);\n\n<span class=\"synStatement\">const</span> img = <span class=\"synStatement\">new</span> Image();\nimg.src = <span class=\"synConstant\">&quot;data:image/svg+xml,&quot;</span> + $svg.outerHTML;\nimg.onload = () =&gt; ctx.drawImage(img, 0, 0, SIZE, SIZE);\n</pre><p><br />\n現状、<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/SVG\">SVG</a>はいったん`img`要素を経由してから`<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/canvas\">canvas</a>`に貼るしかない。<br />\n<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/SVG\">SVG</a>を`img.src`にするところは、調べると他にもいろいろやりかたが出てくるけど、一番短く書くパターンがコレ。とりあえず<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/Chrome\">Chrome</a>と<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/Safari\">Safari</a>で動いたのは確認した。</p><p>噂によると、<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/Opera\">Opera</a>は直で`drawImage()`できたらしい。</p>\n\n</div>"
}
