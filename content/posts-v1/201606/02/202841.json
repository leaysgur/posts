{
  "title": "AWS Summit Tokyo 2016 2日目に行ってきたメモ #AWSSummit",
  "html": "<p>1日目はエンプラ寄りな内容なのでスルーしました。</p><p>そもそも応募した時点で既にセッション埋まりまくってたので、午後からぼちぼち行くかーと。<br />\nちなみに明日の3日目も行ってきます。</p><p>General ConferencceとDeveloper Conferenceって分かれてたけど、それでも安定のスーツ率 + 中々のエンプラ意識な内容でしたなー。</p>\n\n    <blockquote>\n        <p>なんか最近、勉強会に行ってはメモを公開するオジサンみたいになってる気がするけど、コレたまたま重なってるだけやからね！</p>\n\n    </blockquote>\n\n<div class=\"section\">\n    <h3>クラウドとマイクロサービスによる音声操作の新時代 － Amazon Echo & Alexa</h3>\n    \n<ul>\n<li>タッチI/Fの時代から、ボイスI/Fの時代\n<ul>\n<li>たとえばキッチンで料理してる時とかまさにソレ</li>\n</ul></li>\n<li><a href=\"https://www.amazon.com/Amazon-Echo-Bluetooth-Speaker-with-WiFi-Alexa/dp/B00X4WHP5E?ie=UTF8&*Version*=1&*entries*=0\">Amazon Echo - Amazon Official Site - Alexa-Enabled</a>\n<ul>\n<li>DotとかTapとかの兄弟製品もある</li>\n</ul></li>\n<li>この裏で動いてるのがAlexa</li>\n</ul>\n<div class=\"section\">\n    <h4>Amazon Alexa</h4>\n    \n<ul>\n<li><a href=\"https://developer.amazon.com/alexa\">Alexa</a>\n<ul>\n<li>Siriみたいなもんかね</li>\n</ul></li>\n<li>AlexaVoiceService（AVS）\n<ul>\n<li>Alexaの機能が使えるAPI</li>\n<li>なのでコードが動けばあらゆる環境で使える（eg, Raspberry Pi）</li>\n<li>AVSには音声バッファをそのまま送って、サーバーでそれを解析して返答</li>\n</ul></li>\n<li>AlexaSkillsKit\n<ul>\n<li>Alexaの機能（スキル）を拡張できる機能</li>\n<li>コンフィグ（コンソールで入力する）と、実コード（Lambdaに置く）から成る</li>\n</ul></li>\n</ul>\n</div>\n<div class=\"section\">\n    <h4>スキルを作るデモ</h4>\n    \n<ul>\n<li>コンソールで認識させたい単語を登録（`$name = [foo, bar, ..]`）</li>\n<li>あわせて拾いたい言葉を登録（`Tell me about ${name}`）</li>\n<li>それを捌くLambda関数を用意\n<ul>\n<li>シミュレータがついててどんな返答になるか確認できる</li>\n</ul></li>\n<li>API Gatewayで関数を公開</li>\n<li>Alexaにスキルが備わったかもシミュレータで確認できる</li>\n</ul><p>日本語に関してはまぁお察しって気がするけど楽しそうよね。<br />\nただちょっとドキュメント見た限り、試すまでの敷居は高そう・・。</p>\n\n</div>\n</div>\n<div class=\"section\">\n    <h3>サーバーレスで構築する、マイクロサービスの未来形</h3>\n    \n<ul>\n<li>そもそもサーバーレスとは</li>\n<li>似たような3つの区分\n<ul>\n<li>VM: EC2</li>\n<li>コンテナ: ECS（Docker）</li>\n<li>サーバーレス: AWS Lambda</li>\n</ul></li>\n<li>それぞれ用途によって選択するもの</li>\n</ul>\n<div class=\"section\">\n    <h4>AWS Lambdaについて</h4>\n    \n<ul>\n<li><概要とかユースケースとか既知な内容だったので割愛></li>\n<li>さっきのAlexaと連携して、SlackAPIにつないだり</li>\n<li>関数をウォームにしておきたい場合は？\n<ul>\n<li>スケジューリングする（1分単位）</li>\n<li>それより細かいのは、その中でバックグラウンドタイマーを</li>\n</ul></li>\n<li>構成とかバージョニングとかどうすれば？\n<ul>\n<li>その構成をDynamoDBとかにいれといて、それを使ってLambdaを実行するようにする</li>\n</ul></li>\n<li>VPCでも使えるようになったが、ご利用は計画的に</li>\n</ul>\n</div>\n<div class=\"section\">\n    <h4>どうやって使うか</h4>\n    \n<ul>\n<li>AWSで使う\n<ul>\n<li>Lambda x API Gateway x etc...</li>\n</ul></li>\n<li>そういうサービス使う\n<ul>\n<li><a href=\"http://serverless.com/\">Serverless - The Serverless Application Framework powered by AWS Lambda and API Gateway</a></li>\n</ul></li>\n<li>Flourish\n<ul>\n<li>GitHubのOSSで、AWSが支援してるアプリケーションモデル</li>\n</ul></li>\n</ul>\n    <blockquote>\n        <p><a href=\"http://thenewstack.io/amazon-debuts-flourish-runtime-application-model-serverless-computing/\">Amazon Debuts Flourish, a Runtime Application Model for Serverless Computing - The New Stack</a></p>\n\n    </blockquote>\n<p>Coming soonなこれだけ気になったけど、ほかはまあ既知の内容でしたー。</p>\n\n</div>\n</div>\n<div class=\"section\">\n    <h3>【パネルディスカッション】Slack, Qiita, GitHub 利用者 ＆ 提供者の視点で見る、クラウドとツールの使いどころ</h3>\n    <p>モデレータは、吉羽 龍太郎（Ryuzee.com）さん。</p><p>パネリストは、この3方。</p>\n\n<ul>\n<li>【Slack 利用者】岩瀬 義昌（エヌ・ティ・ティ・コミュニケーションズ株式会社　技術開発部 エンジニア）</li>\n<li>【Qiita 提供者】髙橋 侑久（Increments 株式会社　CTO）</li>\n<li>【GitHub 提供者】藤田 純 （ギットハブ・ジャパン合同会社　カントリーマネージャー）</li>\n</ul><p>どういう人選なんやろう？ｗ</p>\n\n<ul>\n<li>最近のツールはなんで流行ってるのか？\n<ul>\n<li>細かいところもよくできてるから</li>\n<li>APIとかインテグレーションしやすいから</li>\n<li>役割やドメインが明確だから</li>\n</ul></li>\n<li>Slackとかで突発的に起こった議論はどう残す？\n<ul>\n<li>これはリモートで働いてるとよくある</li>\n<li>組織の中に率先して言質を残すマンがいたり</li>\n</ul></li>\n<li>流れの早い時代には、いかに早く試せるか・失敗できるかが重要\n<ul>\n<li>そのサイクルを加速させるのが最近のツール</li>\n</ul></li>\n<li>大企業でどう導入するか\n<ul>\n<li>ボトムアップで流行らせる</li>\n<li>ちょっとだけ上の上司から順に</li>\n<li>社外の著名な人を連れて行く・・・！</li>\n</ul></li>\n<li>最後に何かあれば\n<ul>\n<li>日本の企業はもっと内製してって良い</li>\n<li>PCにシール貼ったりして広めてこ</li>\n</ul></li>\n</ul><p>パネルディスカッションはメモを取るものではないな・・。<br />\nあとAWS関係あらへん！</p>\n\n</div>\n<div class=\"section\">\n    <h3>【パネルディスカッション】サーバーレスの波はホンモノか？ 最前線の開発者に聞くコードでサービスの全てを提供する方法</h3>\n    <p>お次のモデレータは、西谷 圭介（アマゾン ウェブ サービス ジャパン株式会社 技術本部 レディネスソリューション部 ソリューションアーキテクト）さん。</p><p>パネリストは、</p>\n\n<ul>\n<li>木田 茂穂（株式会社リクルートジョブズ　デジタルマーケティング室 マーケティング部 データマネジメントグループ グループマネジャー）</li>\n<li>鈴木 健太（株式会社 fluct　 fluct開発本部 エンジニア）</li>\n</ul><p>この波はホンモノなのか！</p>\n\n<ul>\n<li>fluctとタウンワークAPIの裏側について\n<ul>\n<li>ちなみにfluctは広告配信の仕組み -> <a href=\"http://fluct.jp/\">SSP&#x300C;fluct&#x300D;</a></li>\n<li>両名とも、Lambda x Kinesisみたいな構成</li>\n</ul></li>\n</ul>\n<div class=\"section\">\n    <h4>なぜLambda？</h4>\n    \n<ul>\n<li>fluctではJava8でLuceneが使いたかった\n<ul>\n<li>環境構築が面倒で、とりあえずLambdaでやってたら気付いたらLambdaに</li>\n</ul></li>\n<li>タウンワークではPython（統計系とか特徴量計算とか）</li>\n<li>インフラエンジニアをアサインするよか、アプリエンジニアでさくっとやりたかった\n<ul>\n<li>コストも安いしスピードも速い</li>\n<li>安定したらインフラエンジニアの出番がもちろん</li>\n</ul></li>\n<li>ブランチ別にLambda関数を作って並列に実行したりと取り回しが楽なのがいいところ</li>\n<li>Lambdaの学習コストはそんなに高くないし</li>\n<li>なによりすぐに試せるのが強い</li>\n</ul>\n</div>\n<div class=\"section\">\n    <h4>デプロイどうしてるか</h4>\n    \n<ul>\n<li>fluct: pushしたらTravisでビルドしてS3に、あとは手動でデプロイ</li>\n<li>リクルート: 自動でデプロイするスクリプトを作った</li>\n<li>だいたいAPIがあるので普段と変わらない</li>\n</ul>\n</div>\n<div class=\"section\">\n    <h4>テストどうしてるか</h4>\n    \n<ul>\n<li>イベントデータをモックして、単体テストを普通にかいてローカルでしたり</li>\n<li>テスト環境で動かしたり</li>\n</ul>\n</div>\n<div class=\"section\">\n    <h4>ログ</h4>\n    \n<ul>\n<li>CloudWatchで見るか</li>\n<li><a href=\"https://github.com/jorgebastida/awslogs\">GitHub - jorgebastida/awslogs: AWS CloudWatch logs for Humans&trade;</a></li>\n</ul><p>まぁ技術のセッションではないからか、目から鱗的な話はなかったかなー。</p><p>中の人の捕捉を見つけた！</p>\n\n    <blockquote>\n        <p><a href=\"http://suzuken.hatenablog.jp/entry/2016/06/02/184723\">&#x300C;&#x30B5;&#x30FC;&#x30D0;&#x30FC;&#x30EC;&#x30B9;&#x306E;&#x6CE2;&#x306F;&#x30DB;&#x30F3;&#x30E2;&#x30CE;&#x304B;&#xFF1F;&#x300D;&#x3042;&#x3068;&#x304C;&#x304D; - &#x3059;&#x305A;&#x3051;&#x3093;&#x30E1;&#x30E2;</a></p>\n\n    </blockquote>\n\n</div>\n</div>\n<div class=\"section\">\n    <h3>SaaS on AWS アーキテクチャと7つのベストプラクティス</h3>\n    <p>General Conferencceの会場混みすぎ。</p>\n\n<ul>\n<li>ソフトウェア利用方法の変遷\n<ul>\n<li>オンプレ</li>\n<li>ホスティング</li>\n<li>AWS</li>\n<li>SaaS on AWS</li>\n</ul></li>\n<li>クラウド市場の2/3はSaaSになる見込み（2018年まで</li>\n</ul>\n<div class=\"section\">\n    <h4>なぜSaaSが加速するのか</h4>\n    \n<ul>\n<li>ユーザーとしてのトレンドは加速する一方</li>\n<li>ベンダー側もデータセンターなしでソフトウェアをホストできるようになった\n<ul>\n<li>AWSは初期費用も安い（ない</li>\n<li>スケールもしやすいよ</li>\n</ul></li>\n</ul>\n</div>\n<div class=\"section\">\n    <h4>AWSの基本構成</h4>\n    \n<ul>\n<li>という名の宣伝だった。。</li>\n<li>AWS使って自社のオンプレソフトをSaaS化するぞーっていう担当の人にはウケそうな内容</li>\n</ul>\n</div>\n<div class=\"section\">\n    <h4>4つのアーキテクチャアプローチ</h4>\n    \n<ul>\n<li>シングルテナント x マルチテナント の2通りと\n<ul>\n<li>どっちが良いかは要件による</li>\n</ul></li>\n<li>仮想サーバー x クラウドネイティブ の2通りの組合せ\n<ul>\n<li>DBはオンプレで or 全部クラウド</li>\n</ul></li>\n</ul><p>クラウドネイティブってなんやねん！って思ったけど、まあ予想通りふわっとしたラベルのことやった。</p>\n\n    <blockquote>\n        <p><a href=\"http://keisuke69.hatenablog.jp/entry/2016/03/15/201759\">&#x30AF;&#x30E9;&#x30A6;&#x30C9;&#x30CD;&#x30A4;&#x30C6;&#x30A3;&#x30D6;&#x3068;&#x30B5;&#x30FC;&#x30D0;&#x30EC;&#x30B9;&#x30A2;&#x30FC;&#x30AD;&#x30C6;&#x30AF;&#x30C1;&#x30E3; - Sweet Escape</a></p>\n\n    </blockquote>\n\n</div>\n<div class=\"section\">\n    <h4>7つのベストプラクティス</h4>\n    \n<ul>\n<li>アプリとプラットフォームは分けて考える</li>\n<li>機能は抽象化してサービス化する\n<ul>\n<li>ソフト開発の基本</li>\n</ul></li>\n<li>可能ならマルチテナントで組む\n<ul>\n<li>一部だけでもいい</li>\n<li>スケールしやすい</li>\n</ul></li>\n<li>データのライフサイクルを把握する\n<ul>\n<li>データ取得の頻度などから、最適なストレージを選ぶ</li>\n</ul></li>\n<li>情報を収集して学ぶ\n<ul>\n<li>ログを仕込む・モニタリングする・分析する</li>\n<li>そして機能追加や改善を</li>\n</ul></li>\n<li>コストと性能の最適化を\n<ul>\n<li>部分ごとにスケールアウトしやすく組む</li>\n<li>コストを取るか性能を取るかの判断をしやすく</li>\n</ul></li>\n<li>セキュリティと権限分離\n<ul>\n<li>当然の話</li>\n</ul></li>\n</ul>\n</div>\n<div class=\"section\">\n    <h4>ビジネスまわりの話</h4>\n    \n<ul>\n<li>ソフト屋がSaaSをはじめるとなると\n<ul>\n<li>SIerなど販売パートナーが不要になるので反感買うかも</li>\n<li>自分たちで運用できるか不安・・</li>\n</ul></li>\n<li>商流を崩さないように注意しよう <- 何が言いたいんや・・</li>\n<li>課金方法には特に注意</li>\n</ul>\n</div>\n<div class=\"section\">\n    <h4>AWSを使って成功している企業の紹介</h4>\n    \n<ul>\n<li>ワークスアプリケーションズ\n<ul>\n<li>ERP大手</li>\n</ul></li>\n<li>ウィングアーク\n<ul>\n<li>帳票ソリューションのSVF懐かしい</li>\n</ul></li>\n</ul><p><br />\n<blockquote class=\"twitter-tweet\" data-lang=\"ja\"><p lang=\"ja\" dir=\"ltr\">2010年頃（SIやってた頃）にサービスのクラウド化にいち早く着手してた会社たち、<br>あの頃は大企業のお偉いさん方に「そんな無名の会社で大丈夫か？！くらうどは信用ならん！却下だ！」って言われてたけど、<br>いま現在そんな会社たちが成功企業って取り上げられてて時代を感じてる</p>&mdash; りぃ (@leader22) <a href=\"https://twitter.com/leader22/status/738298412659970048\">2016年6月2日</a></blockquote><script async src=\"//platform.twitter.com/widgets.js\" charset=\"utf-8\"></script></p><br />\n<p>聞いててすごいモヤモヤする話やったな・・。<br />\n相変わらずSI業界とかエンプラIT界隈はふわーっとしたカタカナ語で満ち溢れておるようです。</p><p>確かにAWSとか使えば比較的小さな会社でも巨人のように振る舞えるので、アプリさえ作れればやりようによってはビジネスチャンスっていっぱいありそうって気もしてる。<br />\n2020年くらいになってもまだSaaSがーって言ってそう。</p>\n\n</div>\n</div>"
}
