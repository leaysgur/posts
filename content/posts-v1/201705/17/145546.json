{
  "title": "脱VimしようとしてAtomを触ってたけど、やっぱりVimを使うことにした",
  "html": "<p>という事の顛末を、迷えるVimmerに伝えるべく・・。<br />\n<br />\n</p>\n\n<div class=\"section\">\n    <h3>脱Vimしようとしたきっかけ</h3>\n    <p>Lintが遅い。</p>\n\n<ul>\n<li>eslint</li>\n<li>flow</li>\n</ul><p>Webなフロントエンドの開発をよくやる身としては、</p>\n\n<ul>\n<li>この2つのLinterを</li>\n<li>リアルタイムに</li>\n<li>エディタ上で</li>\n</ul><p>使いたい。</p><p>今までずっとSyntasticというプラグインを使ってたけど、デカいプロジェクトだと如実に遅い。</p>\n\n    <blockquote>\n        <p><a href=\"https://github.com/vim-syntastic/syntastic/\">GitHub - vim-syntastic/syntastic: Syntax checking hacks for vim</a></p>\n\n    </blockquote>\n<p>小さいプロジェクトでも`:w`してから5秒くらい待たされたりしてて、どうにかならんかなーと思ってた。</p><p>ESLintに関しては、Lintのサーバーを裏で走らせておいて・・っていうことができる`eslint_d`を使うことでだいぶマシになる。</p>\n<pre class=\"code\" data-lang=\"\" data-unlink>let g:syntastic_javascript_eslint_exec = &#39;eslint_d&#39;</pre><p>けどFlowに関してはどうしようもないっぽく（公式のIssueでも色々でてるけど・・）、遅いのを我慢するか、型チェックはエディタ上でやらないかとか考え始めてて、それならいっそVimを捨てるかなーとか考えてた。</p>\n\n</div>\n<div class=\"section\">\n    <h3>こんにちはAtom</h3>\n    <p>そういう時に、WebStormやらAtomやらVSCodeやら、エディタを使ってる勢の話を聞いてちょっと意識するように。</p><p>普段からも、コードじゃないメモとか原稿とかを書くのにはAtomを使ってて（昔はCotEditorやったけどシンタックスハイライトが激重いので捨てた）、コード書く分にもプラグインとかも豊富そうなのでAtomでコード書ける環境を整えてみた。</p>\n\n<ul>\n<li><a href=\"https://github.com/t9md/atom-vim-mode-plus\">https://github.com/t9md/atom-vim-mode-plus</a></li>\n<li><a href=\"https://github.com/AtomLinter/linter-eslint\">https://github.com/AtomLinter/linter-eslint</a></li>\n<li><a href=\"https://github.com/AtomLinter/linter-flow\">https://github.com/AtomLinter/linter-flow</a></li>\n</ul><p>とりあえずこんなもんで。</p>\n\n<div class=\"section\">\n    <h4>よかった</h4>\n    <p>そしたら良いじゃないですかこれー！</p>\n\n<ul>\n<li>素のテキストエディタとVimの操作性のいいとこどり</li>\n<li>Lint速い！</li>\n<li>Flowも速い！！</li>\n<li>UIがデフォルトでオシャレで見やすい</li>\n<li>`:se paste`とかしなくていい！</li>\n<li>オートインデントも賢い・・！</li>\n</ul><p>とかちょっと浮かれてしまった。<br />\nけどもちろん惜しいなーとかちょっとなーってとこもあり。</p>\n\n</div>\n<div class=\"section\">\n    <h4>あといっぽ</h4>\n    <p>`vim-mode-plus`には`vim-mode-plus-exmode`っていうプラグインもあって、これをいれると`:w`とか`:vs`とかできるようになる。<br />\nけど・・・、</p>\n\n<ul>\n<li>`:q!`</li>\n<li>`:vs filename`</li>\n</ul><p>ができなかった・・。</p>\n\n</div>\n<div class=\"section\">\n    <h4>だめだ・・</h4>\n    <p>黒い画面よく使う勢なので、ターミナルといかにシームレスに使えるかも譲れないポイントで。</p><p>ターミナル -> Vimの関係性だと、各種コマンドを打ちながらすっとファイルを編集できて、ブラウザとターミナルさえあれば開発が完結する。<br />\nこれがほんとに身軽で気に入ってるポイントで。</p><p>AtomはAtomなので、別途ターミナルを用意するか、Atomの中でターミナルを動かすソリューションが必要になる。</p><p>`terminal-plus`はなぜか動かなかったので、そのForkであるやつを。</p>\n\n<ul>\n<li><a href=\"https://github.com/platformio/platformio-atom-ide-terminal\">https://github.com/platformio/platformio-atom-ide-terminal</a></li>\n</ul><p>ただこれも惜しい・・。</p>\n\n<ul>\n<li>`Ctrl + L`のコンソールのクリアが綺麗に消えない</li>\n<li>てかターミナルの中にエディタじゃなく、エディタの中にターミナルが気持ち悪い</li>\n<li>ターミナル専用のタブとか開きたい\n<ul>\n<li>現状だと、エディタ内ターミナルなので、レイヤー的にタブと関係ない</li>\n</ul></li>\n<li>`tmux`とかも</li>\n<li>横に出てるプロジェクトツリー、ターミナルの`pwd`と連動してほしい・・</li>\n</ul><p>などなど気になる点がいっぱい出てくる。</p><p>`linter-flow`と`linter-eslint`も、マウスでホバーしないとエラー文言がわからないという感じで惜しい。</p><p>うう・・Vimが恋しい・・ターミナルだけで完結する世界に帰りたい・・。<br />\nVimでさくっとLintするやつさえあれば・・本当にないの？2017年やで？</p>\n\n</div>\n</div>\n<div class=\"section\">\n    <h3>あった</h3>\n    <p>あったわ・・・！</p>\n\n    <blockquote>\n        <p><a href=\"https://github.com/w0rp/ale\">GitHub - w0rp/ale: Asynchronous Lint Engine</a></p>\n\n    </blockquote>\n<p>要求するVimのバージョンが8なので、そこだけアップデートしたらすぐ使えた。</p><p>Syntasticの時には自前のVim scriptで書いてた「最も近い`.eslintrc`を探す」みたいなコードももちろん実装されてるし、非同期で速い。<br />\nてか1文字打つごとに判定してくてウザいくらい速い！（設定で変えられる）</p><p>というわけでAtomに乗り換える理由もなくなり、またしばらくVimだけで生きていけそう。</p>\n\n<div class=\"section\">\n    <h4>ALEのアレコレ</h4>\n    <p>ファイルタイプを見て勝手にLintしてくれる。<br />\nそしてタイプごとに色んな種類のLinterが勝手に動いちゃう。</p><p>JavaScriptの場合、</p>\n\n<ul>\n<li>eslint</li>\n<li>jscs</li>\n<li>jshint</li>\n<li>flow</li>\n<li>standard</li>\n<li>xo</li>\n</ul><p>と、やってほしくないのまでやってくれるので、制限する。</p>\n<pre class=\"code\" data-lang=\"\" data-unlink>let g:ale_linters = {\n\\   &#39;javascript&#39;: [&#39;eslint&#39;],\n\\}</pre><p>Lintするのは保存時だけでいいよって場合は、</p>\n<pre class=\"code\" data-lang=\"\" data-unlink>let g:ale_lint_on_text_changed = &#39;never&#39;\nlet g:ale_lint_on_enter = 0</pre><p>よきVimライフを！</p>\n\n</div>\n</div>"
}
