{
  "title": "MobXでuseStrict()すべきかどうか",
  "html": "\n    <blockquote>\n        <p><a href=\"https://www.youtube.com/watch?v=Aws40KOx90U\">Michel Weststrate: Real World MobX &mdash; ReactNext 2016 - YouTube</a></p>\n\n    </blockquote>\n<p>なんとなしにこのビデオを見直してて、終わり3分くらいに質問コーナーがあってそこで聞かれてた。<br />\n<br />\n</p>\n\n<div class=\"section\">\n    <h3>`useStrict()`とは</h3>\n    <p>そもそもは、どこからでもStateを変更できそうで不安・・っていう声に対応するために入れた機能。</p>\n<pre class=\"code lang-javascript\" data-lang=\"javascript\" data-unlink><span class=\"synStatement\">const</span> state = mobx.observable(<span class=\"synIdentifier\">{</span> x: 1 <span class=\"synIdentifier\">}</span>);\n\nstate.x = 10; <span class=\"synComment\">// ok</span>\n\nmobx.useStrict(<span class=\"synConstant\">true</span>);\n\nstate.x = 100; <span class=\"synComment\">// error</span>\n\n<span class=\"synStatement\">const</span> modState = mobx.action((n) =&gt; <span class=\"synIdentifier\">{</span> state.x = n; <span class=\"synIdentifier\">}</span>);\nmodState(100); <span class=\"synComment\">// ok</span>\n</pre><p>という感じになる。</p>\n\n</div>\n<div class=\"section\">\n    <h3>作者のMichelは</h3>\n    <p>このビデオの時点では使ってないらしい。</p>\n\n<ul>\n<li>自分が行儀の悪いコードを書くことはない</li>\n<li>適切なやり方でStateを管理してるし最低限しかStateがない</li>\n</ul><p>なるほど。</p>\n\n</div>\n<div class=\"section\">\n    <h3>`useStrict()`のPros/Cons</h3>\n    <p>まあメリットもあるよとのこと。</p>\n\n<ul>\n<li>Stateを変更するべき場所を明示できる\n<ul>\n<li>コードとしての構造化</li>\n</ul></li>\n<li>複数のderivationsをまとめてくれる\n<ul>\n<li>元`transaction()`、現`runInAction()`相当のこと</li>\n</ul></li>\n</ul><p>使わないメリットとしては</p>\n\n<ul>\n<li>`Promise`チェーンとかコールバックをいちいち`action`化しなくていい</li>\n<li>Non-Decorators環境で、メソッドをいちいちラップする関数作らなくていい</li>\n</ul><p>って感じかなー。</p><p>必要なときに自分で`runInAction()`するの面倒かもーって思ったけど、適切にStateを設計してればそもそも必要になることは滅多にないはず・・。<br />\nあったとしてもラップすればいいだけやし。</p><p>ただDecoratorsあり環境なら、`@action.bound`とか書き味最高なので使いたい気持ち。<br />\nなし環境ならもう付けなくてもいいかな？</p><p>ここではそんなコード書くな！みたいな構造化は、こんなアノテーションとかラップするだけとかそういうレベルじゃなくて、ディレクトリとかそもそものところで明示すべきよなーとは思う。</p>\n\n</div>"
}
