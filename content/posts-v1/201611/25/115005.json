{
  "title": "モバイルでの動画再生について",
  "html": "\n<ul>\n<li>インライン再生とか</li>\n<li>自動再生とか</li>\n</ul><p>そのへんについてさくっとメモ。<br />\n今流行のライブ配信については触れてません。<br />\n<br />\n</p>\n\n<div class=\"section\">\n    <h3>playsinline</h3>\n    <p>iOS10↑で使える。</p>\n<pre class=\"code lang-html\" data-lang=\"html\" data-unlink><span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">video</span><span class=\"synIdentifier\"> </span><span class=\"synType\">src</span><span class=\"synIdentifier\">=</span><span class=\"synConstant\">&quot;path/to/video.mp4&quot;</span><span class=\"synIdentifier\"> playsinline&gt;&lt;/</span><span class=\"synStatement\">video</span><span class=\"synIdentifier\">&gt;</span>\n</pre><p>`playsinline`を指定するとインライン再生ができる。</p><p>ただしWebViewだと、アプリの種類によって効いたり効かなかったりする。<br />\nTwitterはダメ、LINEはOKとか。</p><p>未対応な環境だと、`playsinline`を指定してても`video.play()`すると全画面で再生されちゃう。</p>\n\n</div>\n<div class=\"section\">\n    <h3>`video.play()`しない</h3>\n    <p>`play()`するから全画面になってしまうわけで、しなければよい。</p>\n\n<ul>\n<li>`video.currentTime`を変更して、それを`canvas`に転写</li>\n<li>自前で動画ファイルをdemuxして、それを`canvas`に描画</li>\n</ul><p>このどっちかをやるしかなさそう。<br />\nこのアプローチだと、iOS10未満でもインライン再生できる。</p><p>固定長の動画ファイルを流すだけなら前者でもやれるけど、`.m3u8`とかだとvideoでなんか上手く捌けない時があるらしいので、生放送がーみたいな感じだとめっちゃ頑張って後者をやるしかなさそう。<br />\nサンプルでは`.mp4`しか見てないけども、HLS / RTMPとかだともっと色々ハマりどころがあるんやろなーと思う。</p>\n\n</div>\n<div class=\"section\">\n    <h3>自動再生</h3>\n    <p>音入りの動画でも、`muted`ならできるようになってた。</p><p>ただ音に関してはどうしてもユーザーハンドラを経る必要がある。<br />\nそもそもモバイルで自動再生したいUXってのが想像できないので、割とどうでもよいかも？と個人的には思う。</p><p>と思ったけど、アレなところではアレなようです。<blockquote class=\"twitter-tweet\" data-lang=\"en\"><p lang=\"ja\" dir=\"ltr\">ほほー、やっぱ色々とアレな界隈では色々とアレなんですね！</p>&mdash; りぃ (@leader22) <a href=\"https://twitter.com/leader22/status/801992197495107584?ref_src=twsrc%5Etfw\">November 25, 2016</a></blockquote><script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script></p>\n\n</div>"
}
