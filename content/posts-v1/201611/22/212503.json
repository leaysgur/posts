{
  "title": "WebRTC Meetup Tokyo #12 に行ってきたメモ #webrtcjp",
  "html": "<p>会場がいつもと違ってて、まさかの会社のすぐ近くやった。<br />\n<br />\n</p>\n\n<div class=\"section\">\n    <h3>Janus: a general purpose WebRTC server by @elminiero</h3>\n    \n    <blockquote>\n        <p><a href=\"http://www.slideshare.net/LorenzoMiniero/janus-meetup-tokyo-12\">Janus @ Meetup Tokyo #12</a></p>\n\n    </blockquote>\n<p>JanusというOSSについて。</p>\n\n<ul>\n<li>WebRTCのGatewayサーバー</li>\n<li>普通にWebRTCするならSDPのシグナリング後にP2P</li>\n<li>けどGatewayサーバーが間に立てば、いろんなことができる\n<ul>\n<li>クライアントの格差を吸収したり</li>\n<li>サーバーから配信したり（SFU的な）</li>\n</ul></li>\n</ul>\n<div class=\"section\">\n    <h4>Janus</h4>\n    \n<ul>\n<li><a href=\"https://github.com/meetecho/janus-gateway\">https://github.com/meetecho/janus-gateway</a>\n<ul>\n<li>Janus（ヤヌス）はローマ神話に出てくる前後に顔がある扉の神</li>\n</ul></li>\n<li>プラガブルに作られてて、コアはWebRTCスタックのみ\n<ul>\n<li>JSEP/SDP、ICE、DataCh、etc</li>\n</ul></li>\n<li>HTTP / WebSockets / MQTTなど複数のTCPで動くプラグインがある\n<ul>\n<li>なので作ればJSONでJanusとやりとりもできる</li>\n</ul></li>\n<li>ブラウザ <-> (Janus Core = プラグイン) <-> 各プラットフォーム\n<ul>\n<li>jsのAPI: <a href=\"https://janus.conf.meetecho.com/docs/JS.html\">https://janus.conf.meetecho.com/docs/JS.html</a></li>\n</ul></li>\n<li>プラグインでできること\n<ul>\n<li>EchoTest</li>\n<li>Streaming(RTP)</li>\n<li>Recording</li>\n<li>TextChat(w/ DataChannel)</li>\n<li>などなど: <a href=\"https://janus.conf.meetecho.com/demos.html\">https://janus.conf.meetecho.com/demos.html</a></li>\n</ul></li>\n<li>AdminAPIってのがある\n<ul>\n<li>サーバーのスペック見たり</li>\n<li>デバッグ用に設定変更とかできる</li>\n<li>非同期にイベント投げる機能はWIP</li>\n</ul></li>\n<li>負荷テストのためのJattack（Janus Attack）\n<ul>\n<li>WebSocketでPeerConnectionを作って使う</li>\n<li>WIPやけど使えるよ</li>\n</ul></li>\n<li>利用事例も結構あるよ\n<ul>\n<li>基本的なテレカンもあれば</li>\n<li>まさかのドローンを動かしたりも</li>\n<li>Sqiwiggleでの商用利用</li>\n<li><a href=\"https://beam.pro/\">https://beam.pro/</a></li>\n<li>Slackの音声通話で動いてるのもJanus</li>\n</ul></li>\n</ul>\n</div>\n<div class=\"section\">\n    <h4>今後の予定</h4>\n    \n<ul>\n<li>WebRTCスタックのアップデート\n<ul>\n<li>再ネゴシエーション</li>\n<li>Multiストリーム</li>\n</ul></li>\n<li>Events API</li>\n<li>Jattackの改善もしていきたい</li>\n</ul>\n</div>\n</div>\n<div class=\"section\">\n    <h3>WebRTC + RasPi by @tnoho</h3>\n    <p>RaspberryPiでWebRTCしたい話。</p>\n\n<div class=\"section\">\n    <h4>なんで？</h4>\n    \n<ul>\n<li>Android / iOSはソフトウェアエンコードなので、酷使すると落ちる\n<ul>\n<li>なにより安い</li>\n</ul></li>\n<li>実例は多い</li>\n<li>1. Janus x [gstreamer](<a href=\"https://gstreamer.freedesktop.org/\">https://gstreamer.freedesktop.org/</a>)\n<ul>\n<li>H.264のハードウェアエンコードが効く！</li>\n<li>まとめて制御するするために要Pythonスクリプト</li>\n</ul></li>\n<li>2. OpenWebRTC\n<ul>\n<li>v0.0.4以降、消息が不明</li>\n</ul></li>\n<li>3. UV4L\n<ul>\n<li>VP8使える</li>\n<li>なので熱暴走・・</li>\n<li>ただしクローズドソース</li>\n</ul></li>\n<li>どれを使うべきか\n<ul>\n<li>どれも一長一短で難あり</li>\n<li>よーし自分で作ろう！</li>\n</ul></li>\n</ul>\n</div>\n<div class=\"section\">\n    <h4>WebRTC Native Client Library</h4>\n    \n<ul>\n<li><a href=\"https://chromium.googlesource.com/external/webrtc\">https://chromium.googlesource.com/external/webrtc</a>\n<ul>\n<li>ChromeのWebRTC実装を切り出したもの</li>\n</ul></li>\n<li>ビルドするにはそのままだと数十GBと2GB↑のRAMがいる</li>\n<li>RasPi向けには、x86環境で、ARM向けにクロスコンパイル</li>\n<li>qemu / debootstrap\n<ul>\n<li>qemuをdockerで動かす方法あれば教えてください</li>\n</ul></li>\n<li><a href=\"https://webrtc.org/\">https://webrtc.org/</a> のサンプルがそのまま動かない\n<ul>\n<li>raspbianだから？</li>\n</ul></li>\n<li>画像でない\n<ul>\n<li>USB Video Class(UVC)対応なら使える</li>\n</ul></li>\n<li>UV4Lほどパフォーマンスでない\n<ul>\n<li>VP8EncoderImpl::NumberOf..を上げる</li>\n<li>USBが遅いのでVGAでもMJPEGを使うべし</li>\n<li>チューニングしたいけどそもそもUSBカメラの画質が・・</li>\n</ul></li>\n</ul><p>専門外過ぎてよーわからんくなったのでメモはここまで！</p>\n\n</div>\n</div>\n<div class=\"section\">\n    <h3>Inside of 聖徳玉子 by o2</h3>\n    \n    <blockquote>\n        <p><a href=\"https://lab.infocom.co.jp/2016/08/theta.html\">THETA&#x3068;&#x5168;&#x65B9;&#x4F4D;&#x30DE;&#x30A4;&#x30AF;&#x3092;&#x7D44;&#x307F;&#x5408;&#x308F;&#x305B;&#x305F;&#x30A2;&#x30D7;&#x30EA;&#x3092;&#x4F5C;&#x308A;&#x307E;&#x3057;&#x305F;</a></p>\n\n    </blockquote>\n<p>これの話。</p>\n\n<ul>\n<li>聖徳太子ではなく聖徳玉子\n<ul>\n<li>ハード: <a href=\"http://www.sifi.co.jp/system/modules/pico/index.php?content_id=39\">http://www.sifi.co.jp/system/modules/pico/index.php?content_id=39</a></li>\n<li>ソフト: <a href=\"http://hark.jp/\">http://hark.jp/</a></li>\n</ul></li>\n<li>音の鳴ってる方向に向く</li>\n<li>画面分割</li>\n</ul>\n<div class=\"section\">\n    <h4>音の鳴ってる方向に向く</h4>\n    \n<ul>\n<li>HARKの3機能\n<ul>\n<li>定位を取得</li>\n<li>音源を分離</li>\n<li>それを解析</li>\n</ul></li>\n<li>ブラウザでGUIから設定できる</li>\n<li>標準出力にSourceTrackerのログが出る</li>\n<li>それをGoで処理して角度に</li>\n<li>その角度の方向にカメラを向ける</li>\n</ul>\n</div>\n<div class=\"section\">\n    <h4>画面分割</h4>\n    \n<ul>\n<li>Thetaの動画</li>\n<li>getUserMedia -> video -> canvas</li>\n<li>three.js x [thetaview.js](<a href=\"https://github.com/akokubo/ThetaViewer\">https://github.com/akokubo/ThetaViewer</a>)</li>\n<li>頂点マップにUV Texture貼り付け</li>\n<li>サブビューはそれぞれcanvasに動画を</li>\n</ul><p>ThetaのViewer用のjs、探したらいっぱいあった・・。</p>\n\n<ul>\n<li><a href=\"https://github.com/shokai/theta-viewer.js\">https://github.com/shokai/theta-viewer.js</a></li>\n<li><a href=\"https://github.com/aike/thview.js\">https://github.com/aike/thview.js</a></li>\n<li><a href=\"https://github.com/akokubo/ThetaViewer\">https://github.com/akokubo/ThetaViewer</a></li>\n</ul>\n</div>\n</div>\n<div class=\"section\">\n    <h3>LT: SFUのクラウドサービスAnzuでWebRTCライブストリーミング配信やってみた by a-baba</h3>\n    <p>四国からわざわざこのために！</p>\n\n<ul>\n<li><a href=\"https://hirome-anzu-live.herokuapp.com/\">https://hirome-anzu-live.herokuapp.com/</a></li>\n<li>WebRTCで1対多配信したい\n<ul>\n<li>P2P: 配信側の帯域が・・</li>\n<li>MCU: 中継サーバーの帯域が・・</li>\n<li>SFU: これだ！</li>\n</ul></li>\n<li>SFUなら時雨堂！Anzu！\n<ul>\n<li><a href=\"https://anzu.shiguredo.jp/\">https://anzu.shiguredo.jp/</a></li>\n<li>GitHubのアカウントさえあれば</li>\n</ul></li>\n<li>jsSDKはあるけど、iOSどうしよう・・\n<ul>\n<li>アプリにしないと無理そう</li>\n<li>よし、YouTubeで</li>\n<li>Anzuの録画機能を使ってもできるけど</li>\n</ul></li>\n<li>herokuの無料枠で使ってたが故にSleep -> あわてて課金</li>\n<li>11時間連続配信してもAnzuは落ちなかったすごい</li>\n<li>配信機材\n<ul>\n<li>PCはMac</li>\n<li>BGMはもうiPhoneでやっちゃう</li>\n<li>VideoSwitcherには <a href=\"http://camtwiststudio.com/\">http://camtwiststudio.com/</a>\n<ul>\n<li>PinPとかもココで</li>\n</ul></li>\n</ul></li>\n</ul><p>次回は年明け1月くらいとのこと。</p>\n\n</div>"
}
