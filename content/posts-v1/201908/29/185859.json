{
  "title": "JavaScriptで音声の出力先を変えたい",
  "html": "<p>先日のUGでもみんな気になってる感じがあり、個人的にも気になっており、現状をまとめておこうかと思い。<br />\n<br />\n</p>\n\n<div class=\"section\">\n    <h3>`setSinkId()`について</h3>\n    <pre class=\"code lang-javascript\" data-lang=\"javascript\" data-unlink><span class=\"synStatement\">const</span> devices = await navigator.mediaDevices.enumerateDevices();\n<span class=\"synStatement\">const</span> <span class=\"synIdentifier\">[{</span> deviceId <span class=\"synIdentifier\">}]</span> = devices.filter(device =&gt; device.kind === <span class=\"synConstant\">'audiooutput'</span>);\n\n<span class=\"synStatement\">const</span> $audio = <span class=\"synStatement\">document</span>.createElement(<span class=\"synConstant\">'audio'</span>);\nawait $audio.setSinkId(deviceId);\n</pre><p>というように、`deviceId`を指定して、その要素の出力先を変えられるAPIがいちおう存在します。<br />\n入力を変えるのに`getUserMedia()`を使うので、その反対って感じ。</p><p>`enumerateDevices()`で、`kind`が`audiooutput`なものが返ってくるので、それを使う。</p>\n\n    <blockquote>\n        <p><a href=\"https://w3c.github.io/mediacapture-output/#dom-htmlmediaelement-setsinkid\">Audio Output Devices API</a></p>\n\n    </blockquote>\n<p>ちなみにこいつらはまとめて「Audio Output Devices API」といいます。</p><p>`HTMLMediaElement.prototype.setSinkId()`なので、`audio`でも`video`でも使える。</p><p>肝心のブラウザサポートは？</p>\n\n<div class=\"section\">\n    <h4>Chrome</h4>\n    <p>実装済み。</p>\n\n    <blockquote>\n        <p><a href=\"https://chromestatus.com/features/4621603249848320\">https://chromestatus.com/features/4621603249848320</a></p>\n\n    </blockquote>\n<p>デスクトップ限定ではあるものの、M49から入ってるっぽい。</p>\n\n</div>\n<div class=\"section\">\n    <h4>Firefox</h4>\n    <p>実装されてるけど、フラグの指定が必要とのこと。</p>\n\n    <blockquote>\n        <p><a href=\"https://bugzilla.mozilla.org/buglist.cgi?quicksearch=setSinkId\">Bug List: setSinkId</a></p>\n\n    </blockquote>\n<p>そして、静的な音声の再生には使えるけど、WebAudioやWebRTCにはまだ非対応らしい。</p>\n\n</div>\n<div class=\"section\">\n    <h4>Safari</h4>\n    <p>未実装。</p>\n\n    <blockquote>\n        <p><a href=\"https://bugs.webkit.org/show_bug.cgi?id=179415\">179415 &ndash; Get/set audio output devices -- mediaDevices.enumerateDevices() &amp; HTMLMediaElement.setSinkId()</a></p>\n\n    </blockquote>\n<p>macのSafariですら気配ないので、iOS Safariに来るのはいったいいつの日か・・・！</p>\n\n</div>\n</div>\n<div class=\"section\">\n    <h3>Chromeでしか動かない問題</h3>\n    <p>幸か不幸かChromeでは実装されてるので、他のブラウザの利用者から「なんでできないの？」って言われる問題。</p><p>このAPIに限らず、ブラウザAPIではあるあるネタであり昔からずっとあるやつです。</p><p>これは機能をリリースする前に各ブラウザの互換性を調べるしかなくて、Polyfillもできないのであればすっぱり諦めるくらいがよいかなと思ってます。どうしようもないので。</p><p>まぁブラウザではなくOSの設定を変えればよいという話ではあるので、そこをUIでなんとかできなくも・・ない・・？</p>\n\n</div>\n<div class=\"section\">\n    <h3>Bluetoothヘッドセット問題 その1</h3>\n    <p>マイクだけ認識される問題。</p><p>たとえばFirefoxとかで、Bluetoothヘッドセットをつないだ状態で、`enumerateDevices()`する。</p><p>すると、`audioinput`にそれが現れるので、`getUserMedia()`で利用ちゃう、みたいなケース。</p>\n\n<ul>\n<li>入力: ヘッドセット</li>\n<li>出力: 本体スピーカー</li>\n</ul><p>というちぐはぐな状態になってしまう。</p><p>対策としてはやはり、</p>\n\n<ul>\n<li>手動でOS側の出力先を変える</li>\n<li>もう外部デバイス切り替えをUIで実装しない\n<ul>\n<li>内部デバイスは`gUM()`前に取れるやつなのでそれだけ使う</li>\n</ul></li>\n</ul><p>このへんは要件次第ってやつよね・・。</p>\n\n</div>\n<div class=\"section\">\n    <h3>Bluetoothヘッドセット問題 その2</h3>\n    <p>たとえばiOSのSafariだと、Bluetoothヘッドセットをつないでも、`enumerateDevices()`で出てこない。<br />\n`audiooutput`だけでなく、`audioinput`にも出てこない。</p><p>ただヘッドセットが認識されると、自動的にマイクもスピーカーも切り替わるはず。<br />\nそこが上手くいかない場合は、またしてもOSの設定を見直すしかない。</p><p>iOSなら、</p>\n\n<ul>\n<li>設定 > 一般 > アクセシビリティ > 通話オーディオルーティング\n<ul>\n<li>自動 / Bluetoothヘッドセット / スピーカー</li>\n</ul></li>\n</ul><p>これを自動にしておくだけでよいはず。</p>\n\n</div>\n<div class=\"section\">\n    <h3>まとめ</h3>\n    <p>そういう意味では、</p>\n\n<ul>\n<li>外部デバイスの切り替えはOSの設定でやるようにしてしまう</li>\n<li>UIで実装しない</li>\n</ul><p>のが、もしかして一番キレイな解決策やったりするんかな・・・とか最近は思ってます。</p><p>あとはWebを捨ててNativeでやるとか？（そういうAPIたぶんあると思うので）</p><p>Web屋は実装されるのをひたすら待つ。</p>\n\n</div>"
}
