{
  "title": "HTML5 Conference！",
  "html": "<p>行ってきましたレポ。</p><p>大学の授業みたいで懐かしい感があったｗ<br />\n言うまでもなく1限は滑り込みセーフです。</p><p>以下、聞いたやつリスト。</p>\n\n<ul>\n<li>基調講演</li>\n<li>Room A: プリンより滑らか。スムーズなアニメーションの作り方。</li>\n<li>Room C: Web: Reboot</li>\n<li>Room E: 2015年これからの日本のWebサイトパフォーマンスについて</li>\n<li>Room B: Web Audio API、 Web MIDI API を使ったサウンドプログラミング</li>\n<li>Room A: HTML5ハイブリッドアプリ開発のベストプラクティス</li>\n<li>スペシャルセッション</li>\n</ul>\n<div class=\"section\">\n    <h3>基調講演</h3>\n    <p>慶応大学の村井教授から。<br />\n指先サイズのCPUが、HTMLやHTTP/TCP/IPを解釈する時代がきました。<br />\nInternet of Things(IoT)から、Web of Things(WoT)へという話。</p><p>日本はアメリカに比べて、ITサービス企業 : ユーザー企業のエンジニアの就業比が低い。<br />\nこれからのWebを活用するならユーザー企業では・・みたいな。</p><p>Googleの及川さんからは、2015年のWebの展望について。</p><p>今年はWebの在り方が変わる一年。<br />\nPCが単にhttpでServerにリクエストするだけの今までから、<br />\nServiceWorkerやらWebSocketなPCはもちろん、<br />\nPCだけでなく様々なハードがあちこちのリソースとつながるこれから。</p><p>ITデータを活用できてる日本企業は少ないとも。</p><p>これからのWebはIT企業からじゃなくて、ユーザー企業から！って感じなんですかねー。</p>\n\n</div>\n<div class=\"section\">\n    <h3>プリンより滑らか。スムーズなアニメーションの作り方。</h3>\n    <p>業務的にこの分野はホット(色んな意味で)なので、期待してたけど・・！</p><p>アニメーションの実行の裏側で、ブラウザは何をしているか、<br />\nどうすれば滑らかなアニメーションを実行できるかという話。</p>\n\n<div class=\"section\">\n    <h4>Reflowについて</h4>\n    <p>パフォーマンスに関わる重要な部分。<br />\n例えばmarginは、変更すると周りの要素にも影響がある -> Reフローを引き起こす。<br />\nこれに注意する。</p>\n\n    <blockquote>\n        <p>ちなみに、FireFoxのDevToolsにはReflowをログで出す機能があって、中々良い感じっぽかった。</p>\n\n    </blockquote>\n\n<ul>\n<li>margin-leftの変更はReflowを引き起こす</li>\n<li>pos: rel/abs + leftを変更してReflowするかは、ブラウザ次第</li>\n<li>transformはブラウザ問わずReflowしない</li>\n</ul><p>そのほか、getComputedStyleとかReflowするAPIを使ってしまうともちろん遅い。</p>\n\n</div>\n<div class=\"section\">\n    <h4>滑らかアニメは描画コストを削るべし</h4>\n    <p>どうすればいいかの以下3つ。</p>\n\n<div class=\"section\">\n    <h5>1. 領域を縮める</h5>\n    <p>\"Show print rectangle\"ってオプションがDevToolsにあるはず。<br />\nそれで、動かす必要のない部分は動かさないようにする。</p>\n\n</div>\n<div class=\"section\">\n    <h5>2. 軽い処理にする</h5>\n    <p>box-shadow/radius/blurとか、描画コストが重いものは使わない。<br />\nSVGもiframeで使うのは重いがimgなら軽い(今のFFは特に軽い)ってかpngでやる。</p><p>案外見せかけで騙せる部分は多いはず。</p>\n\n</div>\n<div class=\"section\">\n    <h5>3. 描画をスキップする</h5>\n    <p>Composite Layerをブラウザが自動的に認識してレイヤー化する。<br />\nするとそのレイヤーはGPUに処理されるので、メインのCPUへの負担が軽くなる。<br />\nというわけで、このレイヤーをいかにやりくりするかが重要。</p><p>これもDevToolsにオプションがあって、可視化できるはず。</p><p>アニメーション実行時に初めてレイヤー化するような場合は、出だしがもたつく可能性がある。<br />\n昔はtransform: translateZ(0)とかやってたけど、今はwill-change: **使うほうが良い。</p><p>ただし現状では対応ブラウザはお察し(-人-;)</p>\n\n    <blockquote>\n        <p><a href=\"http://caniuse.com/*feat=will-change\" target=\"_blank\" title=\"Can I use... Support tables for HTML5, CSS3, etc\">Can I use... Support tables for HTML5, CSS3, etc</a></p>\n\n    </blockquote>\n\n</div>\n</div>\n<div class=\"section\">\n    <h4>より軽いアニメーションとは</h4>\n    <p>transform/opacityであれば、コンポジターで対応できるので、<br />\njsアニメーションよりもcssアニメーションのほうがスムーズ。</p>\n\n    <blockquote>\n        <p>コンポジターってなんぞやって思ったけど、<br />\nさっきの例みたくGPUのComposite Layerで処理できるやつらってことかしら？</p>\n\n    </blockquote>\n\n<div class=\"section\">\n    <h5>layers.offmainthreadcomposition.async-animations</h5>\n    <p>FireFoxOS(だけで今のところ対応してる)でコレを使うと、jsアニメーションの描画処理でも非同期でやれるようになる。</p><p>ちなみにコレは、Web Animations APIやるのと同じ！(ただしコレも現状はChromeのみ対応)<br />\n今後に期待。</p>\n\n    <blockquote>\n        <p><a href=\"http://caniuse.com/*feat=web-animation\" target=\"_blank\" title=\"Can I use... Support tables for HTML5, CSS3, etc\">Can I use... Support tables for HTML5, CSS3, etc</a></p>\n\n    </blockquote>\n\n</div>\n</div>\n</div>\n<div class=\"section\">\n    <h3>Web: reboot</h3>\n    <p>概念的な話だったので詳しくは割愛。<br />\nExtensibleWebとは？っていう。</p><p>まとめ見つけたー。</p>\n\n    <blockquote>\n        <p><a href=\"http://togetter.com/li/774123\" target=\"_blank\" title=\"Web: Reboot HTML5 Conference - Togetterまとめ\">Web: Reboot HTML5 Conference - Togetterまとめ</a></p>\n\n    </blockquote>\n\n</div>\n<div class=\"section\">\n    <h3>2015年これからのWebパフォーマンスについて</h3>\n    <p>パネルディスカッションって行くまで知らんかった・・。<br />\nなんかただ立ち見がでるほど激混みしてた。</p>\n\n<div class=\"section\">\n    <h4>大手ECサイトのダウンロード時間を比較する</h4>\n    <p>PC@IEだと、</p>\n\n<ul>\n<li>国内: 2s-</li>\n<li>国外: 1s以下</li>\n</ul><p>海外はやいですね。</p><p>Mobile@iPhone6/3Gだと、</p>\n\n<ul>\n<li>国内: 7.4s-</li>\n<li>国外: 1.71s以下</li>\n</ul><p>日本氏ー！<br />\nというわけで、パフォーマンス後進国ですと。</p>\n\n</div>\n<div class=\"section\">\n    <h4>パフォーマンスチューニングとは</h4>\n    <p>Amazon.co.jpのファーストペイントまでの時間の例。<br />\n2015/01/22までは2.5s以内だったが、この日を境にバラけてきてる。<br />\n原因はさておき、長期的に観測してないとこの事実には気付けない。</p><p>パフォーマンスチューニングは単発でやるのではなく、長期的に取り組むべきもの。<br />\n\"機能\"とは別に\"性能\"の観点で、品質管理をすべき。</p><p>ネットワークをこえて、速いか遅いかまで確かめてこそのパフォーマンス。<br />\n普段の開発(日中)は速くても、実際に使われるであろう時間帯(夜とか)に遅いなら、その速さには意味が無い。</p><p>こういうものには、統計学的アプローチが有効。<br />\n<br />\n</p>\n\n</div>\n<div class=\"section\">\n    <h4>パネル</h4>\n    <p>の内容に関しては知ってることばかりであまり収穫なしでした。</p>\n\n    <blockquote>\n        <p>・・・奥さんやっぱPerl書いてる場合じゃないっすよ！</p>\n\n    </blockquote>\n<p>最後に、制限があるほうがクリエイティビティは発揮できる！論のもと、<br />\n以下のページ容量を目安にしてみると良いのではって言ってた。</p>\n\n<ul>\n<li>PCなら1MB</li>\n<li>Mobileなら100KB</li>\n</ul><p>お、おう・・。<br />\n<br />\n</p>\n\n</div>\n</div>\n<div class=\"section\">\n    <h3>Web Audio API、 Web MIDI API を使ったサウンドプログラミング</h3>\n    <p>完全に趣味ですが、最近は音関連に熱があるので聞いてみた。</p><p>内容に目新しいのはなかったけど、MIDI鍵盤買おうかなって思った。</p><p>スライドはこちら。</p>\n\n    <blockquote>\n        <p><a href=\"http://www.slideshare.net/ryoyakawai/web-audi-oapi-web-midi-api-2015-html5-conference\" target=\"_blank\" title=\"Web Audi oAPI, Web MIDI API - 2015 html5 conference\">Web Audi oAPI, Web MIDI API - 2015 html5 conference</a></p>\n\n    </blockquote>\n\n</div>\n<div class=\"section\">\n    <h3>HTML5ハイブリッドアプリ開発のベストプラクティス</h3>\n    \n<div class=\"section\">\n    <h4>ハイブリッドアプリとは</h4>\n    <p>HTML5 x JavaScriptが動くWebViewを、ネイティブでくるむもの。<br />\nXamarinとかTitaniumとかとは違う。</p>\n\n</div>\n<div class=\"section\">\n    <h4>Cordovaのシェア</h4>\n    \n<ul>\n<li>Skype</li>\n<li>LINE</li>\n<li>Amazon</li>\n<li>etc..</li>\n</ul><p>などなど、主にビジネス向けのアプリに採用されてる。</p>\n\n</div>\n<div class=\"section\">\n    <h4>ハイブリッド or ネイティブ？判断ポイント5つ</h4>\n    \n<div class=\"section\">\n    <h5>1. 本当にハイブリッドで大丈夫か？</h5>\n    <p>実装を共通化することが目的であればOK。</p><p>ゆくゆくは各OSに特化・・みたいな話になるならNG。<br />\nUI/UXを徹底的に・・！みたいなのものもちろんNG。</p>\n\n</div>\n<div class=\"section\">\n    <h5>2. 対応バージョンは？</h5>\n    \n<ul>\n<li>iOSは7以上</li>\n<li>Androidは4以上</li>\n</ul><p>ターゲットはこの範囲になる。</p>\n\n</div>\n<div class=\"section\">\n    <h5>3. WebViewの種類</h5>\n    <p>iOSなら、</p>\n\n<ul>\n<li>UIWebView</li>\n<li>iOS8からはWKWebView(Cordovaは未対応)と選択</li>\n</ul><p>Androidなら、</p>\n\n<ul>\n<li>Android WebView(4.3以前はメンテしない宣言)</li>\n<li>Android4からはChromium WebView(Crosswalk Engine)と選択</li>\n</ul>\n</div>\n<div class=\"section\">\n    <h5>4. UIを検討する</h5>\n    \n<ul>\n<li>jQueryMobile</li>\n<li>Ionic</li>\n<li>OnsenUI</li>\n</ul><p>みたく、中間っぽいものでよいのか。</p>\n\n</div>\n<div class=\"section\">\n    <h5>5. その他</h5>\n    \n<ul>\n<li>Cordovaのドキュメントは読むべし</li>\n<li>各ネイティブの知識はあったほうがベター(どうブリッジしてるかの部分など)</li>\n<li>Web側のパフォーマンスに関する知識</li>\n</ul>\n</div>\n</div>\n<div class=\"section\">\n    <h4>周辺機器もご一緒に</h4>\n    \n<ul>\n<li>Cordovaのプラグインを検討する</li>\n<li>SPAを作るフレームワークを検討する(AngularとかMeteorとか)</li>\n<li>モバイルUIのフレームワークも一考(SenchaとかIonicとか)</li>\n</ul>\n</div>\n<div class=\"section\">\n    <h4>Cordovaを使う上で</h4>\n    \n<div class=\"section\">\n    <h5>デバッグの仕方</h5>\n    \n<ul>\n<li>Android4- x Chromium WebView</li>\n<li>Android4.4-</li>\n</ul><p>この条件なら、Chrome DevToolsで見れる！<br />\niOSならSafariで見れる。</p><p>WindowsならGapDebugってのがオススメだそうな。</p>\n\n    <blockquote>\n        <p><a href=\"https://www.genuitec.com/products/gapdebug/\" target=\"_blank\" title=\"GapDebug | Genuitec\">GapDebug | Genuitec</a></p>\n\n    </blockquote>\n\n</div>\n<div class=\"section\">\n    <h5>開発体制</h5>\n    <p>だいたいこんなウェイトのチームが理想。</p>\n\n<ul>\n<li>UIデザイナー: 20-40%</li>\n<li>フロントエンドエンジニア: 50-70%</li>\n<li>各OSのネイティブエンジニア: 5-20%</li>\n</ul>\n</div>\n<div class=\"section\">\n    <h5>セキュリティ</h5>\n    <p>潜在的なバグを回避するため、できれば最新のものを使う。<br />\nAndroidならChromium WebViewを使うなど。</p><p>XSSも、JavaScript使うなら当然気をつける。</p><p>アプリのロジック漏洩に関しては、<br />\nWebと同じでソースコード圧縮するしかない。</p><p>暗号化するソリューションもあるよ！<br />\n<br />\n</p>\n\n</div>\n</div>\n<div class=\"section\">\n    <h4>いま感じる課題</h4>\n    \n<ul>\n<li>開発スキル・チーム体制</li>\n<li>メンテナンス</li>\n<li>情報不足</li>\n</ul><p>質問タイムあったら聞きたいことあったのにー。<br />\n<br />\n</p>\n\n</div>\n</div>\n<div class=\"section\">\n    <h3>スペシャルセッション</h3>\n    <p>いわゆるLT大会とクイズ大会。</p><p>クイズ大会に関してはコレがハイライトｗ<blockquote class=\"twitter-tweet\" lang=\"ja\"><p>「ガチ勢自重しろ」<a href=\"https://twitter.com/hashtag/html5j_h?src=hash\">#html5j_h</a> <a href=\"https://twitter.com/hashtag/html5j?src=hash\">#html5j</a></p>&mdash; kyo ago (@kyo_ago) <a href=\"https://twitter.com/kyo_ago/status/559283302683516928\">2015, 1月 25</a></blockquote><script async src=\"//platform.twitter.com/widgets.js\" charset=\"utf-8\"></script></p><p></p>\n\n</div>\n<div class=\"section\">\n    <h3>他の会場の参考になる案件たち</h3>\n    \n<ul>\n<li><a href=\"http://www.slideshare.net/futomihatano/20140125-html5-conference2015-43866729\" target=\"_blank\" title=\"HTML5 Conference 2015 悩める組込機器向けウェブコンテンツのパフォーマンス\">HTML5 Conference 2015 悩める組込機器向けウェブコンテンツのパフォーマンス</a></li>\n<li><a href=\"http://www.slideshare.net/yusukenaka52/webrtcortc\" target=\"_blank\" title=\"WebRTC/ORTCの最新動向まるわかり！\">WebRTC/ORTCの最新動向まるわかり！</a></li>\n<li><a href=\"http://www.slideshare.net/shigeki_ohtsu/http2-ohtsu-html5conf2015\" target=\"_blank\" title=\"HTTP/2の現状とこれから\">HTTP/2の現状とこれから</a></li>\n</ul><p><br />\nみなさんお疲れさまでしたー。</p>\n\n</div>"
}
