{
  "title": "Cloudflare WorkersのKVに、圧縮済のファイルをアップロードする",
  "html": "<p>たとえばウェブフォントの`woff2`とか、独自の圧縮方式を採用してるファイルとか。</p><p>そういうのをKVに入れたい場合にどうするかというメモです。<br />\n<br />\n</p>\n\n<div class=\"section\">\n    <h3>KVにファイルをアップロードする方法</h3>\n    <p>色々やり方があるけど、一番お手軽だと思われるのは、`wrangler`CLIでやる方法。</p>\n<pre class=\"code\" data-lang=\"\" data-unlink>wrangler kv:key put --binding=MY_KV &#34;my-key&#34; path/to/file --path</pre><p>次に思いつくのは、RESTのAPIを使う方法。<br />\n言ってしまうと`wrangler`も内部的にはこのAPIを叩いてるので、一緒といえば一緒。</p>\n<pre class=\"code\" data-lang=\"\" data-unlink>curl -X PUT \\\n     &#34;https://api.cloudflare.com/client/v4/accounts/$ACCOUNT_ID/storage/kv/namespaces/$KV_NAMESPACE/values/$KEY&#34; \\\n     -H &#34;authorization: Bearer $ACCESS_TOKEN&#34; \\\n     --data-binary &#34;@path/to/file&#34;</pre><p>RESTのAPIということは、同様のことをNodeからやれる。</p>\n<pre class=\"code lang-javascript\" data-lang=\"javascript\" data-unlink><span class=\"synStatement\">const</span> fs = require(<span class=\"synConstant\">&quot;fs&quot;</span>);\n<span class=\"synStatement\">const</span> <span class=\"synIdentifier\">{</span> fetch <span class=\"synIdentifier\">}</span> = require(<span class=\"synConstant\">&quot;undici&quot;</span>);\n\n<span class=\"synComment\">/**</span>\n<span class=\"synComment\"> * @param {string} key</span>\n<span class=\"synComment\"> * @param {string} pathToFile</span>\n<span class=\"synComment\"> */</span>\n<span class=\"synStatement\">const</span> putKvFile = (key, pathToFile) =&gt; fetch(\n  `https:<span class=\"synComment\">//api.cloudflare.com/client/v4/accounts/${ACCOUNT_ID}/storage/kv/namespaces/${KV_NAMESPACE}/values/${key}`,</span>\n  <span class=\"synIdentifier\">{</span>\n    method: <span class=\"synConstant\">&quot;PUT&quot;</span>,\n    headers: <span class=\"synIdentifier\">{</span>\n      <span class=\"synConstant\">&quot;authorization&quot;</span>: <span class=\"synConstant\">&quot;Bearer &quot;</span> + ACCESS_TOKEN,\n    <span class=\"synIdentifier\">}</span>,\n    body: fs.createReadStream(pathToFile),\n  <span class=\"synIdentifier\">}</span>\n);\n</pre><p>このAPIにはレート制限があって、5分の枠で1200リクエストまでとのこと。</p>\n\n    <blockquote>\n        <p>The Cloudflare API sets a maximum of 1,200 requests in a five minute period.<br />\n<a href=\"https://api.cloudflare.com/#getting-started-requests\">https://api.cloudflare.com/#getting-started-requests</a></p>\n\n    </blockquote>\n\n</div>\n<div class=\"section\">\n    <h3>ハマったこと</h3>\n    \n<ul>\n<li>`wrangler@beta`ではうまく動かない\n<ul>\n<li>`wrangler`CLIは、Rustで書かれた現行verと、`wrangler@beta`から利用できるTypeScriptの次期verがある</li>\n<li>先述の`-p / --path`でファイルをアップロードする方法の実装が変わったのか、次期verではうまくアップロードできなかった</li>\n<li>アップロード自体は成功と表示されるけど、ファイルが壊れるみたいな感じ</li>\n<li>（まだベータなせいであり、そのうち修正されると信じたい）</li>\n</ul></li>\n<li>管理画面のGUIからはアップロードできない\n<ul>\n<li>管理画面から入力できるのは文字列だけ</li>\n</ul></li>\n<li>複数ファイルをまとめてアップロードすることはできない（という結論）\n<ul>\n<li>KVとして、複数のキーバリューの書き込み自体はサポートしてる</li>\n<li>`wrangler kv:bulk`コマンドや、bulkアップロード用のREST APIが存在する</li>\n<li><a href=\"https://api.cloudflare.com/#workers-kv-namespace-write-multiple-key-value-pairs\">https://api.cloudflare.com/#workers-kv-namespace-write-multiple-key-value-pairs</a></li>\n<li>ただし、JSON形式でキーとバリューを記述する必要がある</li>\n<li>`base64: true`というフラグもあるけど、圧縮済のコンテンツだからか使えなかった</li>\n</ul></li>\n</ul><p>アップロードしたいのが単なる文字列であれば、何もハマることはないと思う・・。</p>\n\n</div>\n<div class=\"section\">\n    <h3>おまけ: Workerからレスポンスするとき</h3>\n    <pre class=\"code lang-javascript\" data-lang=\"javascript\" data-unlink><span class=\"synStatement\">const</span> file = await MY_KV.get(key, <span class=\"synIdentifier\">{</span> type: <span class=\"synConstant\">&quot;arrayBuffer&quot;</span> <span class=\"synIdentifier\">}</span>);\n<span class=\"synStatement\">return</span> <span class=\"synStatement\">new</span> Response(file, <span class=\"synIdentifier\">{</span>\n  headers: <span class=\"synIdentifier\">{</span> <span class=\"synComment\">/* ... */</span> <span class=\"synIdentifier\">}</span>\n<span class=\"synIdentifier\">}</span>);\n</pre><p>`arrayBuffer`にして取り出すのがポイント。</p>\n\n</div>"
}
