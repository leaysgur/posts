{
  "title": "ev.composedPath()でClick awayを実装する",
  "html": "\n    <blockquote>\n        <p><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Event/composedPath\">Event.composedPath() - Web APIs | MDN</a></p>\n\n    </blockquote>\n<p>いつの間にこんな便利なやつが・・。<br />\n<br />\n</p>\n\n<div class=\"section\">\n    <h3>ev.composedPath()</h3>\n    <p>`click`などのイベントが、どういうDOM経路で発生したのかがわかる。</p><p>たとえばこういうHTMLのとき。</p>\n<pre class=\"code lang-html\" data-lang=\"html\" data-unlink><span class=\"synComment\">&lt;!DOCTYPE html&gt;</span>\n<span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">html</span><span class=\"synIdentifier\">&gt;</span>\n<span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">head</span><span class=\"synIdentifier\">&gt;</span>\n<span class=\"synPreProc\">  </span><span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">meta</span><span class=\"synIdentifier\"> </span><span class=\"synType\">charset</span><span class=\"synIdentifier\">=</span><span class=\"synConstant\">&quot;utf-8&quot;</span><span class=\"synIdentifier\">&gt;</span>\n<span class=\"synPreProc\">  </span><span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">meta</span><span class=\"synIdentifier\"> </span><span class=\"synType\">name</span><span class=\"synIdentifier\">=</span><span class=\"synConstant\">&quot;viewport&quot;</span><span class=\"synIdentifier\"> </span><span class=\"synType\">content</span><span class=\"synIdentifier\">=</span><span class=\"synConstant\">&quot;width=device-width&quot;</span><span class=\"synIdentifier\">&gt;</span>\n<span class=\"synPreProc\">  </span><span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">title</span><span class=\"synIdentifier\">&gt;</span>composedPath()<span class=\"synIdentifier\">&lt;/</span><span class=\"synStatement\">title</span><span class=\"synIdentifier\">&gt;</span>\n<span class=\"synIdentifier\">&lt;/</span><span class=\"synStatement\">head</span><span class=\"synIdentifier\">&gt;</span>\n<span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">body</span><span class=\"synIdentifier\">&gt;</span>\n  <span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">section</span><span class=\"synIdentifier\">&gt;</span>\n    <span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">div</span><span class=\"synIdentifier\">&gt;&lt;</span><span class=\"synStatement\">button</span><span class=\"synIdentifier\">&gt;</span>Hi<span class=\"synIdentifier\">&lt;/</span><span class=\"synStatement\">button</span><span class=\"synIdentifier\">&gt;&lt;/</span><span class=\"synStatement\">div</span><span class=\"synIdentifier\">&gt;</span>\n  <span class=\"synIdentifier\">&lt;/</span><span class=\"synStatement\">section</span><span class=\"synIdentifier\">&gt;</span>\n<span class=\"synIdentifier\">&lt;/</span><span class=\"synStatement\">body</span><span class=\"synIdentifier\">&gt;</span>\n<span class=\"synIdentifier\">&lt;/</span><span class=\"synStatement\">html</span><span class=\"synIdentifier\">&gt;</span>\n</pre><p>こういうコードを書いて、</p>\n<pre class=\"code lang-javascript\" data-lang=\"javascript\" data-unlink><span class=\"synStatement\">document</span>.querySelector(<span class=\"synConstant\">&quot;button&quot;</span>).addEventListener(<span class=\"synConstant\">&quot;click&quot;</span>, (ev) =&gt; <span class=\"synIdentifier\">{</span>\n  <span class=\"synStatement\">const</span> path = ev.composedPath();\n  <span class=\"synStatement\">for</span> (<span class=\"synStatement\">const</span> target of path) <span class=\"synIdentifier\">{</span>\n    console.log(target.nodeName || <span class=\"synConstant\">&quot;#window&quot;</span>);\n  <span class=\"synIdentifier\">}</span>\n<span class=\"synIdentifier\">}</span>);\n</pre><p>ボタンをクリックすると。</p>\n<pre class=\"code\" data-lang=\"\" data-unlink>&#34;BUTTON&#34;\n&#34;DIV&#34;\n&#34;SECTION&#34;\n&#34;BODY&#34;\n&#34;HTML&#34;\n&#34;#document&#34;\n&#34;#window&#34;</pre><p>という感じに。</p>\n\n</div>\n<div class=\"section\">\n    <h3>Click awayする</h3>\n    <p>「特定の要素の外をクリックしたら」っていうやつで、モーダルやメニューを閉じたいときにやるやつ。</p><p>`composedPath()`を使えば、</p>\n\n<ul>\n<li>`document`に対するすべての`click`イベントを拾って</li>\n<li>そのイベントの`composedPath()`に、特定の要素が含まれていない場合</li>\n<li>コールバックを実行する</li>\n</ul><p>という風にできる。</p>\n<pre class=\"code lang-javascript\" data-lang=\"javascript\" data-unlink><span class=\"synStatement\">const</span> clickAway = (el, onAway) =&gt; <span class=\"synIdentifier\">{</span>\n  <span class=\"synStatement\">const</span> onClick = (ev) =&gt; <span class=\"synIdentifier\">{</span>\n    <span class=\"synStatement\">const</span> path = ev.composedPath();\n    <span class=\"synComment\">// 含まれてる = 内側 = 何もしない</span>\n    <span class=\"synStatement\">if</span> (path.includes(el)) <span class=\"synStatement\">return</span>;\n    onAway();\n  <span class=\"synIdentifier\">}</span>;\n  \n  <span class=\"synStatement\">document</span>.addEventListener(<span class=\"synConstant\">&quot;click&quot;</span>, onClick);\n  <span class=\"synStatement\">return</span> () =&gt; <span class=\"synIdentifier\">{</span>\n    <span class=\"synStatement\">document</span>.removeEventListener(<span class=\"synConstant\">&quot;click&quot;</span>, onClick);\n  <span class=\"synIdentifier\">}</span>;\n<span class=\"synIdentifier\">}</span>;\n\n\n<span class=\"synStatement\">const</span> $button = <span class=\"synStatement\">document</span>.querySelector(<span class=\"synConstant\">&quot;button&quot;</span>);\n<span class=\"synStatement\">const</span> buttonAway = () =&gt; <span class=\"synIdentifier\">{</span>\n  console.log(<span class=\"synConstant\">&quot;Outside!&quot;</span>);\n<span class=\"synIdentifier\">}</span>\n\nclickAway($button, buttonAway);\n</pre><p>って感じ。</p><p>この実装、一昔前までは`Element.contains()`とか、もっと前なら`$.closest()`とか、それなりにヘビーなやつを使ってた気がするので、いい時代になったもんだ！</p>\n\n</div>"
}
