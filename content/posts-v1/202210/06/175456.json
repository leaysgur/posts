{
  "title": "coc.nvimのGoTo Definitionをウィンドウ分割で",
  "html": "<p>サンプルの設定ままだと、ウィンドウ分割ではなくそのウィンドウで開かれてしまうので、ちょっと不便。</p>\n<pre class=\"code lang-vim\" data-lang=\"vim\" data-unlink><span class=\"synStatement\">nmap</span> <span class=\"synSpecial\">&lt;silent&gt;</span> gd <span class=\"synSpecial\">&lt;Plug&gt;</span>(coc-definition)\n</pre><p>`gd`で定義ジャンプして開いたやつを閉じて、もとに戻るにはどうすれば？ってなる。`C-o`で戻れるけど。</p><p>そもそもこれを、`:sp`とか`:vs`とかでやりたい！という話。<br />\n<br />\n</p>\n\n<div class=\"section\">\n    <h3 id=\"できた\">できた</h3>\n    \n    <blockquote>\n        <p><a href=\"https://github.com/neoclide/coc.nvim/issues/1249\">Goto Definition in Vsplit? &middot; Issue #1249 &middot; neoclide/coc.nvim &middot; GitHub</a></p>\n\n    </blockquote>\n<p>同じこと考えてる人はもちろんいて、あっさりできた。</p>\n<pre class=\"code lang-vim\" data-lang=\"vim\" data-unlink><span class=\"synStatement\">nmap</span> <span class=\"synSpecial\">&lt;silent&gt;</span> gds :sp<span class=\"synSpecial\">&lt;CR&gt;&lt;Plug&gt;</span>(coc-definition)\n<span class=\"synStatement\">nmap</span> <span class=\"synSpecial\">&lt;silent&gt;</span> gdv :vs<span class=\"synSpecial\">&lt;CR&gt;&lt;Plug&gt;</span>(coc-definition)\n</pre><p>`gds`と`gdv`にキーマップして使うことにした。</p><p>他にも、`:call CocAction('jumpDefinition', 'split')`っていうやり方もあるとのこと。</p>\n\n</div>"
}
