{
  "title": "力づくでWordPressの記事を多言語化してるように見せる",
  "html": "<p>スマートなやり方ではないものの、わざわざプラグインを入れるまでもないし・・、という場合に。<br />\n例えば、日本語と英語のページを用意したいとします。</p><p>シーンとしては・・、</p>\n\n<ul>\n<li>WordPressで固定ページを数ページ用意していて、それを多言語化する必要がある。</li>\n<li>プラグインをなんらかの事情で使えない。</li>\n</ul>\n<div class=\"seemore\">\n    \n<div class=\"section\">\n    <h3>用意するもの</h3>\n    \n<ul>\n<li>日本語で投稿した記事(記事IDをメモ！)</li>\n<li>英語で投稿した記事(記事IDをメモ！)</li>\n<li>言語設定を判定する関数(functions.phpにでも。)</li>\n</ul>\n</div>\n<div class=\"section\">\n    <h3>言語環境をチェック</h3>\n    <p>すごく雑把ですが、日本語か英語かをチェック。</p>\n\n    <pre class=\"code lang-php\" data-lang=\"php\" data-unlink>function isJP(){\n\t$l = substr($_SERVER[&#39;HTTP_ACCEPT_LANGUAGE&#39;], 0, 2);\n\tif (($l) &amp;&amp; ( $l == &#39;ja&#39; )){\n\t\treturn true;\n\t}else{\n\t\treturn false;\n\t}\n}</pre>\n<p>$_SERVER['HTTP_ACCEPT_LANGUAGE'] では、パソコンの言語設定で何を優先的に使うようにしているかがわかります。<br />\n戻ってくる値は、</p>\n\n    <pre class=\"code lang-php\" data-lang=\"php\" data-unlink>echo $_SERVER[&#39;HTTP_ACCEPT_LANGUAGE&#39;];\n//ja,en-US;q=0.8,en;q=0.6</pre>\n<p>横についてる数字が優先度で、1位のやつは1.0です。<br />\n複数1位になる場合もあるので、「日本語を最優先にしている」もののみを、isJP()で判定してます。</p>\n\n</div>\n<div class=\"section\">\n    <h3>isJP()に応じて記事を表示する</h3>\n    <p>後は記事を読んでるところで・・、</p>\n\n    <pre class=\"code lang-php\" data-lang=\"php\" data-unlink>&lt;article id=&#34;post-&lt;?php the_ID(); ?&gt;&#34; &lt;?php post_class(); ?&gt;&gt;\n\t&lt;header&gt;\n\t\t&lt;h2&gt;&lt;?php the_title(); ?&gt;&lt;/h2&gt;\n\t&lt;/header&gt;\n\t&lt;div id=&#34;page_cnt&#34;&gt;\n\t&lt;?php \n\t\tif(isJP()){\n\t\t\t$id = 47; // さっきメモした記事ID\n\t\t\t$cnt = get_post($id); // 必ず変数で指定\n\t\t\techo $cnt-&gt;post_content; // post_contentで本文、post_titleならタイトル\n\t\t}else{\n\t\t\tthe_content(); // 日本語以外なので、今回は英語の記事を通常出力\n\t\t} ?&gt;\n\t&lt;/div&gt;\t\t\t\n&lt;/article&gt;</pre>\n<p>get_post()関数へは、変数で記事IDを投げる必要があるそうです。<br />\nで、取得した記事オブジェクトから、本文なりタグなりタイトルを取得。</p><p>という感じで、力づくで多言語化！<br />\n・・・普通にしてたら使わんやろなぁｗ</p>\n\n</div>\n</div>"
}
