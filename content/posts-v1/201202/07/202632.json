{
  "title": "bind()よりlive()よりdelegate()が良いみたい",
  "html": "<p>過去にこんな記事を書きました。</p>\n\n    <blockquote>\n        <p>参考：<a href=\"http://lealog.hateblo.jp/entry/2012/01/22/001542\" target=\"_blank\" title=\"[JavaScript][jQuery]onload後に構築した要素に対してイベントや関数が効かないときには\">[JavaScript][jQuery]onload後に構築した要素に対してイベントや関数が効かないときには</a><br />\n参考：<a href=\"http://lealog.hateblo.jp/entry/2012/02/05/011449\" target=\"_blank\" title=\"[jQuery][JavaScript]jQuery.live()でhoverを実現したい場合は\">[jQuery][JavaScript]jQuery.live()でhoverを実現したい場合は</a></p>\n\n    </blockquote>\n<p>で、live()すげー！と思ってたのですが、この度↓の記事を読みまして。</p>\n\n    <blockquote>\n        <p>参考：<a href=\"http://www.alfajango.com/blog/the-difference-between-jquerys-bind-live-and-delegate/\" target=\"_blank\" title=\"The Difference Between jQuery’s .bind(), .live(), and .delegate() - Alfa Jango Blog\">The Difference Between jQuery’s .bind(), .live(), and .delegate() - Alfa Jango Blog</a></p>\n\n    </blockquote>\n\n<div class=\"seemore\">\n    \n<div class=\"section\">\n    <h3>結論</h3>\n    <p>以下に書いてるのは、画像のロールオーバーのスクリプトです。<br />\nAjaxでDOM構築後に追加した要素に対しても効きます。</p>\n\n    <pre class=\"code lang-javascript\" data-lang=\"javascript\">// delegate() ver.\njQuery(document).delegate(&#39;img.hover&#39;, &#39;mouseenter&#39;, function(){\n\t\tjQuery(this).attr(&#39;src&#39;).replace(/^(.+)_off(\\..+)$/, &#39;$1_on$2&#39;);\n});\n\njQuery(document).delegate(&#39;img.hover&#39;, &#39;mouseleave&#39;, function(){\n\t\tjQuery(this).attr(&#39;src&#39;).replace(/^(.+)_on(\\..+)$/, &#39;$1_off$2&#39;);\n});\n\n// live() ver.\n/*\njQuery(&#39;img.hover&#39;).live({\n\tmouseenter: function(){\n\t\tjQuery(this).attr(&#39;src&#39;).replace(/^(.+)_off(\\..+)$/, &#39;$1_on$2&#39;);\n\t},\n\tmouseleave: function(){\n\t\tjQuery(this).attr(&#39;src&#39;).replace(/^(.+)_on(\\..+)$/, &#39;$1_off$2&#39;);\n\t}\n});\n*/</pre>\n\n<div class=\"section\">\n    <h4>そのわけ</h4>\n    <p>いわゆるイベントリスナの考え方だそうです。<br />\n詳しい説明は、冒頭の記事を読んでいただくとして・・。</p>\n\n<ul>\n<li>ホバーやったりクリックやったりの要素を監視する対象は、減らせるなら減らそう。</li>\n<li>イベントを発生させるのは、目的の要素に目的の動きがあった時だけにしよう。</li>\n</ul><p>上の例でのlive()だと、「hoverクラスを持つimg要素にマウスが乗っかる・離れる」を、ずーっと見張ってないといけません。<br />\nいつどこに要素があるかわからん恐怖！</p><p>反対にdelegate()だと、「最初のセレクタである程度範囲を絞る」ことができ、かつ「hoverクラスを持つimg要素にマウスが乗っかる・離れる」だけ見てれば良いと。</p><p>いやー、奥が深いわー。</p>\n\n</div>\n</div>\n</div>"
}
