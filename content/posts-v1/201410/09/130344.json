{
  "title": "ブラウザかWebViewか、どちらで開かれたのかを判別するには",
  "html": "<p>あると思った？<br />\n残念、そんなものはない！</p><p>とはいえそれは\"厳密に\"やる場合の話で、今現在はなんとか・・なんとか・・・。<br />\nこれを良しとするかはあなたのココロ次第です。</p><p>以下、奮闘記をお送りいたします。</p>\n\n    <blockquote>\n        <p>20150813: 更新<br />\n‘fullscreenEnabled’ in documentってすればもしかして(iOSのみ)<br />\n<a href=\"https://github.com/uupaa/UserAgent.js\">https://github.com/uupaa/UserAgent.js</a> こういうのもあるらしい</p>\n\n    </blockquote>\n\n    <blockquote>\n        <p>20150422: 更新<br />\nまさかのiOSのLINEアプリのWebViewのUAが変わったらしく、FacebookとLINEが判別できるように！</p>\n\n    </blockquote>\n\n    <blockquote>\n        <p>20150407: 更新<br />\nまさかのiOSのTwitterアプリのWebViewのUAが変わったらしく、もうFacebookしか判別できないみたいです・・。</p>\n\n    </blockquote>\n\n    <blockquote>\n        <p><s>先に結論を書いておくと、現時点でiOSに限ってであればなんとかなります。</s><br />\nただ、どのアプリのWebViewかを厳密に見たいとか、AndroidのWebViewも含めて判断したいとかなってくると、現時点では\"不可能\"です。</p>\n\n    </blockquote>\n\n<div class=\"section\">\n    <h3>モチベーション</h3>\n    <p>提供するアプリの挙動を、通常のブラウザかアプリ内WebViewかで変えたかった。<br />\nアプリ内WebViewの場合、体験版みたいな感じにするとか、本編はブラウザで！って出すべく。</p>\n\n<div class=\"section\">\n    <h4>切り分けたかった環境の例</h4>\n    \n<ul>\n<li>iOS Safari</li>\n<li>iOS Facebook公式アプリ</li>\n<li>iOS Twitter公式アプリ</li>\n<li>iOS LINE公式アプリ</li>\n<li>etc..</li>\n</ul><p>まあこういうのはだいたいUAとか見ればいけると思ってましたよ、よ。</p>\n\n</div>\n</div>\n<div class=\"section\">\n    <h3>リクエスト情報から判断するパターン</h3>\n    \n<div class=\"section\">\n    <h4>ユーザーエージェントでみる</h4>\n    <p>お決まりのやーつです。<br />\nまずは現状を把握しましょう。</p>\n\n<div class=\"section\">\n    <h5>iOS Safari</h5>\n    <pre class=\"code\" data-lang=\"\" data-unlink>Mozilla/5.0 (iPhone; CPU iPhone OS 7_0_4 like Mac OS X) AppleWebKit/537.51.1 (KHTML, like Gecko) Version/7.0 Mobile/11B554a Safari/9537.53</pre><p>iPhoneってついてて、Safariってなってる。</p>\n\n</div>\n<div class=\"section\">\n    <h5>iOS Facebook公式アプリ</h5>\n    <pre class=\"code\" data-lang=\"\" data-unlink>Mozilla/5.0 (iPhone; CPU iPhone OS 7_0_4 like Mac OS X) AppleWebKit/537.51.1 (KHTML, like Gecko) Mobile/11B554a [FBAN/FBIOS;FBAV/15.0.0.16.28;FBBV/4463064;FBDV/iPhone6,1;FBMD/iPhone;FBSN/iPhone OS;FBSV/7.0.4;FBSS/2; FBCR/ソフトバンクモバイル;FBID/phone;FBLC/ja_JP;FBOP/5]</pre><p>FBAN/FBIOS;FBAVみたいなわかりやすーい文字がある。</p>\n\n</div>\n<div class=\"section\">\n    <h5>iOS Twitter公式アプリ</h5>\n    <p>それが20141009時点ではこうだった。</p>\n<pre class=\"code\" data-lang=\"\" data-unlink>Mozilla/5.0 (iPhone; CPU iPhone OS 7_0_4 like Mac OS X) AppleWebKit/537.51.1 (KHTML, like Gecko) Mobile/11B554a Twitter for iPhone</pre><p>しかし、20150407時点ではこう。</p>\n<pre class=\"code\" data-lang=\"\" data-unlink>Mozilla/5.0 (iPhone; CPU iPhone OS 7_0_4 like Mac OS X) AppleWebKit/537.51.1 (KHTML, like Gecko) Mobile/11B554a</pre><p>見分けつかん・・。</p>\n\n</div>\n<div class=\"section\">\n    <h5>iOS LINE公式アプリ</h5>\n    <pre class=\"code\" data-lang=\"\" data-unlink>Mozilla/5.0 (iPhone; CPU iPhone OS 7_0_4 like Mac OS X) AppleWebKit/537.51.1 (KHTML, like Gecko) Mobile/11B554a</pre><p>通常のSafariとほぼ同じだが、Safariの文字がない。<br />\nおそらく特にUAの設定をしていないWebViewは、全部コレになるのではと予想される。</p><p>というわけで、ターゲットを絞ればやれんことは・・ないみたい。</p><p>というのは過去の話で、最近これに変わってました。<br />\n20150422時点。</p>\n<pre class=\"code\" data-lang=\"\" data-unlink>Mozilla/5.0 (iPhone; CPU iPhone OS 7_0_4 like Mac OS X) AppleWebKit/537.51.1 (KHTML, like Gecko) Mobile/11B554a Safari Line/5.1.1</pre>\n</div>\n<div class=\"section\">\n    <h5>ちなみに、最近うわさのWKWebViewのUA</h5>\n    <pre class=\"code\" data-lang=\"\" data-unlink>Mozilla/5.0 (iPod touch; CPU iPhone OS 8_0 like Mac OS X) AppleWebKit/600.1.4 (KHTML, like Gecko) Mobile/12A365</pre><p>Safariってついてないので通常のWebViewと同じとみた。</p>\n\n</div>\n<div class=\"section\">\n    <h5>そもそも</h5>\n    \n<ul>\n<li>書式が各アプリ間で統一されてるわけでもない</li>\n<li>WebViewのUAはアプリ側で設定できるもの</li>\n</ul><p>そういう意味では、ユーザーエージェントでもって\"厳密な\"切り分けはできない。<br />\nいったん次へ。</p>\n\n</div>\n</div>\n<div class=\"section\">\n    <h4>リクエストヘッダでみる</h4>\n    <p>こういうの見つけた。</p>\n\n    <blockquote>\n        <p>参考：<a href=\"http://stackoverflow.com/questions/12727117/android-webview-user-agent-vs-browser-user-agent/15254092#15254092\" target=\"_blank\" title=\"Android, webview user agent vs browser user agent - Stack Overflow\">Android, webview user agent vs browser user agent - Stack Overflow</a></p>\n\n    </blockquote>\n<p>でもコレ信憑性はUA以下ですねー。<br />\nいやはや。</p>\n\n</div>\n</div>\n<div class=\"section\">\n    <h3>レスポンスしてから判断するパターン</h3>\n    <p>リクエスト受けた段階でわからんなら、こうするしかない。<br />\nアクセス端末をチェックする仮ページでも踏ませて、そこで判断するなら？のパターン。</p>\n\n<div class=\"section\">\n    <h4>漏れてるグローバル変数を探す</h4>\n    <p>ダメ。</p><p>Safariで存在した window.** を全部チェックしたんですが、どのWebViewでも全部あった。<br />\nchromeならwindow.chromeとかあるのにねぇ。</p>\n\n</div>\n<div class=\"section\">\n    <h4>local/sessionStorageの容量が違うのでは</h4>\n    <p>すげー黒魔術やなーとは思いますが・・。<br />\nストレージに限界まで突っ込んでみて、その最大容量が実は違っててわかるのでは説を聞き、試してみました。</p>\n\n    <blockquote>\n        <p>参考：<a href=\"http://demo.agektmr.com/storage/\" target=\"_blank\" title=\"Browser Storage Abuser\">Browser Storage Abuser</a></p>\n\n    </blockquote>\n<p>まあダメですよねー。<br />\nどの環境も等しく5MB以上は通らなかったです。</p>\n\n    <blockquote>\n        <p>てかこのサイト、WebViewで見るとレイアウトが崩れてて辛いです。ポップアップの裏にイベント突き抜けたりします。</p>\n\n    </blockquote>\n\n</div>\n<div class=\"section\">\n    <h4>WebSQLの容量が違うのでは</h4>\n    <p>これはワンチャンある感じに見え・・ダメですね。</p><p>Safariだと、一定容量以上の書き込みをしようとすると、その度にダイアログで許可を求められます。<br />\nただWebViewだと、コレがないです。</p><p>コレはいける・・！と思いきや、Chromeも、コレ出なかったです。</p><p>しかもSafariは許可しようが拒否しようがエラーのコールバックに入るっていうなにこれバグなのなんなのそしてそもそもopenDatabaseのタイミングで5MB超えたら確認されるって見た気がしたけど気のせいやったのかしら</p>\n\n    <blockquote>\n        <p>参考：<a target=\"_blank\" href=\"http://www.html5rocks.com/ja/tutorials/offline/quota-research/#toc-working_with_real_world_browsers\">モダンブラウザのストレージ容量と調査方法まとめ - HTML5 Rocks</a></p>\n\n    </blockquote>\n\n</div>\n</div>\n<div class=\"section\">\n    <h3>結論</h3>\n    <p>いちばんいいのはやはり「アプリ側でフラグたてる」ですね。</p><p>まあそれができたらこんな悩み持ってないし・・、<br />\nとはいえFacebookやらTwitterやら各社にお願いなんてできるわけないので、<br />\n現段階でできるのは、やはりユーザーエージェントで頑張る・・かなーと思います。</p>\n\n<div class=\"section\">\n    <h4>ちょっと考えてみる</h4>\n    \n<ul>\n<li>主要なスマホのブラウザのみをサポートしたい</li>\n<li>いわゆるWebViewやPCには違う対応がしたい</li>\n</ul><p>で、これをUAつかって判断できれば良いので・・。</p>\n\n</div>\n<div class=\"section\">\n    <h4>AccessControllByUserAgent</h4>\n    <p>いまのところFacebookもTwitterも、Android版ではWebViewって存在しないみたいなので、<br />\n厳密にはiOSでだけ対応すれば良さそうです。</p><p>ゆえに、</p>\n\n<ul>\n<li>iOSであり</li>\n<li>Safariでもなく</li>\n<li>Chromeでもなければ</li>\n</ul><p>もはやそれはWebViewであると。</p>\n<pre class=\"code lang-javascript\" data-lang=\"javascript\" data-unlink><span class=\"synIdentifier\">var</span> ACCESS = <span class=\"synIdentifier\">{</span>\n  ALLOWED: 1,\n  DENIED: 0\n<span class=\"synIdentifier\">}</span>;\n\n<span class=\"synIdentifier\">var</span> accessible = (<span class=\"synIdentifier\">function</span>() <span class=\"synIdentifier\">{</span>\n\n  <span class=\"synIdentifier\">var</span> ua = navigator.userAgent.toLowerCase();\n\n  <span class=\"synIdentifier\">var</span> isIOS = <span class=\"synConstant\">/ip(hone|od|ad)/</span>.test(ua);\n  <span class=\"synIdentifier\">var</span> isAndroid = <span class=\"synConstant\">/android/</span>.test(ua);\n  <span class=\"synIdentifier\">var</span> isMobile = isIOS || isAndroid;\n\n  <span class=\"synIdentifier\">var</span> isSafari = <span class=\"synConstant\">/safari/</span>.test(ua);\n  <span class=\"synIdentifier\">var</span> isIOSChrome = <span class=\"synConstant\">/crios/</span>.test(ua);\n  <span class=\"synIdentifier\">var</span> isOpera = <span class=\"synConstant\">/opera/</span>.test(ua);\n\n  <span class=\"synComment\">// モバイルではないのでお帰りいただく</span>\n  <span class=\"synStatement\">if</span> (!isMobile) <span class=\"synIdentifier\">{</span> <span class=\"synStatement\">return</span> ACCESS.DENIED; <span class=\"synIdentifier\">}</span>\n\n  <span class=\"synComment\">// iOSSafari or iOSChrome or iOSOperaはようこそ</span>\n  <span class=\"synStatement\">if</span> (isIOS &amp;&amp; (isSafari || isIOSChrome || isOpera)) <span class=\"synIdentifier\">{</span>\n    <span class=\"synStatement\">return</span> ACCESS.ALLOWED;\n  <span class=\"synIdentifier\">}</span>\n  <span class=\"synStatement\">else</span> <span class=\"synIdentifier\">{</span> <span class=\"synComment\">// ここがおそらくWebView族 }</span>\n\n  <span class=\"synComment\">// Android標準 or AndroidChromeもFireFoxもOperaもなんならSBrowserもようこそ</span>\n  <span class=\"synStatement\">if</span> (isAndroid) <span class=\"synIdentifier\">{</span> <span class=\"synStatement\">return</span> ACCESS.ALLOWED; <span class=\"synIdentifier\">}</span>\n\n  <span class=\"synComment\">// 残ったやつにはお帰りいただく</span>\n  <span class=\"synStatement\">return</span> ACCESS.DENIED;\n<span class=\"synIdentifier\">}</span>());\n\naccessible || (<span class=\"synStatement\">location</span>.href = <span class=\"synConstant\">'出なおしてくださいコンテンツ'</span>)\n</pre><p>ほんとにコレでいいんかと思いながら書きました。</p>\n\n<ul>\n<li>UAとかいうただの文字列を全面的に信用してる怖さ</li>\n<li>AndroidにはWebViewなんて無いとするトンデモな前提</li>\n<li>UA偽装機能を備えた3rdなブラウザとかいる</li>\n</ul><p>それを許容するなら使えると思います。</p>\n\n</div>\n<div class=\"section\">\n    <h4>FacebookとTwitterとLINEのWebViewでだけで実行したいナニカがあるなら</h4>\n    <pre class=\"code lang-javascript\" data-lang=\"javascript\" data-unlink><span class=\"synIdentifier\">var</span> mayBeWebView = (<span class=\"synIdentifier\">function</span>() <span class=\"synIdentifier\">{</span>\n\n  <span class=\"synIdentifier\">var</span> ua = navigator.userAgent.toLowerCase();\n\n  <span class=\"synIdentifier\">var</span> isIOS = <span class=\"synConstant\">/ip(hone|od|ad)/</span>.test(ua);\n\n  <span class=\"synComment\">// WebViewはiOSしかない前提なので、</span>\n  <span class=\"synComment\">// ここを通れないものはWebView足り得ない</span>\n  <span class=\"synStatement\">if</span> (!isIOS) <span class=\"synIdentifier\">{</span> <span class=\"synStatement\">return</span> 0; <span class=\"synIdentifier\">}</span>\n\n  <span class=\"synComment\">// この2アプリはUAわかりやすい</span>\n  <span class=\"synComment\">// var isTwitterIOS = /twitter/.test(ua); もう判定できない</span>\n  <span class=\"synIdentifier\">var</span> isFacebookIOS = <span class=\"synConstant\">/fbav/</span>.test(ua);\n  <span class=\"synStatement\">if</span> (isFacebookIOS) <span class=\"synIdentifier\">{</span> <span class=\"synStatement\">return</span> 1; <span class=\"synIdentifier\">}</span>\n\n  <span class=\"synIdentifier\">var</span> isSafari = <span class=\"synConstant\">/safari/</span>.test(ua);\n  <span class=\"synIdentifier\">var</span> isIOSChrome = <span class=\"synConstant\">/crios/</span>.test(ua);\n  <span class=\"synIdentifier\">var</span> isOpera = <span class=\"synConstant\">/opera/</span>.test(ua);\n\n  <span class=\"synComment\">// iOSかつ、通常ブラウザが持ってるであろう文字がないならWebView</span>\n  <span class=\"synIdentifier\">var</span> isLineIOSOrOtherWebView = !(isSafari || isIOSChrome || isOpera);\n  <span class=\"synStatement\">if</span> (isLineIOSOrOtherWebView) <span class=\"synIdentifier\">{</span> <span class=\"synStatement\">return</span> 1; <span class=\"synIdentifier\">}</span>\n\n  <span class=\"synComment\">// 残ったやつにはお帰りいただく</span>\n  <span class=\"synStatement\">return</span> 0;\n<span class=\"synIdentifier\">}</span>());\n\nmayBeWebView &amp;&amp; (<span class=\"synStatement\">location</span>.href = <span class=\"synConstant\">'WebViewさんは出なおしてくださいコンテンツ'</span>)\n</pre><p><br />\n以上からお察しいただく通り、なんていうかアレなので、<br />\nもはやどうアクセスされても良い導線設計みたいなんを考えることに注力したほうがいいですね。</p><p>(ヽ´ω`) < 現場からは以上です。</p>\n\n</div>\n</div>\n<div class=\"section\">\n    <h3>絶望のAndroid@20141010追記</h3>\n    <p>そもそもTwitterもFacebookも、Android版ではWebViewが搭載されていない。<br />\nそれだけを頼りにここまで生きていきましたが、どうやらLINEではWebViewあるみたいで。</p>\n\n<div class=\"section\">\n    <h4>AndroidLINEのユーザーエージェント</h4>\n    <pre class=\"code\" data-lang=\"\" data-unlink>Mozilla/5.0 (Linux; U; Android 4.2.2; ja-jp; SBM206SH Build/S0014) AppleWebKit/534.30 (KHTML, like Gecko) Version/4.0 Mobile Safari/534.30</pre><p>あれ、これ標準ブラウザと一緒じゃね・・あれ・・・。</p>\n\n</div>\n<div class=\"section\">\n    <h4>追い打ち</h4>\n    \n    <blockquote>\n        <p><a href=\"http://www.au.kddi.com/developer/android/kishu/ua/\">http://www.au.kddi.com/developer/android/kishu/ua/</a></p>\n\n    </blockquote>\n<p>> WebView\t「ブラウザ」と同一のUser Agent</p><br />\n<p>・・・＼(^o^)／</p>\n\n</div>\n</div>\n<div class=\"section\">\n    <h3>iOS TwitterのUA変更@20150407追記</h3>\n    <p>iOSのFacebookくらいしかろくに見分けられなくなった今、果たして判別することに意義はあるのでしょうか。</p><p>私にはわかりません・・。</p><p>(ヽ´ω`) < 現場・・からは・・・以上です・・・。</p>\n\n</div>\n<div class=\"section\">\n    <h3>iOS LINEのUA変更@20150422追記</h3>\n    <p>(ヽ´ω`) < もうやだこの対応</p>\n\n</div>"
}
