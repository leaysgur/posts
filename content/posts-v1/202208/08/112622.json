{
  "title": "Svelteのstoreをdebounceする",
  "html": "<p>表示の更新タイミングを間引いたり、`subscribe()`した時に値が流れてくるペースを抑えたいって場合に使える。</p><p>検索文字列をいれるUIとかで、入力フォームはリアルタイムで反映したいけど、APIを叩くペースは落としたいときとか。<br />\n<br />\n</p>\n\n<div class=\"section\">\n    <h3 id=\"コード\">コード</h3>\n    <pre class=\"code lang-javascript\" data-lang=\"javascript\" data-unlink><span class=\"synStatement\">import</span> <span class=\"synIdentifier\">{</span> writable, derived, get <span class=\"synIdentifier\">}</span> from <span class=\"synConstant\">&quot;svelte/store&quot;</span>;\n\n<span class=\"synComment\">// これがUIでinputに使われる文字列</span>\n<span class=\"synStatement\">export</span> <span class=\"synStatement\">const</span> query = writable(<span class=\"synConstant\">&quot;&quot;</span>);\n\n<span class=\"synComment\">// こっちをoutputに使う</span>\n<span class=\"synStatement\">export</span> <span class=\"synStatement\">const</span> queryDebounced = derived(query, ($query, set) =&gt; <span class=\"synIdentifier\">{</span>\n  <span class=\"synStatement\">const</span> timeout = setTimeout(() =&gt; set($query), 500);\n  <span class=\"synStatement\">return</span> () =&gt; clearTimeout(timeout);\n<span class=\"synIdentifier\">}</span>, get(query));\n</pre><p>というように、`derived`で遅延させたstoreにするだけでできちゃう。関数を返せばそれがクリーンアップになる。</p><p>ということもDocsに書いてあって、Svelteほんと便利やな・・って。</p>\n\n    <blockquote>\n        <p><a href=\"https://svelte.dev/docs#run-time-svelte-store-derived\">Docs &bull; Svelte</a></p>\n\n    </blockquote>\n\n</div>"
}
