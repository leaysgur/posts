{
  "title": "Cloudflare WorkersのKVで、キーのリストは即時反映されない",
  "html": "<p>というバグなのか仕様なのかわからない挙動があってちょっと困ってるという話。</p><p>もしもし中の人、もし見てたら教えてください！<br />\n<br />\n</p>\n\n<div class=\"section\">\n    <h3>How to reproduce</h3>\n    <p>こういうコードを書いてデプロイする。</p>\n<pre class=\"code lang-javascript\" data-lang=\"javascript\" data-unlink>addEventListener(<span class=\"synConstant\">&quot;fetch&quot;</span>, <span class=\"synStatement\">event</span> =&gt; <span class=\"synIdentifier\">{</span>\n  <span class=\"synStatement\">event</span>.respondWith(handleRequest(<span class=\"synStatement\">event</span>.request))\n<span class=\"synIdentifier\">}</span>)\n\n<span class=\"synIdentifier\">let</span> id = 0;\nasync <span class=\"synIdentifier\">function</span> handleRequest(request) <span class=\"synIdentifier\">{</span>\n  <span class=\"synStatement\">const</span> params = <span class=\"synStatement\">new</span> URL(request.url).searchParams;\n\n  <span class=\"synStatement\">const</span> mode = params.get(<span class=\"synConstant\">&quot;mode&quot;</span>) || <span class=\"synConstant\">&quot;0&quot;</span>;\n\n  <span class=\"synStatement\">if</span> (mode === <span class=\"synConstant\">&quot;list&quot;</span>) <span class=\"synIdentifier\">{</span>\n    <span class=\"synStatement\">const</span> list = await KV.list();\n    console.log(<span class=\"synConstant\">&quot;LIST: %o&quot;</span>, list.keys);\n    <span class=\"synStatement\">return</span> <span class=\"synStatement\">new</span> Response(JSON.stringify(list.keys));\n  <span class=\"synIdentifier\">}</span>\n\n  <span class=\"synStatement\">if</span> (mode === <span class=\"synConstant\">&quot;put&quot;</span>) <span class=\"synIdentifier\">{</span>\n    await KV.put(id++, <span class=\"synConstant\">&quot;OK&quot;</span>);\n    console.log(<span class=\"synConstant\">&quot;PUT: %s&quot;</span>, id);\n    <span class=\"synStatement\">return</span> <span class=\"synStatement\">new</span> Response();\n  <span class=\"synIdentifier\">}</span>\n\n  <span class=\"synStatement\">const</span> value = await KV.get(mode);\n  console.log(<span class=\"synConstant\">&quot;GET: %s =&gt; %s&quot;</span>, mode, value);\n  <span class=\"synStatement\">return</span> <span class=\"synStatement\">new</span> Response(value);\n<span class=\"synIdentifier\">}</span>\n</pre><p>もちろん`kv:namespace`は事前に作っておく。</p><p>で、期待される挙動としてはこう。</p>\n<pre class=\"code lang-javascript\" data-lang=\"javascript\" data-unlink>await list(); <span class=\"synComment\">// []</span>\n\nawait put();\nawait list(); <span class=\"synComment\">// [{ name: &quot;0&quot; }]</span>\n\nawait put();\nawait list(); <span class=\"synComment\">// [{ name: &quot;0&quot; }, { name: &quot;1&quot; }]</span>\n</pre><p>という感じで、書き込んだものはリストに即時反映されてほしい。</p><p>しかし、実際はこうなる・・・。</p>\n<pre class=\"code lang-javascript\" data-lang=\"javascript\" data-unlink>await list(); <span class=\"synComment\">// []</span>\n\nawait put();\nawait list(); <span class=\"synComment\">// []</span>\n\nawait get(<span class=\"synConstant\">&quot;0&quot;</span>); <span class=\"synComment\">// &quot;OK&quot;</span>\nawait list(); <span class=\"synComment\">// []</span>\n\n<span class=\"synComment\">// だいたい30秒くらい待ったら</span>\nawait list(); <span class=\"synComment\">// [{ name: &quot;0&quot; }]</span>\n</pre><p>だいたい30秒のところは、もっと速いこともあれば遅かったりと不定ではあるけど、とにかく即時ではない挙動を示す。</p><p>`get()`ではちゃんと取れるのに、`list()`だと取れない、これいかに。</p>\n\n</div>\n<div class=\"section\">\n    <h3>仕様なのかバグなのか</h3>\n    <p>ドキュメントを見てもそれらしい記述は見つけられなかった。</p>\n\n    <blockquote>\n        <p>KV achieves this performance by being eventually-consistent. Changes are immediately visible in the edge location at which they're made, but may take up to 60 seconds to propagate to all other edge locations.<br />\n<a href=\"https://developers.cloudflare.com/workers/learning/how-kv-works\">https://developers.cloudflare.com/workers/learning/how-kv-works</a></p>\n\n    </blockquote>\n<p>というわけで、\"WRITEしたエッジであれば、即READできる\"とは書いてあって、さっきの検証コードでもそこはそれらしく動いてると思う。（もし違うエッジならば、`id`が違って`get()`すらうまく動かないはず）</p>\n\n    <blockquote>\n        <p><a href=\"https://community.cloudflare.com/t/listing-items-returns-inconsistent-state/122680\">Listing items returns inconsistent state - Workers - Cloudflare Community</a></p>\n\n    </blockquote>\n<p>困ってる先人もいたので、そういう仕様と割り切ったほうがいいんかな〜とか。</p>\n\n</div>\n<div class=\"section\">\n    <h3>何に困るのか</h3>\n    <p>いちおう書いておくと、たとえばTODOアプリを作ろうという場合。<br />\nそれぞれのアイテムを、個別のキーで保存しようとしたら困る。</p>\n\n<ul>\n<li>リスト取得して表示</li>\n<li>TODO追加</li>\n<li>リスト取得して表示</li>\n</ul><p>ってすると、追加されたはずのアイテムが存在しない古いリストが返ってくる。</p><p>ワークアラウンドとしては、アトミックにデータ取得して表示するのではなく、TODOを追加したときにリストの末尾に自分でアイテムを追加して、それを表示するしかない。</p><p>公式のTODOのサンプルコードがあったのでどうやってるんやろ？と思って見てみたら、1ユーザーあたり1キーでJSONまるごと保存するスタイルで書かれていて、まあそういう使い方しろってこと？ってなった。</p><p>そもそも結果整合なストアの用途じゃないかもしれんとはいえ、でもいわゆるKVSってこういうもんやっけ・・？</p>\n\n</div>\n<div class=\"section\">\n    <h3>と思ってたけど</h3>\n    <p>最近ドキュメントを読み直したら、リストのセクションにこういう記述を発見。</p>\n\n    <blockquote>\n        <p>Changes may take up to 60 seconds to be visible when listing keys.</p>\n\n    </blockquote>\n<p>というわけで、やはり書き込み後の挙動としては、</p>\n\n<ul>\n<li>`id`指定での直READは、当該エッジであれば即時で可能</li>\n<li>ただしLISTは、他エッジからのREADと同じく、60秒かかる</li>\n</ul><p>ということでFAっぽい。わかりにくいけど。</p>\n\n</div>"
}
