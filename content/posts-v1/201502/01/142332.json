{
  "title": "Marionette.ViewのonShow/onRenderの違い",
  "html": "\n    <blockquote>\n        <p><a href=\"http://stackoverflow.com/questions/17114397/marionette-js-view-difference-between-onshow-vs-onrender\" target=\"_blank\" title=\"backbone.js - marionette.js view difference between onShow vs onRender? - Stack Overflow\">backbone.js - marionette.js view difference between onShow vs onRender? - Stack Overflow</a></p>\n\n    </blockquote>\n<p>こういう記事もあるようですが、<br />\n似てるけどどっち使えば良いの？ってなったときに。</p><p>この差を知ってこそのマリオネッターですよ。<br />\n<br />\n</p>\n\n<div class=\"section\">\n    <h3>どちらもフックとして使える</h3>\n    <pre class=\"code lang-javascript\" data-lang=\"javascript\" data-unlink><span class=\"synIdentifier\">var</span> HogeView = Marionette.ItemView.extend(<span class=\"synIdentifier\">{</span>\n    onRender: <span class=\"synIdentifier\">function</span>() <span class=\"synIdentifier\">{</span> console.log(<span class=\"synConstant\">'onRender!'</span>); <span class=\"synIdentifier\">}</span>,\n    onShow:   <span class=\"synIdentifier\">function</span>() <span class=\"synIdentifier\">{</span> console.log(<span class=\"synConstant\">'onShow!'</span>);   <span class=\"synIdentifier\">}</span>\n<span class=\"synIdentifier\">}</span>);\n</pre><p>で、</p>\n<pre class=\"code lang-javascript\" data-lang=\"javascript\" data-unlink><span class=\"synIdentifier\">var</span> hogeLayout = <span class=\"synStatement\">new</span> HogeLayout();\nhogeLayout.someRegion.show(<span class=\"synStatement\">new</span> HogeView()); <span class=\"synComment\">// -&gt; onRender! -&gt; onShow!</span>\n</pre><p>みたく使う。<br />\n本当に便利な仕組みです・・。</p>\n\n</div>\n<div class=\"section\">\n    <h3>ドキュメントによると</h3>\n    \n<div class=\"section\">\n    <h4>View onShow</h4>\n    \n    <blockquote>\n        <p>This event can be used to react to when a view has been shown via a region.</p>\n\n    </blockquote>\n<p>ふむ。</p>\n\n</div>\n<div class=\"section\">\n    <h4>View onRender</h4>\n    \n    <blockquote>\n        <p>Triggered after the view has been rendered.<br />\nYou can implement this in your view to provide custom code for dealing with the view's el after it has been rendered.</p>\n\n    </blockquote>\n<p>ふむふむ。</p>\n\n</div>\n</div>\n<div class=\"section\">\n    <h3>Region.showのコードを読む</h3>\n    <p>最終的に信じられるのはコードということで。<br />\nさっきみたくRegionに対してViewをshowする一般的な使い方だと、</p>\n<pre class=\"code lang-javascript\" data-lang=\"javascript\" data-unlink><span class=\"synComment\">// Marionette.Region @v2.3.0</span>\n  show: <span class=\"synIdentifier\">function</span>(view, options)<span class=\"synIdentifier\">{</span>\n\n    <span class=\"synComment\">// 略...</span>\n\n    <span class=\"synStatement\">if</span> (_shouldShowView) <span class=\"synIdentifier\">{</span>\n\n      view.render();  <span class=\"synComment\">// [1] ここでView.onRender</span>\n\n      <span class=\"synComment\">// 略...</span>\n\n      Marionette.triggerMethodOn(view, <span class=\"synConstant\">'show'</span>, view, <span class=\"synIdentifier\">this</span>, options); <span class=\"synComment\">// [2] ここでView.onShow</span>\n\n      <span class=\"synStatement\">return</span> <span class=\"synIdentifier\">this</span>;\n    <span class=\"synIdentifier\">}</span>\n\n    <span class=\"synStatement\">return</span> <span class=\"synIdentifier\">this</span>;\n  <span class=\"synIdentifier\">}</span>\n</pre>\n<div class=\"section\">\n    <h4>View.renderのコードも見とく</h4>\n    <pre class=\"code lang-javascript\" data-lang=\"javascript\" data-unlink><span class=\"synComment\">// Marionette.ItemView @v2.3.0</span>\n  render: <span class=\"synIdentifier\">function</span>() <span class=\"synIdentifier\">{</span>\n    <span class=\"synIdentifier\">this</span>._ensureViewIsIntact();\n\n    <span class=\"synIdentifier\">this</span>.triggerMethod(<span class=\"synConstant\">'before:render'</span>, <span class=\"synIdentifier\">this</span>);\n\n    <span class=\"synIdentifier\">this</span>._renderTemplate();\n    <span class=\"synIdentifier\">this</span>.bindUIElements();\n\n    <span class=\"synIdentifier\">this</span>.triggerMethod(<span class=\"synConstant\">'render'</span>, <span class=\"synIdentifier\">this</span>); <span class=\"synComment\">// さっきの[1]の実態はコレ</span>\n\n    <span class=\"synStatement\">return</span> <span class=\"synIdentifier\">this</span>;\n  <span class=\"synIdentifier\">}</span>,\n</pre><p>というわけでした。</p>\n\n</div>\n</div>\n<div class=\"section\">\n    <h3>てなわけで、</h3>\n    \n<ul>\n<li>ViewがonShowするのはあくまでRegionによって</li>\n<li>なのでRegion.show()されないならonShowは発火しない</li>\n<li>ViewのonRenderは、new View().render()のタイミング</li>\n<li>renderされただけでは、実際のDOMに存在するかは定かではない(使い方によるので)</li>\n<li>自分配下の要素にアクセスする分にはonRender後ならOK</li>\n</ul><p>いやーほんと便利・・。</p>\n\n</div>"
}
