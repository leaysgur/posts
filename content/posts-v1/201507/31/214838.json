{
  "title": "NiftyCloudにNodeのサーバーを立てる",
  "html": "<p>とある事情でやることになって、色々あったのでメモっとく。<br />\n<br />\n</p>\n\n<div class=\"section\">\n    <h3>前提</h3>\n    <p>まず以下が揃ってる前提です。</p>\n\n<ul>\n<li>サーバーインスタンス作成済み(今回はUbuntu)</li>\n<li>.pem: sshのキーみたいなもん</li>\n<li>pp: いわゆるパスワード</li>\n<li>ユーザー名: `root`かな？</li>\n<li>サーバーのIPアドレス</li>\n<li>あきらめない心</li>\n<li>あきらめない心！！</li>\n</ul>\n</div>\n<div class=\"section\">\n    <h3>サーバーに接続する</h3>\n    <pre class=\"code lang-sh\" data-lang=\"sh\" data-unlink>ssh <span class=\"synSpecial\">-Ai</span> ./path/to/<span class=\"synStatement\">&lt;</span>PEM<span class=\"synStatement\">&gt;</span>.pem <span class=\"synStatement\">&lt;</span>USERNAME<span class=\"synStatement\">&gt;</span>@<span class=\"synStatement\">&lt;</span>IP<span class=\"synStatement\">&gt;</span>\n</pre><p>どうせgitで使うやろうし -A にしておく。<br />\nなんかダイアログ出たらpemとセットのパスワードをいれる。</p>\n\n</div>\n<div class=\"section\">\n    <h3>いろいろインストール</h3>\n    <p>無事にログインできましたが、この時点では空っぽです。<br />\nGitすら入ってないので入れます。</p><p>今回はrootであるていです。</p>\n<pre class=\"code lang-sh\" data-lang=\"sh\" data-unlink><span class=\"synComment\"># Git(Ubuntuなのでapt-get)</span>\napt-get <span class=\"synStatement\">install</span> git\n\n<span class=\"synComment\"># きっとNodeなので</span>\ncurl <span class=\"synSpecial\">-L</span> git.io/nodebrew | perl - setup\n<span class=\"synComment\"># 入ったら.bashrcにパス追記</span>\n\n<span class=\"synComment\"># お好きなNodeインストール</span>\n<span class=\"synComment\"># nodebrew install-binary -&gt; use</span>\n</pre><p>とりあえずNodeが動いたらよし。</p>\n\n</div>\n<div class=\"section\">\n    <h3>ファイアウォールの設定</h3>\n    <p>これでOKかと思いきや、もひとつ関所です。</p>\n\n    <blockquote>\n        <p><a href=\"http://cloud.nifty.com/cs/catalog/cloud_faq/catalog_120416000698_1.htm\">&#x30B5;&#x30FC;&#x30D0;&#x30FC;&#x4F5C;&#x6210;&#x76F4;&#x5F8C;&#x306E;&#x30BB;&#x30AD;&#x30E5;&#x30EA;&#x30C6;&#x30A3;&#x8A2D;&#x5B9A;&#x306F;&#x3069;&#x3046;&#x306A;&#x3063;&#x3066;&#x307E;&#x3059;&#x304B;&#xFF1F; | &#x30CB;&#x30D5;&#x30C6;&#x30A3;&#x30AF;&#x30E9;&#x30A6;&#x30C9;</a></p>\n\n    </blockquote>\n<p>これによると、</p>\n\n    <blockquote>\n        <p>ufwがデフォルトで有効になっており、22番接続のみ許可しております。 </p>\n\n    </blockquote>\n<p>らしいので、ポートの設定をしなきゃいけません。</p>\n\n<div class=\"section\">\n    <h4>ufwとは</h4>\n    <p>CentOS一筋でiptablesを直で触るしか知らなかったので、最初戸惑いました。<br />\nufwはiptablesの設定を楽にやってくれるラッパみたいなもので、便利ですコレ！</p>\n<pre class=\"code lang-sh\" data-lang=\"sh\" data-unlink><span class=\"synComment\"># 設定状況をチェック</span>\nufw <span class=\"synStatement\">status</span>\n\n<span class=\"synComment\"># 設定の反映(でも実際打たなくても反映されてる気がする)</span>\nufw <span class=\"synStatement\">reload</span>\n\n<span class=\"synComment\"># 停止</span>\nufw disable\n\n<span class=\"synComment\"># 起動</span>\nufw <span class=\"synStatement\">enable</span>\n</pre><p>初期状態では、</p>\n<pre class=\"code lang-sh\" data-lang=\"sh\" data-unlink><span class=\"synComment\"># ufw statusすると</span>\nStatus: active\n\nTo                         Action      From\n--                         <span class=\"synSpecial\">------</span>      <span class=\"synSpecial\">----</span>\n<span class=\"synConstant\">22</span>                         ALLOW       Anywhere\n<span class=\"synConstant\">22</span>                         ALLOW       Anywhere <span class=\"synPreProc\">(</span><span class=\"synSpecial\">v6</span><span class=\"synPreProc\">)</span>\n</pre><p>てな具合に、22番しか空いてないのが確認できると思うので、そこに追加を。<br />\n今回は雑に80番ポートで動かしていきます。</p>\n<pre class=\"code lang-sh\" data-lang=\"sh\" data-unlink>ufw allow <span class=\"synConstant\">80</span>\n\n<span class=\"synComment\"># もうちょっと詳細にしたいならこんな感じに</span>\n<span class=\"synComment\"># ufw allow from XXX.XXX.XXX.XXX    to any port 80</span>\n</pre><p>これでおっけー。<br />\niptablesのコマンドとか一切打つ必要ないです。</p>\n\n</div>\n</div>\n<div class=\"section\">\n    <h3>あとはNodeのアプリを</h3>\n    <p>立てればおっけー。</p><p>しかしこの記事を書きたいモチベーションはこっから先にあります。</p>\n\n</div>\n<div class=\"section\">\n    <h3>トラブルシューティング</h3>\n    \n<div class=\"section\">\n    <h4>Nodeのサーバーほんとに立ってる？</h4>\n    <pre class=\"code lang-sh\" data-lang=\"sh\" data-unlink>node server.js\n</pre><p>これで本当にサーバー立ってるのか調べたいとき。</p>\n<pre class=\"code lang-sh\" data-lang=\"sh\" data-unlink>netstat <span class=\"synSpecial\">-untap</span> | <span class=\"synStatement\">grep</span> node\n</pre><p>これでなんてホストのなんてポートで動いてるかわかる。</p>\n\n</div>\n<div class=\"section\">\n    <h4>FireWallではじかれてる？</h4>\n    <p>ufwで開放する前後で、ほんとに設定反映できてるのか調べたいとき。</p>\n<pre class=\"code lang-sh\" data-lang=\"sh\" data-unlink><span class=\"synStatement\">tail</span> <span class=\"synSpecial\">-f</span> /var/log/ufw.log\n</pre><p>ここにログが出てるので見たらわかる。</p>\n\n</div>\n<div class=\"section\">\n    <h4>Nodejs.orgのサンプル！！！</h4>\n    <pre class=\"code lang-javascript\" data-lang=\"javascript\" data-unlink><span class=\"synIdentifier\">var</span> http = require(<span class=\"synConstant\">'http'</span>);\nhttp.createServer(<span class=\"synIdentifier\">function</span> (req, res) <span class=\"synIdentifier\">{</span>\n  res.writeHead(200, <span class=\"synIdentifier\">{</span><span class=\"synConstant\">'Content-Type'</span>: <span class=\"synConstant\">'text/plain'</span><span class=\"synIdentifier\">}</span>);\n  res.end(<span class=\"synConstant\">'Hello World</span><span class=\"synSpecial\">\\n</span><span class=\"synConstant\">'</span>);\n<span class=\"synIdentifier\">}</span>).listen(1337, <span class=\"synConstant\">'127.0.0.1'</span>);\nconsole.log(<span class=\"synConstant\">'Server running at http://127.0.0.1:1337/'</span>);\n</pre><p>これ、ほんとよろしくない！</p>\n<pre class=\"code lang-javascript\" data-lang=\"javascript\" data-unlink><span class=\"synIdentifier\">var</span> http = require(<span class=\"synConstant\">'http'</span>);\nhttp.createServer(<span class=\"synIdentifier\">function</span> (req, res) <span class=\"synIdentifier\">{</span>\n  res.writeHead(200, <span class=\"synIdentifier\">{</span><span class=\"synConstant\">'Content-Type'</span>: <span class=\"synConstant\">'text/plain'</span><span class=\"synIdentifier\">}</span>);\n  res.end(<span class=\"synConstant\">'Hello World</span><span class=\"synSpecial\">\\n</span><span class=\"synConstant\">'</span>);\n<span class=\"synIdentifier\">}</span>).listen(1337, <span class=\"synIdentifier\">function</span>() <span class=\"synIdentifier\">{</span>\n  console.log(<span class=\"synConstant\">'Server running at port:1337'</span>);\n<span class=\"synIdentifier\">}</span>);\n</pre><p>こうすべきですよね！</p><p>以上、.listen()でホスト名を指定してしまい、悪くないFireWallの設定を調べ続け2時間を無駄にした人の備忘録でした。</p>\n\n</div>\n</div>"
}
