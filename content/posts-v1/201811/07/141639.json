{
  "title": "ServiceWorkerとのやり取りにMessageChannelを使う",
  "html": "<p>何を今さらって感じですが・・。</p><p>ぱっと思い出せなくて調べたので、忘れないようにメモっとく。<br />\n<br />\n</p>\n\n<div class=\"section\">\n    <h3>Browser → ServiceWorker</h3>\n    <p>これは割と簡単で、`navigator.serviceWorker.controller`に生えてる`postMessage()`を使えばいい。</p>\n<pre class=\"code lang-javascript\" data-lang=\"javascript\" data-unlink><span class=\"synComment\">// Browser</span>\n(async <span class=\"synIdentifier\">function</span> main() <span class=\"synIdentifier\">{</span>\n  <span class=\"synComment\">// もちろん前もって登録しておいて</span>\n  await navigator.serviceWorker.register(<span class=\"synConstant\">'./sw.js'</span>);\n\n  <span class=\"synStatement\">const</span> ctrl = navigator.serviceWorker.controller;\n  ctrl.postMessage(<span class=\"synIdentifier\">{</span> type: <span class=\"synConstant\">'data'</span>, payload: <span class=\"synIdentifier\">{</span> x: 1 <span class=\"synIdentifier\">}}</span>);\n<span class=\"synIdentifier\">}</span>());\n</pre><p>こうやって送って、受け取り側はこう。</p>\n<pre class=\"code lang-javascript\" data-lang=\"javascript\" data-unlink><span class=\"synComment\">// ServiceWorker</span>\n<span class=\"synStatement\">self</span>.addEventListener(<span class=\"synConstant\">'message'</span>, ev =&gt; <span class=\"synIdentifier\">{</span>\n  <span class=\"synStatement\">const</span> <span class=\"synIdentifier\">{</span> type, payload <span class=\"synIdentifier\">}</span> = ev.data;\n  console.log(type, payload);\n<span class=\"synIdentifier\">}</span>);\n</pre><p>そしてふと思う、逆はどうやるんや・・？</p>\n\n</div>\n<div class=\"section\">\n    <h3>ServiceWorker → Browser</h3>\n    <p>ここに正解があった。</p>\n\n    <blockquote>\n        <p><a href=\"https://github.com/GoogleChrome/samples/tree/gh-pages/service-worker/post-message\">samples/service-worker/post-message at gh-pages &middot; GoogleChrome/samples &middot; GitHub</a></p>\n\n    </blockquote>\n<p>`MessageChannel`を使ってやり取りする。</p><p>あえてServiceWorker側に状態を定義して、簡単なカウンターを作ってみる例。</p>\n<pre class=\"code lang-javascript\" data-lang=\"javascript\" data-unlink><span class=\"synComment\">// Browser</span>\n(async <span class=\"synIdentifier\">function</span> main() <span class=\"synIdentifier\">{</span>\n  await navigator.serviceWorker.register(<span class=\"synConstant\">'./sw.js'</span>);\n\n  <span class=\"synStatement\">const</span> <span class=\"synIdentifier\">{</span> $incBtn, $decBtn, $span <span class=\"synIdentifier\">}</span> = initView();\n  <span class=\"synStatement\">const</span> ctrl = navigator.serviceWorker.controller;\n  <span class=\"synStatement\">const</span> <span class=\"synIdentifier\">{</span> port1, port2 <span class=\"synIdentifier\">}</span> = <span class=\"synStatement\">new</span> MessageChannel();\n\n  <span class=\"synComment\">// handle messages from service worker</span>\n  <span class=\"synComment\">// addEventListener() does not work...?</span>\n  port1.onmessage = ev =&gt; <span class=\"synIdentifier\">{</span>\n    $span.textContent = ev.data;\n  <span class=\"synIdentifier\">}</span>;\n\n  <span class=\"synComment\">// init service worker with `MessagePort`</span>\n  ctrl.postMessage(<span class=\"synIdentifier\">{</span> type: <span class=\"synConstant\">'init'</span> <span class=\"synIdentifier\">}</span>, <span class=\"synIdentifier\">[</span> port2 <span class=\"synIdentifier\">]</span>);\n\n  <span class=\"synComment\">// now, we can interact with service worker!</span>\n  $incBtn.onclick = () =&gt; ctrl.postMessage(<span class=\"synIdentifier\">{</span> type: <span class=\"synConstant\">'++'</span> <span class=\"synIdentifier\">}</span>);\n  $decBtn.onclick = () =&gt; ctrl.postMessage(<span class=\"synIdentifier\">{</span> type: <span class=\"synConstant\">'--'</span> <span class=\"synIdentifier\">}</span>);\n<span class=\"synIdentifier\">}</span>());\n</pre><p>最初に`MessagePort`の片側を渡しておくのがキモ。</p><p>`Worker#postMessage()`は、第2引数で`Transferable`なものを渡せる。</p>\n\n    <blockquote>\n        <p><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Worker/postMessage\">Worker.postMessage() - Web APIs | MDN</a></p>\n\n    </blockquote>\n<p>最初は`port1`と`port2`の意味がわからんかったけど、互いに一方交の通信ができるから2つ必要ってこと。</p>\n<pre class=\"code lang-javascript\" data-lang=\"javascript\" data-unlink><span class=\"synComment\">// ServiceWorker</span>\n<span class=\"synIdentifier\">let</span> port;\n<span class=\"synIdentifier\">let</span> count = 0;\n<span class=\"synStatement\">self</span>.addEventListener(<span class=\"synConstant\">'message'</span>, ev =&gt; <span class=\"synIdentifier\">{</span>\n  <span class=\"synStatement\">const</span> <span class=\"synIdentifier\">{</span> type <span class=\"synIdentifier\">}</span> = ev.data;\n\n  <span class=\"synStatement\">switch</span> (type) <span class=\"synIdentifier\">{</span>\n    <span class=\"synStatement\">case</span> <span class=\"synConstant\">'init'</span>"
}
