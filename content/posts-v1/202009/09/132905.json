{
  "title": "Next.jsで、サーバー・クライアントで一度だけやりたい処理",
  "html": "<p>たとえば`firebase.initializeApp()`とか、特定のライブラリに<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/SSR\">SSR</a>時には何もしなくてよいことを伝える<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/API\">API</a>とか。</p><p>ドキュメントにもコレだ！という部分がなかったので書いておく。<br />\n<br />\n</p>\n\n<div class=\"section\">\n    <h3>クライアント</h3>\n    <p>`pages/_app.js`で、`useEffect(fn, [])`でできる。</p>\n<pre class=\"code lang-javascript\" data-lang=\"javascript\" data-unlink><span class=\"synStatement\">import</span> React, <span class=\"synIdentifier\">{</span> useEffect <span class=\"synIdentifier\">}</span> from <span class=\"synConstant\">&quot;react&quot;</span>;\n\n<span class=\"synIdentifier\">function</span> MyApp(<span class=\"synIdentifier\">{</span> Component, pageProps <span class=\"synIdentifier\">}</span>) <span class=\"synIdentifier\">{</span>\n  useEffect(() =&gt; <span class=\"synIdentifier\">{</span> <span class=\"synComment\">/* ここでやる */</span> <span class=\"synIdentifier\">}</span>, <span class=\"synIdentifier\">[]</span>);\n  <span class=\"synStatement\">return</span> &lt;Component <span class=\"synIdentifier\">{</span>...pageProps<span class=\"synIdentifier\">}</span> /&gt;\n<span class=\"synIdentifier\">}</span>\n\n<span class=\"synStatement\">export</span> <span class=\"synStatement\">default</span> MyApp\n</pre><p>という感じ。</p>\n\n    <blockquote>\n        <p><a href=\"https://nextjs.org/docs/advanced-features/custom-app\">Advanced Features: Custom `App` | Next.js</a></p>\n\n    </blockquote>\n<p>この`_app.js`は、`pages`配下のルートのコンテナ的存在で、ドキュメントにも`componentDidCatch()`などに利用しろと書いてあった。</p><p>URLが変わってページが切り替わるのはこいつの子であるので、とりあえず一度だけやりたい処理を書く場所としてはわかりよい。</p><p>`useEffect()`にすることで、<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/SSR\">SSR</a>時は実行されないので、クライアントでのみ実行したいことができるといわけ。<br />\n必ず子<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%A5%B3%A5%F3%A5%DD%A1%BC%A5%CD%A5%F3%A5%C8\">コンポーネント</a>の`useEffect()`よりも先に実行したという場合は、`useEffect()`ではなく、`useLayoutEffect()`にすればよい。（パフォーマンスにはよくない）</p>\n\n</div>\n<div class=\"section\">\n    <h3>サーバー</h3>\n    <p><a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/SSR\">SSR</a>時のみ実行したい処理を、シュッと書く方法はなさそう。</p>\n\n    <blockquote>\n        <p><a href=\"https://github.com/vercel/next.js/issues/5354\">Server-side only method to ensure server-only code is never sent to the browser &middot; Issue #5354 &middot; vercel/next.js &middot; GitHub</a></p>\n\n    </blockquote>\n<p><a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%A5%A4%A5%F3%A5%BF%A1%BC%A5%CD%A5%C3%A5%C4\">インターネッツ</a>から探しだした情報としては、こうすれば<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/SSR\">SSR</a>時かどうかはわかる、と。</p>\n<pre class=\"code lang-javascript\" data-lang=\"javascript\" data-unlink><span class=\"synStatement\">const</span> isSSR = <span class=\"synStatement\">typeof</span> <span class=\"synStatement\">window</span> === <span class=\"synConstant\">&quot;undefined&quot;</span>;\n</pre><p>なのでおなじく`_app.js`の<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%A5%B3%A5%F3%A5%DD%A1%BC%A5%CD%A5%F3%A5%C8\">コンポーネント</a>定義の外あたりに書いておくしかないかな・・という感じ。</p>\n<pre class=\"code lang-javascript\" data-lang=\"javascript\" data-unlink><span class=\"synStatement\">import</span> React, <span class=\"synIdentifier\">{</span> useEffect <span class=\"synIdentifier\">}</span> from <span class=\"synConstant\">&quot;react&quot;</span>;\n\n<span class=\"synStatement\">if</span> (<span class=\"synStatement\">typeof</span> <span class=\"synStatement\">window</span> === <span class=\"synConstant\">&quot;undefined&quot;</span>) <span class=\"synIdentifier\">{</span>\n  <span class=\"synComment\">/* ここでやる */</span>\n<span class=\"synIdentifier\">}</span>\n\n<span class=\"synIdentifier\">function</span> MyApp(<span class=\"synIdentifier\">{</span> Component, pageProps <span class=\"synIdentifier\">}</span>) <span class=\"synIdentifier\">{</span>\n  <span class=\"synStatement\">return</span> &lt;Component <span class=\"synIdentifier\">{</span>...pageProps<span class=\"synIdentifier\">}</span> /&gt;\n<span class=\"synIdentifier\">}</span>\n\n<span class=\"synStatement\">export</span> <span class=\"synStatement\">default</span> MyApp\n</pre><p><br />\n2020年にもなってこんな書き方させるってマジ？天下のNextさんが？って思ってたら、それ用のテストまであって本気のご様子だった・・・。</p>\n\n    <blockquote>\n        <p><a href=\"https://github.com/vercel/next.js/blob/canary/test/integration/typeof-window-replace/test/index.test.js\">https://github.com/vercel/next.js/blob/canary/test/integration/typeof-window-replace/test/index.test.js</a></p>\n\n    </blockquote>\n<p>クライアントサイドでのバンドルにも含まれないんですって！！</p>\n\n</div>"
}
