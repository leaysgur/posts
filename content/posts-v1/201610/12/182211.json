{
  "title": "Pug（元 Jade）で include と filter をあわせて使うには",
  "html": "<p>Pugです。</p><p>個人的には好きじゃないです。<br />\n<br />\n</p>\n\n<div class=\"section\">\n    <h3>include</h3>\n    <pre class=\"code lang-javascript\" data-lang=\"javascript\" data-unlink><span class=\"synComment\">// foo.js</span>\n(<span class=\"synIdentifier\">function</span>() <span class=\"synIdentifier\">{</span>\n  <span class=\"synIdentifier\">var</span> foo = 1;\n  console.log(foo);\n<span class=\"synIdentifier\">}</span>());\n</pre><p>たとえばこんな`foo.js`があったとすると、こんなことができます。</p>\n<pre class=\"code\" data-lang=\"\" data-unlink>//- index.jade\nscript\n  include ./foo.js</pre><p>↓</p>\n<pre class=\"code lang-html\" data-lang=\"html\" data-unlink><span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">script</span><span class=\"synIdentifier\">&gt;</span>\n<span class=\"synComment\">// foo.js</span>\n(<span class=\"synIdentifier\">function</span>()<span class=\"synSpecial\"> </span><span class=\"synIdentifier\">{</span>\n<span class=\"synSpecial\">  </span><span class=\"synIdentifier\">var</span><span class=\"synSpecial\"> foo = </span>1<span class=\"synSpecial\">;</span>\n<span class=\"synSpecial\">  console.log</span>(<span class=\"synSpecial\">foo</span>)<span class=\"synSpecial\">;</span>\n<span class=\"synIdentifier\">}</span>())<span class=\"synSpecial\">;</span>\n<span class=\"synIdentifier\">&lt;/</span><span class=\"synStatement\">script</span><span class=\"synIdentifier\">&gt;</span>\n</pre><p>闇魔術かと思いました。<br />\n<br />\n</p>\n\n</div>\n<div class=\"section\">\n    <h3>filter</h3>\n    <p>で、これにさらに。</p>\n<pre class=\"code\" data-lang=\"\" data-unlink>npm i jstransformer-uglify-js</pre><p>した上で、</p>\n<pre class=\"code\" data-lang=\"\" data-unlink>//- index.jade\nscript\n  include:uglify-js ./foo.js</pre><p>とかすると、</p>\n<pre class=\"code lang-html\" data-lang=\"html\" data-unlink><span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">script</span><span class=\"synIdentifier\">&gt;</span>\n(<span class=\"synIdentifier\">function</span>()<span class=\"synSpecial\"> </span><span class=\"synIdentifier\">{var</span><span class=\"synSpecial\"> o = </span>1<span class=\"synSpecial\">;console.log</span>(<span class=\"synSpecial\">o</span>)<span class=\"synSpecial\">;</span><span class=\"synIdentifier\">}</span>())<span class=\"synSpecial\">;</span>\n<span class=\"synIdentifier\">&lt;/</span><span class=\"synStatement\">script</span><span class=\"synIdentifier\">&gt;</span>\n</pre><p>って感じになる。</p>\n\n</div>\n<div class=\"section\">\n    <h3>間違った書き方</h3>\n    <pre class=\"code\" data-lang=\"\" data-unlink>//- ダメ\nscript\n  :uglify-js\n    include ./foo.js\n    include ./bar.js\n\n//- ダメ\nscript:uglify-js\n  include ./foo.js\n  include ./bar.js\n\n// 正しい\nscript\n  include:uglify-js ./foo.js\n  include:uglify-js ./bar.js</pre><p>あーやだやだ。</p>\n\n</div>"
}
