{
  "title": "Node学園 23時限目 に行ってきたメモ #tng23",
  "html": "<p>渋谷かと思ってたら東京だった回！<br />\n<br />\n</p>\n\n<div class=\"section\">\n    <h3>「npm v4/v5/next」 by @othiym23</h3>\n    \n    <blockquote>\n        <p><a href=\"https://gist.github.com/othiym23/c98bd4ef5d9fb3f496835bd481ef40ae\">node-gakuen-201610.md &middot; GitHub</a></p>\n\n    </blockquote>\n<p>これは事前に共有してもらえた<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%A5%B9%A5%AF%A5%EA%A5%D7%A5%C8\">スクリプト</a>です。<br />\nほぼこれの通りに話されてたので、ざっくりメモ。</p>\n\n<div class=\"section\">\n    <h4>自己紹介</h4>\n    \n<ul>\n<li>npmの<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/CLI\">CLI</a>チームのリーダーです</li>\n<li>チームにはKatと<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/Rebecca\">Rebecca</a>がいるよ\n<ul>\n<li>ありがとう @watilde さん!</li>\n</ul></li>\n</ul>\n</div>\n<div class=\"section\">\n    <h4>npmのいままで</h4>\n    \n<ul>\n<li>今やmillions of users, over 350,000 packagesな大プロジェクト</li>\n<li>なので機能追加は慎重にやっていく\n<ul>\n<li>SemVerはある種の契約</li>\n</ul></li>\n<li>npm@2からnpm@3\n<ul>\n<li>まさにメジャーアップデートだった</li>\n<li>でもいまだにnpm@2を使ってる人もいる</li>\n<li>npm@2のほうがインストールが早いケースもある</li>\n</ul></li>\n</ul>\n</div>\n<div class=\"section\">\n    <h4>npm@4</h4>\n    \n<ul>\n<li>メジャーアップデートではあるがそんなに変わらないかも</li>\n<li>depricatedになるものがいろいろ\n<ul>\n<li>変更点は↑のGistをどうぞ</li>\n</ul></li>\n<li>npm searchがStreamになるのでちょっぱやに\n<ul>\n<li>今までは10MBくらいある<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/json\">json</a>を取りに行ってた</li>\n</ul></li>\n</ul>\n</div>\n<div class=\"section\">\n    <h4>npm shrinkwrap</h4>\n    \n<ul>\n<li>使ってる人ー？　会場「ぱらぱら・・」</li>\n</ul>\n</div>\n<div class=\"section\">\n    <h4>パッケージマネージャについて</h4>\n    \n<ul>\n<li><a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/Ruby\">Ruby</a>ならBundler</li>\n<li>RustならCargo</li>\n<li>インストール結果を保証したい\n<ul>\n<li>インストールするタイミングで結果が変わる</li>\n<li>そうならないために、lock fileを作ることがおおい</li>\n</ul></li>\n<li>Bundlerは\n<ul>\n<li>Gemfile / Gemfile.lock</li>\n<li>lockは<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/flat\">flat</a> only</li>\n</ul></li>\n<li>Cargoは\n<ul>\n<li>Cargo.toml / Cargo.lock</li>\n<li>lockはネストできる</li>\n</ul></li>\n<li>yarnは\n<ul>\n<li>package.<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/json\">json</a> / yarn.lock</li>\n<li>ライブラリ向けにネストもできるし、クライアント向けに<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/flat\">flat</a>にもできる</li>\n</ul></li>\n</ul>\n</div>\n<div class=\"section\">\n    <h4>shrinkwrap</h4>\n    \n<ul>\n<li><a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%B8%E5%CA%FD%B8%DF%B4%B9\">後方互換</a>性のために</li>\n<li>metadataをもてるように</li>\n<li>もう少しhackしやすい仕組みにしたい</li>\n</ul>\n</div>\n<div class=\"section\">\n    <h4>パフォーマンス改善</h4>\n    \n<ul>\n<li>content-addressable cacheなる仕組み\n<ul>\n<li>ローカルにあるものはサーバーに取りに行かない</li>\n</ul></li>\n</ul>\n</div>\n<div class=\"section\">\n    <h4>npm@5</h4>\n    \n<ul>\n<li>NodeのLTSとnpmのLTS</li>\n<li>2017/04には出したい</li>\n<li>Nodeのv8に入る？ > まだわからない</li>\n</ul>\n</div>\n</div>\n<div class=\"section\">\n    <h3>「GraphQLの話」 by @KOBA789</h3>\n    \n<div class=\"section\">\n    <h4>自己紹介</h4>\n    \n<ul>\n<li>GraphQL知ってる人ー？ > 会場「結構いる」</li>\n<li>書いたことある人ー？ > 会場「ぱらぱら・・」</li>\n<li><a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/SQL\">SQL</a>の親戚みたいに思ってた人ー？ > 会場「ぱらぱら・・」 ですよねー</li>\n<li>質問もってきた人ー？ > 会場「ぱらぱら・・」 ヒッ</li>\n<li>中学2年からNodeの本を書いてた！</li>\n</ul>\n</div>\n<div class=\"section\">\n    <h4>RESTful <a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/API\">API</a>とは</h4>\n    \n<ul>\n<li><a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/SQL\">SQL</a>をそのままパラメータにするみたいなことではない</li>\n<li>直感的に設計できない</li>\n<li>Swaggerでドキュメント・・？</li>\n</ul>\n</div>\n<div class=\"section\">\n    <h4>フロントエンドのつらみ</h4>\n    \n<ul>\n<li>もはやフロントエンドはただのViewではなく、サービスを構成するMicroServiceの1つ・・！</li>\n<li>他のMicroServiceたち（サーバーサイド）に比べると遠い（1RTTが重い\n<ul>\n<li>から1リクエストでなんとかしたい</li>\n</ul></li>\n<li>UIなので非合理的な要求が多い\n<ul>\n<li>コメントは3件だけとか</li>\n</ul></li>\n<li>でもでも細かい指定はしたい\n<ul>\n<li>やっぱ10件にしてとか言われるから</li>\n</ul></li>\n<li><a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%A5%AA%A1%BC%A5%B1%A5%B9%A5%C8%A5%EC%A1%BC%A5%B7%A5%E7%A5%F3\">オーケストレーション</a>層を置けばいいのでは！（2層式や！\n<ul>\n<li>全て解決できるわけではない</li>\n</ul></li>\n<li>そこでGraphQL</li>\n</ul>\n</div>\n<div class=\"section\">\n    <h4>GraphQL</h4>\n    \n<ul>\n<li>ほしいのはテーブルではなくグラフ</li>\n<li>デモ\n<ul>\n<li><a href=\"https://github.com/graphql/graphiql\">https://github.com/graphql/graphiql</a> というツールが</li>\n<li>型付きなので補完が出るよ、いわんやドキュメントに</li>\n</ul></li>\n<li>まぁFalcorとかと一緒でサーバーサイドで受けるクエリと返すものの定義は必要</li>\n<li>JOINの多いサービスに向いてるかも\n<ul>\n<li>ただしN+1問題は普通に起きる</li>\n</ul></li>\n<li><a href=\"https://github.com/calebmer/postgraphql\">GitHub - calebmer/postgraphql: A GraphQL API created by reflection over a PostgreSQL schema.</a>より良い感じのつくってるよ</li>\n</ul>\n</div>\n<div class=\"section\">\n    <h4>まとめ</h4>\n    \n<ul>\n<li>RESTful以外にも<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/API\">API</a>設計のやり方はあるよ</li>\n<li>GraphQLが全てでもない</li>\n<li>これからの分野なので、もっと語っていきたい</li>\n</ul>\n</div>\n</div>\n<div class=\"section\">\n    <h3>「Webのネイティブ広告の話（仮）」 by @saneyuki_s</h3>\n    \n    <blockquote>\n        <p><a href=\"https://speakerdeck.com/saneyuki/client-side-js-for-infeed-layout-native-ad-at-fluct-ssp\">Client-side JS for infeed layout native ad at fluct SSP // Speaker Deck</a></p>\n\n    </blockquote>\n<p>Node学園祭のCFP落ちたのでお焚きあげだそうな。</p>\n\n<div class=\"section\">\n    <h4>はじめに</h4>\n    \n<ul>\n<li>話さないこと\n<ul>\n<li><a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/Adblock\">Adblock</a>とかWebの未来とか</li>\n<li>俺が考えた最強のxxとか</li>\n</ul></li>\n<li>広告枠の枠についての話をします\n<ul>\n<li><a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/SSP\">SSP</a>(Supply Side Platform)という業種だそうな</li>\n</ul></li>\n<li><a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/DSP\">DSP</a>との違いは、オークションしないか</li>\n<li>そんな<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/DSP\">DSP</a>やAd networkから広告をもらって、それを配信する</li>\n<li>広告の配信方法\n<ul>\n<li><a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/SDK\">SDK</a>を配るスタイル</li>\n<li>タグを配るスタイル （こっち</li>\n</ul></li>\n</ul>\n</div>\n<div class=\"section\">\n    <h4><a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%A5%C7%A5%D5%A5%A1%A5%AF%A5%C8\">デファクト</a></h4>\n    \n<ul>\n<li>いちおうルールがある</li>\n<li>OpenRTB<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%A5%D7%A5%ED%A5%C8%A5%B3%A5%EB\">プロトコル</a>\n<ul>\n<li>ザルな仕様・・</li>\n<li>誤字だらけのドキュメント・・</li>\n</ul></li>\n<li><a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/DSP\">DSP</a>は任意のjsを埋め込めるようになってる\n<ul>\n<li>＼document.write()／</li>\n</ul></li>\n<li>使いたくないけど儲かる<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/DSP\">DSP</a>なので使わざるを得なかったりと・・</li>\n</ul>\n</div>\n<div class=\"section\">\n    <h4>広告が表示されるまで</h4>\n    \n<ul>\n<li>ページ読み込み</li>\n<li><a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/SSP\">SSP</a>のサーバーへ`script`からリクエスト</li>\n<li>オークションして広告を決めて返す</li>\n<li>うまくいったらそのまま出す</li>\n<li>ダメなら各自で広告を取りに</li>\n<li>いったんadServerでjsを解析しないといけない\n<ul>\n<li>愚直に評価すると<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/XSS\">XSS</a>されちゃう</li>\n<li>なのでいったん<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/json\">json</a>にする</li>\n</ul></li>\n</ul>\n</div>\n<div class=\"section\">\n    <h4>昨今のWeb広告</h4>\n    \n<ul>\n<li>パフォーマンスを求められる時代</li>\n<li>同じタグを何個もはられたりする（非同期）ので判別したい\n<ul>\n<li>`document.currentScript`は古い<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/Android\">Android</a>で動かない\n<ul>\n<li>4.xでLegacyとか言われるんか・・</li>\n</ul></li>\n<li>リクエストにidをふる</li>\n</ul></li>\n<li>リトライ用にキューを作って、優先度をみる</li>\n<li>DOMを安全に構築するには？\n<ul>\n<li>単純な文字列連結はダメ</li>\n<li>DOMの<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/API\">API</a>を使ったほうがいいが、そんなライブラリはない・・</li>\n<li>サーバーでやらず、クライアントでやる</li>\n</ul></li>\n</ul>\n</div>\n<div class=\"section\">\n    <h4>クライアントでは</h4>\n    \n<ul>\n<li>サーバーとやりとりするRuntime</li>\n<li>各Ad networkとやりとりするDriver</li>\n<li>基本的に非同期でいろいろやる</li>\n<li>でもモ<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%A5%C0%A5%F3\">ダン</a>なライブラリは容量を食うので使えない\n<ul>\n<li>1kbでも<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%A5%C8%A5%E9%A5%D5%A5%A3%A5%C3%A5%AF\">トラフィック</a>量から見ると重い</li>\n<li>promiseのsimすら使えないので自作</li>\n</ul></li>\n<li>TypeScript target=ES3, modules=<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/AMD\">AMD</a></li>\n</ul>\n</div>\n<div class=\"section\">\n    <h4>その他地雷まとめ</h4>\n    \n<ul>\n<li>`navigator.sendBeacon()`は<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%A5%AF%A5%EA%A5%C6%A5%A3%A5%AB%A5%EB%A5%D1%A5%B9\">クリティカルパス</a>のロード中には使えない</li>\n<li>Legacyな<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/Android\">Android</a>はテストを一気に実行すると落ちる</li>\n<li>独自のキュー機構を作ったのでDOMと食合せが悪い</li>\n</ul>\n</div>\n<div class=\"section\">\n    <h4>これから</h4>\n    \n<ul>\n<li>どんな環境で走ってるのかレポートする仕組みを作り中</li>\n<li>例のキュー機構をリファクタしたい</li>\n<li><a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/OSS\">OSS</a>に・・？\n<ul>\n<li>コード自体を公開してもデメリットにはならない</li>\n</ul></li>\n</ul>\n</div>\n</div>"
}
