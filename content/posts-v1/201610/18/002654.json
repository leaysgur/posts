{
  "title": "SwiftでiOS向け音楽プレーヤーを作るための基礎知識",
  "html": "\n    <blockquote>\n        <p><a href=\"https://github.com/leader22/SimpleMusicPlayer\">GitHub - leader22/SimpleMusicPlayer: SMP!</a></p>\n\n    </blockquote>\n<p><br />\nつい先日こういうのを作ったので。<br />\nせっかく作ったので、覚えてるうちに忘れないようにメモっておこうかと。</p><p>iPhoneのローカルにiTunesから同期したものを再生するための内容で、それ以外のことは書いてないです。<br />\n<br />\n</p>\n\n<div class=\"section\">\n    <h3>流れ</h3>\n    \n<ul>\n<li>プレーヤーを用意する</li>\n<li>プレイリストとなるキューをセット</li>\n<li>再生する曲や再生位置を設定</li>\n<li>再生！</li>\n</ul><p>です。<br />\nこういうまとまった内容が全然見つからなくて、最初は苦労しました。<br />\nドキュメントにもちゃんと体系立てて書いておいてほしいですね・・。</p>\n\n</div>\n<div class=\"section\">\n    <h3>プレーヤー</h3>\n    \n    <blockquote>\n        <p><a href=\"https://developer.apple.com/reference/mediaplayer/mpmusicplayercontroller\">MPMusicPlayerController - MediaPlayer | Apple Developer Documentation</a></p>\n\n    </blockquote>\n<p>これも幾つか種類があります。</p>\n\n<ul>\n<li>MPMusicPlayerController.applicationMusicPlayer</li>\n<li>MPMusicPlayerController.systemMusicPlayer</li>\n</ul><p>基本的にはこのどちらかになるはずで、アプリ内でだけ独立して再生したいなら前者です。</p><p>後者の場合はシステムのプレーヤーになるので、アプリを閉じても再生が続きます。<br />\nロック画面に出るコントローラーともつながってるし、普通に音楽プレーヤーを作るならコレですね。</p>\n\n</div>\n<div class=\"section\">\n    <h3>再生する曲</h3>\n    <p>さて、プレーヤーに再生させたい曲をどうやって調達するか。<br />\niPhoneのローカルに入ってる曲をどうやって引っ張ってくるかです。</p><p>大きくは2つあって、</p>\n\n<ul>\n<li>iOSが持ってるUIを経由して取得</li>\n<li>コードでクエリを自力で書いて取得</li>\n</ul><p>前者は使ってないのでよくわかってないですが、おそらくコレ。</p>\n\n    <blockquote>\n        <p><a href=\"https://developer.apple.com/reference/mediaplayer/mpmediapickercontroller\">MPMediaPickerController - MediaPlayer | Apple Developer Documentation</a></p>\n\n    </blockquote>\n<p>これを使うとそれっぽいViewが立ち上がるはず。<br />\n後者の場合は、コードを自分で書いて取得することになるのですが、コレを使う。</p><p>自由なレイアウトで曲やアルバムを選びたい場合は、実質こっち一択です。</p>\n\n    <blockquote>\n        <p><a href=\"https://developer.apple.com/reference/mediaplayer/mpmediaquery\">MPMediaQuery - MediaPlayer | Apple Developer Documentation</a></p>\n\n    </blockquote>\n<p>コードで見ると、</p>\n<pre class=\"code lang-swift\" data-lang=\"swift\" data-unlink><span class=\"synPreProc\">let</span> <span class=\"synIdentifier\">player</span> <span class=\"synIdentifier\">=</span> MPMusicPlayerController.systemMusicPlayer()\n<span class=\"synPreProc\">let</span> <span class=\"synIdentifier\">query</span>  <span class=\"synIdentifier\">=</span> MPMediaQuery.songsQuery()\n\nplayer.setQueueWithQuery(query)\n</pre><p>こういう感じ。</p>\n\n<ul>\n<li>songsのQuery以外に、albumsのQueryとかもある</li>\n<li>`addFilterPredicate()`なるメソッドで、フィルタを追加したりできる</li>\n</ul><p>なんしかこれで、再生したい曲（1曲かもしれないし、いっぱいあるかもしれない）をプレーヤーに認識させられました。</p>\n\n</div>\n<div class=\"section\">\n    <h3>再生する</h3>\n    <p>ここまでくるとあとは簡単。</p>\n<pre class=\"code lang-swift\" data-lang=\"swift\" data-unlink>player.play()\n</pre><p>イメージ通りですね。<br />\n10曲のアルバムをクエリでセットしてて、2曲目から再生したいみたいな場合は、</p>\n<pre class=\"code lang-swift\" data-lang=\"swift\" data-unlink><span class=\"synComment\">// 2曲目をセットしてから</span>\nplayer.nowPlayingItem <span class=\"synIdentifier\">=</span> query.items<span class=\"synIdentifier\">!</span>[<span class=\"synConstant\">1</span>]\nplayer.play()\n</pre><p>あとのこともコードで。</p>\n<pre class=\"code lang-swift\" data-lang=\"swift\" data-unlink><span class=\"synComment\">// 再生位置</span>\nplayer.currentPlaybackTime <span class=\"synIdentifier\">=</span> <span class=\"synConstant\">3</span>\n\n<span class=\"synComment\">// リピート設定</span>\nplayer.repeatMode <span class=\"synIdentifier\">=</span> .All\n\n<span class=\"synComment\">// シャッフル</span>\nplayer.shuffleMode <span class=\"synIdentifier\">=</span> .Off\n\n<span class=\"synComment\">// 先頭・前・次</span>\nplayer.skipToBeginning()\nplayer.skipToPreviousItem()\nplayer.skipToNextItem()\n</pre><p>再生位置はプレーヤーにあるので、曲を送るのではなく直再生する場合は`0`に戻さないと途中から再生されちゃう。<br />\n<br />\n</p>\n\n</div>\n<div class=\"section\">\n    <h3>そのほか</h3>\n    \n<ul>\n<li>MPMusicPlayerControllerPlaybackStateDidChange </li>\n<li>MPMusicPlayerControllerNowPlayingItemDidChange</li>\n<li>MPMusicPlayerControllerVolumeDidChange</li>\n</ul><p>という3つのイベント通知を受けることができます。</p>\n\n<ul>\n<li>止まった・再生したなどの再生状況</li>\n<li>再生中の曲の状況</li>\n<li>音量の状況</li>\n</ul><p>もちろんこの通知を待たなくても、自分から状況を取りに行くこともできます。<br />\nなんかイベントが挙動不審だみたいな記事を見たような気がしないでもないので、そこは一応・・。<br />\n<br />\n</p>\n\n</div>\n<div class=\"section\">\n    <h3>おわりに</h3>\n    <p>音を出すという意味では、もっとローレベルなクラスもあるっぽいです。</p>\n\n    <blockquote>\n        <p><a href=\"https://developer.apple.com/reference/avfoundation/avaudioplayer\">AVAudioPlayer - AVFoundation | Apple Developer Documentation</a></p>\n\n    </blockquote>\n<p>とりあえずこんなもんかなー。</p>\n\n</div>"
}
