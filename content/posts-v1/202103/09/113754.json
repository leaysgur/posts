{
  "title": "無音を鳴らして自動再生ポリシーをアンロックする",
  "html": "<p>Safariなどのブラウザには、音の自動再生に制限があって、ロード時にいきなり再生！というのがだいたいできない時代。（この制限にはいろいろ条件があるけども）</p><p>そのため、「このサイトでは音が出ます」みたいなモーダルを出して、まずそれをクリックしてもらい、そのタイミングでこの制限を突破するために一手間かけるということが行われてきた。</p><p>で、そのひと手間で盛大に音を鳴らすわけにはいかないので、無音を鳴らすという半ばハック的な方法があるのである。</p><p>その無音の鳴らし方を毎回思い出すのが大変なので、いい加減メモっておく。<br />\n<br />\n</p>\n\n<div class=\"section\">\n    <h3>HTMLAudio</h3>\n    <pre class=\"code lang-javascript\" data-lang=\"javascript\" data-unlink><span class=\"synStatement\">const</span> $audio = <span class=\"synStatement\">new</span> Audio();\n$audio.src = <span class=\"synConstant\">&quot;/sound-of-silence.mp3&quot;</span>;\n\n$audio.play();\n</pre><p>ここでアンロックした`audio`要素を使い続けることが重要で、ReactとかでイミュータブルにやるとなぜかiOSでだけ再生されないみたいな事態になる・・。</p><p>無音の音源は、`ffmpeg`とかで作る。</p>\n<pre class=\"code\" data-lang=\"\" data-unlink>ffmpeg -i anullsrc=r=11025:cl=mono -t 1 -f mp3 -acodec libmp3lame sound-of-silence.mp3</pre>\n</div>\n<div class=\"section\">\n    <h3>WebAudio</h3>\n    <pre class=\"code lang-javascript\" data-lang=\"javascript\" data-unlink><span class=\"synStatement\">const</span> ctx: AudioContext = <span class=\"synStatement\">new</span> (<span class=\"synStatement\">typeof</span> AudioContext !== <span class=\"synConstant\">&quot;undefined&quot;</span>\n  ? AudioContext\n  : webkitAudioContext)();\n\n<span class=\"synStatement\">const</span> source = ctx.createBufferSource();\nsource.connect(ctx.destination);\n\nsource.buffer = ctx.createBuffer(1, 1, 22050);\nsource.onended = () =&gt; source.disconnect(0);\n\nsource.start(0);\n</pre><p>そろそろプレフィックスはいらなくなるけど、まあ念のため・・。</p>\n\n</div>\n<div class=\"section\">\n    <h3>WebRTC</h3>\n    \n    <blockquote>\n        <p>MediaStream-backed media will autoplay if the web page is already capturing.<br />\nMediaStream-backed media will autoplay if the web page is already playing audio. A user gesture will still be required to initiate audio playback.<br />\n<a href=\"https://webkit.org/blog/7763/a-closer-look-into-webrtc/\">https://webkit.org/blog/7763/a-closer-look-into-webrtc/</a></p>\n\n    </blockquote>\n<p>なので、事前に`getUserMedia()`しておくか、何かしらの方法で音を出しておけばいいらしい。</p><p>後者の英語がいまいちしっくりきてないけど、たぶん「何かしらのユーザーアクション経由で、既に音が出てる状態であれば」ってことかね。</p>\n\n</div>"
}
