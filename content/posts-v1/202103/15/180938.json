{
  "title": "preventDefault()ではなく、touch-actionを使う",
  "html": "\n<ul>\n<li>たとえばカ<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%A5%EB%A1%BC%A5%BB%A5%EB\">ルーセル</a>とか</li>\n<li>たとえば<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/canvas\">canvas</a>のお絵かきツールとか</li>\n</ul><p>ユーザーがページ内の特定の領域をドラッグ操作するなにかを実装するときの話。</p><p>それを実装してて誰しもがハマるのが、ユーザーがその領域を触ってるときにページ全体がスクロールされちゃったりするというもの。</p><p>で、これを防ぐための方法について。<br />\n<br />\n<br />\n</p>\n\n<div class=\"section\">\n    <h3>ev.preventDefault()</h3>\n    <p>古から伝わる方法で、今までずっとこうしてた。</p><p>`touchstart`とか`touchmove`とか、ユーザーが画面に触れている間、`preventDefault()`でキャンセルする。</p><p>たしかにコレで目的は達成できるけど、いくつかの面で不都合がある。</p>\n\n<ul>\n<li>パフォーマンスが悪い\n<ul>\n<li>できれば`passive: true`にしたいくらいなのに</li>\n</ul></li>\n<li>そのコンテナの配下の要素で、`click`イベントが使えない\n<ul>\n<li>`touchstart`などでイベントをキャンセルすると、後続のイベントがキャンセルされる仕様らしい</li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Touch_events/Supporting_both_TouchEvent_and_MouseEvent#event_order\">https://developer.mozilla.org/en-US/docs/Web/API/Touch_events/Supporting_both_TouchEvent_and_MouseEvent#event_order</a></li>\n</ul></li>\n</ul><p>そういうわけなので、この用途において`preventDefault()`はもはや適切な解決策ではないということ。</p>\n\n</div>\n<div class=\"section\">\n    <h3><a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/CSS\">CSS</a>: touch-action</h3>\n    \n    <blockquote>\n        <p><a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/touch-action\">touch-action - CSS: Cascading Style Sheets | MDN</a></p>\n\n    </blockquote>\n<p>そこで使うのが、<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/CSS\">CSS</a>の`touch-action`プロパティ。</p><p>たとえば`touch-action: none`と指定すると、端的にいうとその要素をタッチ端末で触れなくなる。<br />\n（正確にはこの挙動は許可する、これは許可しないのように選べる）</p><p>なので<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/JavaScript\">JavaScript</a>で制御して、ドラッグやらピンチインやら操作したい要素には、決まってこのプロパティを指定すべし。</p>\n\n    <blockquote>\n        <p><a href=\"https://caniuse.com/css-touch-action\">Can I use... Support tables for HTML5, CSS3, etc</a></p>\n\n    </blockquote>\n<p>ということを、流行りの<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%A5%B8%A5%A7%A5%B9%A5%C1%A5%E3%A1%BC\">ジェスチャー</a>系のライブラリのコードを読んでて知ったのでした。</p>\n\n<ul>\n<li><a href=\"https://github.com/taye/interact.js/\">https://github.com/taye/interact.js/</a></li>\n<li><a href=\"https://github.com/pmndrs/react-use-gesture\">https://github.com/pmndrs/react-use-gesture</a></li>\n</ul>\n<div class=\"section\">\n    <h4>余談</h4>\n    \n    <blockquote>\n        <p><a href=\"https://lealog.hateblo.jp/entry/2015/02/19/124748\">html { touch-action: none; } &#x306B;&#x6F5C;&#x3080;&#x7F60; - console.lealog();</a></p>\n\n    </blockquote>\n<p>5年前に自分がハマってて、何に使うんかわからんって言ってた。</p><p>今ならわかる・・このために使うんやと・・。嗚呼。</p>\n\n</div>\n</div>"
}
