{
  "title": "慣性ドラッグの慣性のところだけを実装したライブラリ",
  "html": "<p>作った。</p><p>いわゆるGoogleMapのようなものを作りたい場合に使えるやつ。</p><p>まあだいたいはDOMイベントまわりまで面倒みてくれるライブラリを使う事が多いとは思うけど、そのすべてを自作しないといいけない場合、こういう部品だけがあるのも便利かと思い。</p>\n\n    <blockquote>\n        <p><a href=\"https://github.com/leader22/inertia-state\">GitHub - leader22/inertia-state</a></p>\n\n    </blockquote>\n\n<div class=\"section\">\n    <h3>Moment of inertia</h3>\n    <p>物理学的な難しいことはわからないけども、今回の実装としてはこんな感じになってる。</p>\n\n<ul>\n<li>スイッチオン</li>\n<li>線形に増えたり減ったりする移動量をインプット</li>\n<li>スイッチオフ</li>\n<li>すると、その時点までで貯められていた力を、徐々に摩擦で減らしながらイベント発火</li>\n</ul><p>たとえば`touchstart`でスイッチオンして、`touchmove`の間に力を溜める、`touchend`で解放！という感じの使い方。</p>\n<pre class=\"code lang-javascript\" data-lang=\"javascript\" data-unlink><span class=\"synStatement\">const</span> iState = <span class=\"synStatement\">new</span> InertiaState();\n\n$box.addEventListener(<span class=\"synConstant\">&quot;pointerdown&quot;</span>, (<span class=\"synIdentifier\">{</span> clientX, clientY <span class=\"synIdentifier\">}</span>) =&gt; <span class=\"synIdentifier\">{</span>\n  iState.start(<span class=\"synIdentifier\">[</span>clientX, clientY<span class=\"synIdentifier\">]</span>);\n<span class=\"synIdentifier\">}</span>);\n$box.addEventListener(<span class=\"synConstant\">&quot;pointermove&quot;</span>, (<span class=\"synIdentifier\">{</span> clientX, clientY <span class=\"synIdentifier\">}</span>) =&gt; <span class=\"synIdentifier\">{</span>\n  iState.update(<span class=\"synIdentifier\">[</span>clientX, clientY<span class=\"synIdentifier\">]</span>);\n<span class=\"synIdentifier\">}</span>);\n$box.addEventListener(<span class=\"synConstant\">&quot;pointerup&quot;</span>, () =&gt; <span class=\"synIdentifier\">{</span>\n  iState.stop();\n<span class=\"synIdentifier\">}</span>);\n\niState.addCallback((ev) =&gt; <span class=\"synIdentifier\">{</span>\n  state.position<span class=\"synIdentifier\">[</span>0<span class=\"synIdentifier\">]</span> += ev.delta<span class=\"synIdentifier\">[</span>0<span class=\"synIdentifier\">]</span>;\n  state.position<span class=\"synIdentifier\">[</span>1<span class=\"synIdentifier\">]</span> += ev.delta<span class=\"synIdentifier\">[</span>1<span class=\"synIdentifier\">]</span>;\n<span class=\"synIdentifier\">}</span>);\n\n<span class=\"synComment\">// iState.reset();</span>\n</pre><p>コードとしてはNodeでもどこでも動くように書いてあるので、タッチイベントでなくともどんなインプットでも取れるようになってる。（使いみちがあるかは思いつかなかったけども）</p><p>コンスト<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%A5%E9%A5%AF\">ラク</a>タ引数で摩擦係数を指定できるようにしてあって、基本的には`1`以下の値を指定する。</p><p>これを`1`以上にしちゃうと、永遠に勢いが減衰しなくて、無限にスーって飛んでいっておもしろかった・・ｗ</p>\n\n</div>\n<div class=\"section\">\n    <h3>Special thanks</h3>\n    <p>元ネタ: <a href=\"https://github.com/yomotsu/inertia-drag\">https://github.com/yomotsu/inertia-drag</a></p><p>さすがおれたちのよもさま。</p>\n\n</div>"
}
