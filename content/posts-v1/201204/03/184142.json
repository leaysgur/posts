{
  "title": "JavaScriptのクロージャについて",
  "html": "<p>独学でプログラミングを学ぶにあたって一番困るのは、本やネットのサンプルを一体どの場面でどんな風に使うかが全くわからない点かと思ってます。</p><p>何が嬉しくて「動物クラスを作ってワンワンする」のか。<br />\n何のために「フィボナッチ数を計算する」関数を作るのか・・。</p><p>「仕組みとしてこういうものがある」というのはわかるものの、具体例が具体的じゃないせいで理解できない。<br />\nそして、独学なので質問できる相手がいない。<br />\n以下略。</p><p>という葛藤の中、個人的に理解に苦しんでいる「クロージャ」についての理解の現状をメモ。<br />\n単語ばっかりよく聞くけど、今までずっと正体不明だったので。</p>\n\n<div class=\"seemore\">\n    \n<div class=\"section\">\n    <h3>はじめに</h3>\n    \n<div class=\"section\">\n    <h4>いきなりの結論</h4>\n    <p>はじめに、いろいろ調べまくった結果、一番わかりやすかった記事を。</p>\n\n    <blockquote>\n        <p>参考：<a href=\"http://howtonode.org/why-use-closure\" target=\"_blank\">Why use &quot;closure&quot;? - How To Node - NodeJS</a></p>\n\n    </blockquote>\n<p>英語やけども、一番腑に落ちました。</p><p>どうやらクロージャとは、「状態を保持」する関数のことらしい。</p>\n\n    <blockquote>\n        <p>原文:<br />\nA closure is a function defined within another scope<br />\nthat has access to all the variables within the outer scope.<br />\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~<br />\n意訳:<br />\nクロージャは、別のスコープを内包した関数である。<br />\n内包されたスコープからは、クロージャ内の全ての変数にアクセスできる。</p>\n\n    </blockquote>\n\n</div>\n</div>\n<div class=\"section\">\n    <h3>状態を保持？</h3>\n    \n    <pre class=\"code lang-javascript\" data-lang=\"javascript\" data-unlink>var countUp = function(){\n  var i = 1;\n  return function(){\n    alert(i);\n    i++;\n  };\n};\n\nvar func = countUp();\n\nfunc(); // 1\nfunc(); // 2\nfunc(); // 3</pre>\n<p>funcにカウントが保持されて、呼び出す度に数が増えていく。<br />\n関数に関数を内包することによって、状態を保持する仕組み。</p>\n\n<div class=\"section\">\n    <h4>でもこれって</h4>\n    \n    <pre class=\"code lang-javascript\" data-lang=\"javascript\" data-unlink>var i = 1;\nvar countUp2 = function(){\n  alert(i);\n  i++;\n};\n\nvar func = countUp2();\n\nfunc(); // 1\nfunc(); // 2\nfunc(); // 3</pre>\n<p>単のカウントアップする関数なら、こういう書き方でも同じことはできますよね。<br />\n違うところは色々あるけども。<br />\nその違うところが、クロージャの本質であるはず。</p>\n\n</div>\n</div>\n<div class=\"section\">\n    <h3>クロージャたる所以</h3>\n    \n    <blockquote>\n        <p>参考：<a href=\"http://builder.japan.zdnet.com/script/sp_javascript-kickstart-2007/20378258/3/\" target=\"_blank\">JavaScriptクロージャを完全理解！スコープチェインを知る（後編） - page3 - builder</a></p>\n\n    </blockquote>\n<p>この記事の中に、こう書かれてます。</p>\n\n    <blockquote>\n        <p>例えば、「クロージャから、元になる関数内のローカル変数への参照は、確実に存在するけれども『目に見えない』」という特徴は良く利用されます。</p>\n\n    </blockquote>\n<p>ふむ。</p>\n\n    <pre class=\"code lang-javascript\" data-lang=\"javascript\" data-unlink>function Human(name, age) {\n  this.getName = function() {\n    return name;\n  };\n\n  this.getAge = function() {\n    return age;\n  };\n}\n\nvar shiraishi = new Human(&#34;shiraishi&#34;, 30);\n\nalert(shiraishi.getName() + &#34;:&#34; + shiraishi.getAge()); // shiraishi:30</pre>\n<p>ふむふむ。<br />\nただこれも、</p>\n\n    <pre class=\"code lang-javascript\" data-lang=\"javascript\" data-unlink>function Human2(name, age){\n  this.name = name;\n  this.age = age;\n}\n\nvar foo = new Human2(&#34;foo&#34;, 25);\n\nalert(foo.name + &#34;:&#34; + foo.age); // foo:25</pre>\n<p>違ってくるポイントは・・。</p>\n\n    <blockquote>\n        <p>クロージャ：Closure<br />\n【不可算名詞】 [具体的には 【可算名詞】] 閉鎖; 締め切り; 閉店，休業; 終止，終結.</p>\n\n    </blockquote>\n<p>「閉鎖された」というのがミソですね。</p>\n\n<div class=\"section\">\n    <h4>単純に参照できない</h4>\n    \n    <pre class=\"code lang-javascript\" data-lang=\"javascript\" data-unlink>shiraishi.name; // undifined\nfoo.name; // foo</pre>\n<p>参照するには、</p>\n\n    <pre class=\"code lang-javascript\" data-lang=\"javascript\" data-unlink>shiraishi.getName(); // shiraishi</pre>\n<p>こうすればいけるよね？<br />\n否、こうするしかない。</p>\n\n</div>\n<div class=\"section\">\n    <h4>値の書き換えができない</h4>\n    \n    <pre class=\"code lang-javascript\" data-lang=\"javascript\" data-unlink>shiraishi.name = &#34;nyaaaa&#34;; // アクセスできないので書き換えできない\n\nfoo.name = &#34;nyaaaa&#34;; // 書き換えできちゃう</pre>\n<p>前者で値を書き換えたい場合は、それ用の関数を用意する必要がある、と。</p>\n\n</div>\n<div class=\"section\">\n    <h4>本来はステートレス</h4>\n    <p>っていう言い回しが正しいかはわからんけどｗ<br />\n本来は関数でも変数でも何でも、自由なタイミングで自由に書き換えたり代入されたりするもの。<br />\nRESTみたいにそれ自体が「状態を保持」することは有り得ない中で、クロージャだとそれができる、と。<br />\n一旦作成したオブジェクトが、「状態を保持」してるとはこういう意味なのかなーと。</p>\n\n</div>\n</div>\n<div class=\"section\">\n    <h3><a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%A5%AA%A5%D6%A5%B8%A5%A7%A5%AF%A5%C8%BB%D8%B8%FE\">オブジェクト指向</a>のためのクロージャ</h3>\n    <p>こういうの<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%A5%AB%A5%D7%A5%BB%A5%EB%B2%BD\">カプセル化</a>って言うんやっけ？<br />\n定義した関数なりクラスなり、綺麗なコードを書く(保守性の高いコード、隠蔽されるべき情報が隠蔽されてる・・とか色々)ためのやり方として、クロージャってのが<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/JavaScript\">JavaScript</a>にはある、と。</p><p>実際の使い所は？と言われると結局わからないままやけども、そういう感覚は実務で持って知るしかないと思うので、現時点ではどうしようもないか。<br />\nただ、<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/JavaScript\">JavaScript</a>でいうところのクロージャは、<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%A5%AA%A5%D6%A5%B8%A5%A7%A5%AF%A5%C8%BB%D8%B8%FE\">オブジェクト指向</a>を実現するためのコアであることは確かで、コードとして「あるべき姿」を実現するためには必須な書き方、ということかなぁ。</p>\n\n</div>\n<div class=\"section\">\n    <h3>次に勉強するもの</h3>\n    <p>ほんとに一応ではあるものの、<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/jQuery\">jQuery</a>やらDOM周りからの<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/JavaScript\">JavaScript</a>はわかってきた気がするので、次はcallとかprototypeとか、<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%A5%D7%A5%ED%A5%B0%A5%E9%A5%DF%A5%F3%A5%B0%B8%C0%B8%EC\">プログラミング言語</a>としての<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/JavaScript\">JavaScript</a>を勉強しよう。</p>\n\n</div>\n</div>"
}
