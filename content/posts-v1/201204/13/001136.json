{
  "title": "また、はてな教科書のJavaScript課題をやってみた",
  "html": "<p>昨日に引き続き。</p>\n\n    <blockquote>\n        <p>参考：<a href=\"https://github.com/hatena/Hatena-Textbook/blob/master/javascript-event-driven.md\" target=\"_blank\" title=\"Hatena-Textbook/javascript-event-driven.md at master · hatena/Hatena-Textbook · GitHub\">Hatena-Textbook/javascript-event-driven.md at master · hatena/Hatena-Textbook · GitHub</a></p>\n\n    </blockquote>\n<p>今回のお題は、</p>\n\n    <blockquote>\n        \n<ul>\n<li>その場編集機能を作れ\n<ul>\n<li>要素の作成、追加、削除</li>\n<li>こまめなフィードバックでストレスを感じさせないように</li>\n<li>その場編集用 API の設計 jQuery、Ten といったフレームワークを使ってもよい</li>\n</ul></li>\n</ul>\n    </blockquote>\n<p>今回は一応できた、のかな？</p>\n\n<div class=\"seemore\">\n    \n<div class=\"section\">\n    <h3>書いたコード</h3>\n    <p><script type=\"text/javascript\" src=\"http://jsdo.it/blogparts/4ws0/js?view=design\"></script><p class=\"ttlBpJsdoit\" style=\"width: 465px; margin: 0; text-align: right; font-size: 11px;\"><a href=\"http://jsdo.it/leader22/4ws0\" title=\"簡単な「その場編集」機能\">簡単な「その場編集」機能 - jsdo.it - share JavaScript, HTML5 and CSS</a></p></p>\n\n<div class=\"section\">\n    <h4>JavaScript抜粋</h4>\n    \n    <pre class=\"code lang-javascript\" data-lang=\"javascript\" data-unlink>(function() {\n\tvar realtimeEdit = {\n\t\tcontainer: $(&#39;.container&#39;),\n\t\tinit: function() {\n\t\t\t$(&#39;&lt;button&gt;&#39;, {\n\t\t\t\ttext: &#39;Edit&#39;,\n\t\t\t\tclass: &#39;btn edt&#39;\n\t\t\t}).appendTo(this.container).css(&#39;float&#39;, &#39;right&#39;).hide();\n\t\t\t$(&#39;&lt;button&gt;&#39;, {\n\t\t\t\ttext: &#39;Complete&#39;,\n\t\t\t\tclass: &#39;btn cmp&#39;\n\t\t\t}).appendTo(this.container).css(&#39;float&#39;, &#39;right&#39;).hide();\n\t\t},\n\t\tedit: function() {\n\t\t\tvar btn = $(this).removeClass(&#39;edt&#39;).hide();\n\t\t\tbtn.next().show();\n\t\t\tvar tgtTitle = btn.parent().find(&#39;h2&#39;);\n\t\t\tvar oldTitle = tgtTitle.text();\n\t\t\tvar newTitle = $(&#39;&lt;input&gt;&#39;, {\n\t\t\t\ttype: &#39;text&#39;,\n\t\t\t\tvalue: oldTitle,\n\t\t\t\tclass: &#39;h2&#39;\n\t\t\t});\n\t\t\ttgtTitle.html(newTitle);\n\t\t\tvar tgtText = btn.parent().find(&#39;p&#39;);\n\t\t\tvar oldText = tgtText.text();\n\t\t\tvar newText = $(&#39;&lt;textarea&gt;&#39;, {\n\t\t\t\tvalue: oldText,\n\t\t\t\tclass: &#39;p&#39;\n\t\t\t});\n\t\t\ttgtText.html(newText);\n\t\t},\n\t\tcomplete: function() {\n\t\t\tvar btn = $(this).hide();\n\t\t\tbtn.prev().addClass(&#39;edt&#39;);\n\t\t\tvar tgtTitle = btn.parent().find(&#39;input.h2&#39;);\n\t\t\tvar oldTitle = tgtTitle.val();\n\t\t\tvar newTitle = $(&#39;&lt;h2&gt;&#39;, {\n\t\t\t\ttext: oldTitle\n\t\t\t});\n\t\t\ttgtTitle.parent().replaceWith(newTitle);\n\t\t\tvar tgtText = btn.parent().find(&#39;textarea.p&#39;);\n\t\t\tvar oldText = tgtText.val();\n\t\t\tvar newText = $(&#39;&lt;p&gt;&#39;, {\n\t\t\t\ttext: oldText\n\t\t\t});\n\t\t\ttgtText.parent().replaceWith(newText);\n\t\t\tvar dateObj = new Date();\n\t\t\tvar edited = &#34;Posted at &#34; + dateObj.getHours() + &#34;:&#34; + dateObj.getMinutes();\n\t\t\tbtn.parent().find(&#39;small&#39;).text(edited);\n\t\t}\n\t};\n\n\trealtimeEdit.init();\n\trealtimeEdit.container.on(&#39;mouseover&#39;, function() {\n\t\t$(this).find(&#39;.btn.edt&#39;).show();\n\t});\n\trealtimeEdit.container.on(&#39;mouseout&#39;, function() {\n\t\t$(this).find(&#39;.btn.edt&#39;).hide();\n\t});\n\trealtimeEdit.container.find(&#39;.btn.edt&#39;).on(&#39;click&#39;, realtimeEdit.edit);\n\trealtimeEdit.container.find(&#39;.btn.cmp&#39;).on(&#39;click&#39;, realtimeEdit.complete);\n}());</pre>\n\n</div>\n</div>\n<div class=\"section\">\n    <h3>反省点</h3>\n    \n<div class=\"section\">\n    <h4>編集できる範囲に制限がありすぎる。</h4>\n    <p>タイトルと、本文それぞれ1タグしか編集できない・・。<br />\nWordPressとかすごいんやなぁ・・って自分で実装してみて思う。</p>\n\n</div>\n<div class=\"section\">\n    <h4>やっぱり設計がわからない。</h4>\n    <p>最初に変数一個作ってそこで組んでいくとか、最初から関数を用意してやるとか、どこからどこまでがプロトタイプで拡張するとか、そういう勘所がまだまだわかりません。<br />\nほんとどっかにお師匠さま・・。</p>\n\n</div>\n<div class=\"section\">\n    <h4>なんだか気持ち悪い</h4>\n    <p>機能別に関数を分けて定義するとか、見た目と裏の動きはそれぞれ分けるとか、それらしくやったつもりではいるものの、本当に良いのかどうとかわかりゃんせん！<br />\nというかボタンにつけたクラス名で色々判別するのってどうなんやろう。</p>\n\n</div>\n</div>\n</div>"
}
