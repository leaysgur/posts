{
  "title": "LeetCodeのEasyな問題をぜんぶRustで解こうとしていた",
  "html": "<p>けど、ここ最近あまり意義を感じていないことに気がついたので、<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%A5%AD%A5%EA%C8%D6\">キリ番</a>になった記念にやめることにした。</p><p><blockquote data-conversation=\"none\" class=\"twitter-tweet\" data-lang=\"ja\"><p lang=\"ja\" dir=\"ltr\"><a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%A5%AD%A5%EA%C8%D6\">キリ番</a>げっとした <a href=\"https://t.co/ciAkzlGaaS\">pic.twitter.com/ciAkzlGaaS</a></p>&mdash; りぃ🐧 / Yuji Sugiura (@leader22) <a href=\"https://twitter.com/leader22/status/1531814452118446081?ref_src=twsrc%5Etfw\">2022年6月1日</a></blockquote> <script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script> </p><p>いちおう節目としてメモを残しておく。<br />\n<br />\n</p>\n\n<div class=\"section\">\n    <h3>なぜはじめたか</h3>\n    <p>単純に仕事の波が引きまくっていて、なんか有意義に時間を使えないか？と思い。<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%A5%A2%A5%EB%A5%B4%A5%EA%A5%BA%A5%E0\">アルゴリズム</a>とかそういうCSの基礎的なところはあまり得意ではない意識もあるので、多少マシにはなるかな？と。</p><p>コンスタントに1日1-2問くらいを朝一番にやるのを習慣にして、去年の秋くらいからちまちまやってた。</p>\n\n</div>\n<div class=\"section\">\n    <h3>なぜやめるのか</h3>\n    <p>理由は2つ。</p><p>まずは、近頃はあまり学びがなく、これは惰性でしかないな・・と気付いたから。</p><p>Easyな問題だけをやってるがゆえにか、400問もやると問題の質が気になってくる。</p>\n\n<ul>\n<li>本質は単純なのに、説明文が無駄に難解なやつとか</li>\n<li>ただの文字列操作やん・・みたいなのとか</li>\n<li>完全な使いまわしとか</li>\n<li>Easyではない！っていうコメントが噴出してるやつとか</li>\n</ul><p>Rustの勉強も兼ねてやってたけど、構文も決まったパターンばかりになってきてたし。</p><p>あとは、モチベーションと時間の都合。</p><p>Mediumとか違うレベルに手を出すという手もあったかもしれんけど、モチベーション的なところで疲れを感じてたのもあるし、複業に時間を割くための優先順位の問題もあり。</p><p>結局、なんのために？っていうモチベーションの源泉がないのが問題かな〜。この手の知識が仕事で役に立ったこともないし・・。（計算量に気を使うとかそういうのは、もともとやってるし）</p>\n\n</div>\n<div class=\"section\">\n    <h3>Rustへの感想</h3>\n    <p>`<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/Iterator\">Iterator</a>`がすごく便利で感動した。`<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/windows\">windows</a>()`とか`chunks()`とかがなかったらそれはもう面倒くさかったはず。<br />\nメソッドチェーンでコード並べても、<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%A5%B3%A5%F3%A5%D1%A5%A4%A5%EB\">コンパイル</a>時に最適化してくれたりするし。</p><p>ただ不便だと思うところもあって。</p><p>コードをどこで書く？ってなった場合に、LeetCodeのページ内エディタでちょっと書こうとするけど、だいたい<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%A5%B3%A5%F3%A5%D1%A5%A4%A5%EB\">コンパイル</a>が通らないし補完もないしでだいぶ厳しい。</p><p>なのでだいたいローカルにテストケースをコピーしてきて動かせるようにしてたけど、`TreeNode`とかテストケースを用意するのがめちゃめちゃ面倒なやつとか、既に実装してあるプライベートなコード使って解けみたいなのとか、そういうのが本当にだるくて、Rustで解くのを諦めることもあった。</p><p>作問の都合か知らんけど、なんでも`Vec`でなんでも`String`でなんでも`i32`って感じなので、なんかずっとキャストしてたイメージある。</p><p>これはRustのせいっていうか、LeetCodeのせい。</p>\n\n</div>\n<div class=\"section\">\n    <h3>まとめ</h3>\n    \n<ul>\n<li>あまり勧められるやり方ではなかった</li>\n<li>もっと良質な問題だけを、集中的にやるほうがいい</li>\n<li>モチベーションが一番大事</li>\n</ul><p>また忘れた頃にやるか、もう二度とやらないか、どっちかな気がしてる。</p>\n\n</div>"
}
