{
  "title": "mobx-reactとmobx-react-liteと、それぞれのobserver APIの違い",
  "html": "<p>わかってる側からすると無意識に選んでたけど、わかってない側からすると混乱するよなこれ・・。</p><p>と思ったので、今さらではあるが言語化の意味も込めてメモ。<br />\n<br />\n</p>\n\n<div class=\"section\">\n    <h3>mobx-reactファミリー</h3>\n    <p>MobXを使ってReactのコンポーネントをよしなに描画するためにはライブラリが必要。<br />\nで、それらはReactのバージョンによって、いくつか選択肢がある。</p>\n\n<ul>\n<li>`mobx-react-lite`</li>\n<li>`mobx-react@6`</li>\n<li>`mobx-react@5`</li>\n</ul><p>選び方としては、</p>\n\n<ul>\n<li>`react@16.8.0`以上で、Classコンポーネントは使わず、FunctionalコンポーネントとHooksベースで書いてる\n<ul>\n<li>`mobx-react-lite`</li>\n</ul></li>\n<li>`react@16.8.0`以上だが、Classコンポーネントも使ってるし、Functionalコンポーネントも混在してる\n<ul>\n<li>`mobx-react@6`</li>\n</ul></li>\n<li>それ以外\n<ul>\n<li>`mobx-react@5`</li>\n</ul></li>\n</ul><p>という感じ。</p>\n\n    <blockquote>\n        <p><a href=\"https://mobx-react.js.org/libraries\">https://mobx-react.js.org/libraries</a></p>\n\n    </blockquote>\n\n</div>\n<div class=\"section\">\n    <h3>observer API</h3>\n    <p>MobXで用意した値の変更に応じて、コンポーネントを再描画させるには、なんらかのobserver APIが必要。</p>\n\n<ul>\n<li>`mobx-react@5`\n<ul>\n<li>`observer`HOC</li>\n<li>`Observer`コンポーネント</li>\n</ul></li>\n<li>`mobx-react@6`\n<ul>\n<li>`observer` HOC</li>\n<li>`Observer`コンポーネント</li>\n</ul></li>\n<li>`mobx-react-lite`\n<ul>\n<li>`observer`HOC</li>\n<li>`Observer`コンポーネント</li>\n<li>`useObserver`フック</li>\n</ul></li>\n</ul><p>という感じで、どれを使ったらいいんやってなりそうなので、それぞれの特徴について。</p>\n\n<div class=\"section\">\n    <h4>`observer`HOC</h4>\n    <p>コンポーネントを`observer()`でラップするスタイル。</p>\n<pre class=\"code lang-javascript\" data-lang=\"javascript\" data-unlink><span class=\"synStatement\">export</span> <span class=\"synStatement\">const</span> FunctionalComponent = (props) =&gt; &lt;p&gt;Count: <span class=\"synIdentifier\">{</span>props.count<span class=\"synIdentifier\">}</span>&lt;/p&gt;;\n<span class=\"synStatement\">export</span> <span class=\"synStatement\">const</span> Component = observer(FunctionalComponent);\n</pre><p>今となっては懐かしい高階関数パターン。</p><p>`mobx-react`の場合は、ClassコンポーネントでもFunctionalコンポーネントでも渡せるけど、`mobx-react-lite`の場合は、Functionalコンポーネントしか渡せない。</p><p>HOCは複数あったらその順番とかあれこれハマりやすいパターンなので、最近はあまり歓迎されていないような印象もあり。</p><p>今あえて選ぶ理由はない気がする。</p>\n\n    <blockquote>\n        <p><a href=\"https://mobx-react.js.org/observer-hoc\">https://mobx-react.js.org/observer-hoc</a></p>\n\n    </blockquote>\n\n</div>\n<div class=\"section\">\n    <h4>`Observer`コンポーネント</h4>\n    <pre class=\"code lang-javascript\" data-lang=\"javascript\" data-unlink><span class=\"synStatement\">export</span> <span class=\"synStatement\">const</span> Component = (props) =&gt; (\n  &lt;section&gt;\n    &lt;h1&gt;Counter&lt;/h1&gt;\n    &lt;Observer&gt;<span class=\"synIdentifier\">{</span>() =&gt; (\n      &lt;p&gt;Count: <span class=\"synIdentifier\">{</span>props.count<span class=\"synIdentifier\">}</span>&lt;/p&gt;\n    )<span class=\"synIdentifier\">}</span>&lt;/Observer&gt;\n  &lt;/section&gt;\n);\n</pre><p>というように、任意の場所を指定できるのが`observer()`との決定的な違い。</p><p>自身より上層（外側）のスコープで定義された値にしか追従しないので、ネストさせるときは注意。</p><p>その他は気にすべき点も特になく、いちばん馴染みやすい書き味だと思うので、とりあえずコレって感じでいいと思ってる。</p>\n\n    <blockquote>\n        <p><a href=\"https://mobx-react.js.org/observer-component\">https://mobx-react.js.org/observer-component</a></p>\n\n    </blockquote>\n\n</div>\n<div class=\"section\">\n    <h4>`useObserver`フック</h4>\n    <pre class=\"code lang-javascript\" data-lang=\"javascript\" data-unlink><span class=\"synStatement\">export</span> <span class=\"synStatement\">const</span> Component = (props) =&gt; <span class=\"synIdentifier\">{</span>\n  <span class=\"synStatement\">return</span> useObserver(() =&gt; (\n    &lt;section&gt;\n      &lt;h1&gt;Counter&lt;/h1&gt;\n      &lt;p&gt;Count: <span class=\"synIdentifier\">{</span>props.count<span class=\"synIdentifier\">}</span>&lt;/p&gt;\n    &lt;/section&gt;\n  ));\n<span class=\"synIdentifier\">}</span>;\n</pre><p>という感じでいちばんローレベルな実装。<br />\n`mobx-react-lite`では、`observer`HOCも`Observer`コンポーネントも、内部的にはこれを呼んでる。</p><p>自由度は高い分、これの存在意義とは・・・？ってなるうちは、使う必要ないと思う。<br />\nHooksとは言ってるけど、他のHooksと組み合わせて使えるとも思えないので・・。</p>\n\n    <blockquote>\n        <p><a href=\"https://mobx-react.js.org/observer-hook\">https://mobx-react.js.org/observer-hook</a></p>\n\n    </blockquote>\n\n</div>\n</div>"
}
