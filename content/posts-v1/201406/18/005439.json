{
  "title": "HTML5のdata属性をキャメルケースで定義するとどうなるか",
  "html": "<p>jsでは変数名をキャメルケースにしてて、どうせなら目につくとこ統一したいなーと思ったんです。<br />\nで、そういえばdata属性って最初からキャメルケースにしたらどうなるんやろー？って。</p><br />\n<p>まあ結論からいうと、ダメですｗ</p>\n\n<div class=\"section\">\n    <h3>どうなるかというと</h3>\n    <p>こういうHTMLを用意して</p>\n\n<div class=\"section\">\n    <h4>HTML</h4>\n    <pre class=\"code lang-html\" data-lang=\"html\" data-unlink><span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">div</span><span class=\"synIdentifier\"> </span><span class=\"synType\">id</span><span class=\"synIdentifier\">=</span><span class=\"synConstant\">&quot;div1&quot;</span><span class=\"synIdentifier\"> </span><span class=\"synType\">data</span><span class=\"synIdentifier\">-hoge-fuga=</span><span class=\"synConstant\">&quot;OK&quot;</span><span class=\"synIdentifier\">&gt;</span>Data-Hyphenated<span class=\"synIdentifier\">&lt;/</span><span class=\"synStatement\">div</span><span class=\"synIdentifier\">&gt;</span>\n<span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">div</span><span class=\"synIdentifier\"> </span><span class=\"synType\">id</span><span class=\"synIdentifier\">=</span><span class=\"synConstant\">&quot;div2&quot;</span><span class=\"synIdentifier\"> </span><span class=\"synType\">data</span><span class=\"synIdentifier\">-hogeFuga=</span><span class=\"synConstant\">&quot;OK&quot;</span><span class=\"synIdentifier\">&gt;</span>dataCamelCased<span class=\"synIdentifier\">&lt;/</span><span class=\"synStatement\">div</span><span class=\"synIdentifier\">&gt;</span>\n</pre><p>以下みたくjsで取得するとー。</p>\n\n</div>\n<div class=\"section\">\n    <h4>JavaScript</h4>\n    <pre class=\"code lang-javascript\" data-lang=\"javascript\" data-unlink><span class=\"synIdentifier\">var</span> $d1 = $(<span class=\"synConstant\">'#div1'</span>), $d2 = $(<span class=\"synConstant\">'#div2'</span>);\n\n<span class=\"synComment\">/**</span>\n<span class=\"synComment\"> * $el.data()</span>\n<span class=\"synComment\"> *</span>\n<span class=\"synComment\"> */</span>\n<span class=\"synComment\">// Hyphenated</span>\n$d1.data(<span class=\"synConstant\">'hoge-fuga'</span>); <span class=\"synComment\">// =&gt; OK</span>\n$d1.data(<span class=\"synConstant\">'hogeFuga'</span>);  <span class=\"synComment\">// =&gt; OK</span>\n$d1.data(<span class=\"synConstant\">'hogefuga'</span>);  <span class=\"synComment\">// =&gt; undefined</span>\n\n<span class=\"synComment\">// camelCased</span>\n$d2.data(<span class=\"synConstant\">'hoge-fuga'</span>); <span class=\"synComment\">// =&gt; undefined</span>\n$d2.data(<span class=\"synConstant\">'hogeFuga'</span>);  <span class=\"synComment\">// =&gt; undefined</span>\n$d2.data(<span class=\"synConstant\">'hogefuga'</span>);  <span class=\"synComment\">// =&gt; OK</span>\n\n<span class=\"synComment\">/**</span>\n<span class=\"synComment\"> * $el.attr()</span>\n<span class=\"synComment\"> *</span>\n<span class=\"synComment\"> */</span>\n<span class=\"synComment\">// Hyphenated</span>\n$d1.attr(<span class=\"synConstant\">'data-hoge-fuga'</span>); <span class=\"synComment\">// =&gt; OK</span>\n$d1.attr(<span class=\"synConstant\">'data-hogeFuga'</span>);  <span class=\"synComment\">// =&gt; undefined</span>\n$d1.attr(<span class=\"synConstant\">'data-hogefuga'</span>);  <span class=\"synComment\">// =&gt; undefined</span>\n\n<span class=\"synComment\">// camelCased</span>\n$d2.attr(<span class=\"synConstant\">'data-hoge-fuga'</span>); <span class=\"synComment\">// =&gt; undefined</span>\n$d2.attr(<span class=\"synConstant\">'data-hogeFuga'</span>);  <span class=\"synComment\">// =&gt; OK</span>\n$d2.attr(<span class=\"synConstant\">'data-hogefuga'</span>);  <span class=\"synComment\">// =&gt; OK</span>\n\n<span class=\"synComment\">/**</span>\n<span class=\"synComment\"> * el.getAttribute()</span>\n<span class=\"synComment\"> *</span>\n<span class=\"synComment\"> */</span>\n<span class=\"synComment\">// Hyphenated</span>\n$d1<span class=\"synIdentifier\">[</span>0<span class=\"synIdentifier\">]</span>.getAttribute(<span class=\"synConstant\">'data-hogeFuga'</span>);  <span class=\"synComment\">// =&gt; null</span>\n$d1<span class=\"synIdentifier\">[</span>0<span class=\"synIdentifier\">]</span>.getAttribute(<span class=\"synConstant\">'data-hoge-fuga'</span>); <span class=\"synComment\">// =&gt; OK</span>\n$d1<span class=\"synIdentifier\">[</span>0<span class=\"synIdentifier\">]</span>.getAttribute(<span class=\"synConstant\">'data-hogefuga'</span>);  <span class=\"synComment\">// =&gt; null</span>\n\n<span class=\"synComment\">// camelCased</span>\n$d2<span class=\"synIdentifier\">[</span>0<span class=\"synIdentifier\">]</span>.getAttribute(<span class=\"synConstant\">'data-hogeFuga'</span>);  <span class=\"synComment\">// =&gt; OK</span>\n$d2<span class=\"synIdentifier\">[</span>0<span class=\"synIdentifier\">]</span>.getAttribute(<span class=\"synConstant\">'data-hoge-fuga'</span>); <span class=\"synComment\">// =&gt; null</span>\n$d2<span class=\"synIdentifier\">[</span>0<span class=\"synIdentifier\">]</span>.getAttribute(<span class=\"synConstant\">'data-hogefuga'</span>);  <span class=\"synComment\">// =&gt; OK</span>\n\n<span class=\"synComment\">/**</span>\n<span class=\"synComment\"> * el.dataset</span>\n<span class=\"synComment\"> *</span>\n<span class=\"synComment\"> */</span>\n<span class=\"synComment\">// Hyphenated</span>\n$d1<span class=\"synIdentifier\">[</span>0<span class=\"synIdentifier\">]</span>.dataset<span class=\"synIdentifier\">[</span><span class=\"synConstant\">'hoge-fuga'</span><span class=\"synIdentifier\">]</span>; <span class=\"synComment\">// =&gt; undefined</span>\n$d1<span class=\"synIdentifier\">[</span>0<span class=\"synIdentifier\">]</span>.dataset<span class=\"synIdentifier\">[</span><span class=\"synConstant\">'hogeFuga'</span><span class=\"synIdentifier\">]</span>;  <span class=\"synComment\">// =&gt; OK</span>\n$d1<span class=\"synIdentifier\">[</span>0<span class=\"synIdentifier\">]</span>.dataset<span class=\"synIdentifier\">[</span><span class=\"synConstant\">'hogefuga'</span><span class=\"synIdentifier\">]</span>;  <span class=\"synComment\">// =&gt; undefined</span>\n\n<span class=\"synComment\">// camelCased</span>\n$d2<span class=\"synIdentifier\">[</span>0<span class=\"synIdentifier\">]</span>.dataset<span class=\"synIdentifier\">[</span><span class=\"synConstant\">'hoge-fuga'</span><span class=\"synIdentifier\">]</span>; <span class=\"synComment\">// =&gt; undefined</span>\n$d2<span class=\"synIdentifier\">[</span>0<span class=\"synIdentifier\">]</span>.dataset<span class=\"synIdentifier\">[</span><span class=\"synConstant\">'hogeFuga'</span><span class=\"synIdentifier\">]</span>;  <span class=\"synComment\">// =&gt; undefined</span>\n$d2<span class=\"synIdentifier\">[</span>0<span class=\"synIdentifier\">]</span>.dataset<span class=\"synIdentifier\">[</span><span class=\"synConstant\">'hogefuga'</span><span class=\"synIdentifier\">]</span>;  <span class=\"synComment\">// =&gt; OK</span>\n</pre>\n</div>\n</div>\n<div class=\"section\">\n    <h3>こうなった</h3>\n    \n<div class=\"section\">\n    <h4>data(dataset)としては</h4>\n    \n<ul>\n<li>ハイフンで定義すると、キャメルケースでアクセスできるようになる</li>\n<li>キャメルケースで定義すると、ローワーケースに直されてしまう</li>\n</ul>\n</div>\n<div class=\"section\">\n    <h4>attrとしては</h4>\n    \n<ul>\n<li>定義した通りでしかアクセスできない</li>\n<li>ただ、キャメルケースはローワーケースでもアクセスできるようになる <- mjk!</li>\n</ul>\n</div>\n<div class=\"section\">\n    <h4>結論</h4>\n    <p>大人しくハイフンでつないで書いて、ハイフンでつないで取得しましょうね。</p>\n\n    <blockquote>\n        <p>参考：<a href=\"http://www.w3.org/TR/html5/dom.html#embedding-custom-non-visible-data-with-the-data-*-attributes\" target=\"_blank\" title=\"3 Semantics, structure, and APIs of HTML documents — HTML5\">3 Semantics, structure, and APIs of HTML documents — HTML5</a></p>\n\n    </blockquote>\n\n</div>\n</div>"
}
