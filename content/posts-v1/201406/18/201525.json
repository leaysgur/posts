{
  "title": "Backbone.Marionetteがv2.0.0に",
  "html": "<p>みなさんお待ちかね！</p><p>大変お世話になってる身としてはうれしいですねー。<br />\nおめでとうございます！</p><p>さて、いまMarionetteを使ってるプロジェクトで、割とキリのいいタイミングやったのでアップデートしようとしたのですが、そのままファイル差し替えればOKってなわけではなく・・。</p><p>ざっくり変更点と、そこのところをメモしときます。<br />\n<br />\n</p>\n\n<div class=\"section\">\n    <h3>変更点</h3>\n    \n    <blockquote>\n        <p>参考: <a target=\"_blank\" href=\"https://github.com/marionettejs/backbone.marionette/releases/tag/v2.0.0\">Release v2.0.0 · marionettejs/backbone.marionette</a></p>\n\n    </blockquote>\n<p>詳しいのはきっと別の方がそのうち書いてくれると思うので、自分のプロジェクトで直接関係してたとこを書き連ねておきます。</p>\n\n<div class=\"section\">\n    <h4>Global</h4>\n    \n<ul>\n<li>initialize:before イベントが、before:start イベントに名称変更</li>\n<li>initialize:after イベントが、start イベントに名称変更</li>\n</ul>\n</div>\n<div class=\"section\">\n    <h4>Controller</h4>\n    \n<ul>\n<li>close メソッドが、destroy メソッドに変更</li>\n</ul>\n</div>\n<div class=\"section\">\n    <h4>Regions</h4>\n    \n<ul>\n<li>open メソッドが、attachHtml メソッドに変更</li>\n<li>close メソッドが、empty メソッドに変更</li>\n<li>show メソッドが、this を返すように(Viewと同じ)</li>\n<li>同じViewをshowしても再レンダリングされなくなった(レンダリングが必要な場合、show(view, {forceShow: true}) ってする)</li>\n</ul>\n</div>\n<div class=\"section\">\n    <h4>Views</h4>\n    \n<ul>\n<li>Layout が、LayoutViewに名称変更</li>\n<li>close メソッドが、destroy メソッドに変更(destroyされたViewは、再openできない)</li>\n</ul><p>Collection/CompositeViewは使ってないので気にしてません・・。</p>\n\n</div>\n</div>\n<div class=\"section\">\n    <h3>アップグレード手順</h3>\n    <p>さて、アップグレードです。</p>\n\n<div class=\"section\">\n    <h4>さいしょから</h4>\n    <p>いまからはじめるプロジェクトであれば、今まで通りGithubなりBowerなりで取得して使えばOK。</p><p>ドキュメントは更新されてる風なので、大概は大丈夫かと。</p>\n\n</div>\n<div class=\"section\">\n    <h4>つづきから</h4>\n    <p>既存のプロジェクトに適用する場合、ちょっとした手間が必要です。</p>\n\n    <blockquote>\n        <p>参考: <a target=\"_blank\" href=\"https://github.com/marionettejs/Marionette.Upgrade\">marionettejs/Marionette.Upgrade</a></p>\n\n    </blockquote>\n<p>このように、アップグレードどうすりゃいいの？リポジトリがあるのでここからやります。<br />\n詳細な手順は上記リポジトリを参照してください。</p><p>ただ一言で書くと、コードをがっつり書き換えるバッチみたいなのを叩きます。</p><p>上記リポジトリのREADMEにも書いてあるのですが、「テストはしたけど完全な置換は約束できないので、そこんとこ注意してね、なんかあったらPR投げるなり教えてください」とのこと。<br />\n<br />\n</p>\n\n</div>\n</div>\n<div class=\"section\">\n    <h3>おまけ:今のところ私がハマったリスト</h3>\n    \n<ul>\n<li>lib/core/amd/ にあったAMD対応版がまだない</li>\n<li>Region.close -> emptyの変更を知らずに close -> destroy に置換しちゃってエラーになってた</li>\n<li>仕様通りやけど、一度destroyされたViewインスタンスを再利用しようとしててエラーになってた</li>\n</ul>\n</div>"
}
