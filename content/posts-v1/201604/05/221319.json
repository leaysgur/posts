{
  "title": "Node学園 20時限目 に行ってきたメモ #tng20",
  "html": "<p>行ってきたよ！<br />\n受付してた青いシャツの人です。<br />\n<br />\n</p>\n\n<div class=\"section\">\n    <h3>「eslintの話」 by @mysticatea</h3>\n    \n<ul>\n<li>ASTベース x プラガブル</li>\n<li>ReactブームとES2015ブームに乗れたのが流行った要因</li>\n<li>開発者が簡単に貢献できたのも○</li>\n<li>eslintってつぶやくとメンションで助けてくれたりも\n<ul>\n<li>ありがたや</li>\n</ul></li>\n<li>AutoFixing\n<ul>\n<li>eslint --fix ってやるとなおしてくれる</li>\n</ul></li>\n</ul>\n<div class=\"section\">\n    <h4>eslint@3でなんとかしたいこと</h4>\n    \n<ul>\n<li>eslintrcをディレクトリ別で違うルールに対応したい\n<ul>\n<li>個別のディレクトリに置くのではなく、ルートにGlob的なのを置くようにしたい</li>\n</ul></li>\n<li>babel-eslintはmonkey-patchだらけでもう限界</li>\n<li>TypeScript対応</li>\n<li>node@0.xのサポート終了</li>\n</ul>\n</div>\n</div>\n<div class=\"section\">\n    <h3>「amebafresh.tvの話」 by @ahomu</h3>\n    \n    <blockquote>\n        <p><a href=\"http://s.aho.mu/160405-node_school/\">Client Side of &#x306A;&#x3093;&#x3061;&#x3083;&#x3089;fresh.tv</a></p>\n\n    </blockquote>\n\n<ul>\n<li>事業譲渡で名前変わるらしいｗ</li>\n<li>いろんな放送を見れるサービス\n<ul>\n<li>コメントはSocket.IO</li>\n<li>動画のとこはHttpLiveStream</li>\n</ul></li>\n<li>React x Fluxible x fluxible-router x fluxible-plugin-fetchr\n<ul>\n<li>サーバーでもクライアントでもデータ取るとこはfetchrがよしなに</li>\n</ul></li>\n<li>stateは完結できるものは持ってしまってる</li>\n<li>UAとかはContextに注入</li>\n</ul>\n<div class=\"section\">\n    <h4>SPAでがんばってほしいポイント</h4>\n    \n<ul>\n<li>SPAはクライアントのためではない</li>\n<li>NonSPAと同じ体験をさせたい</li>\n<li>ルーティングして画面できてから更新\n<ul>\n<li>白いページ出してから画面作るのはNG</li>\n</ul></li>\n<li>ルーティング終わってからスクロール\n<ul>\n<li>リンク押した瞬間にてっぺんに戻ったりするのもNG</li>\n</ul></li>\n<li>ブラウザバックでキャッシュあれば即使って表示</li>\n</ul>\n</div>\n<div class=\"section\">\n    <h4>Componentの作り方</h4>\n    \n<ul>\n<li>ひとつのコンポーネントあたりこんな感じ\n<ul>\n<li>Component/index.js : コンポーネントの JSX</li>\n<li>Component/index.css : コンポーネントの CSS</li>\n<li>Component/index.sg.js : コンポーネントのスタイルガイド</li>\n<li>Component/index.test.js : コンポーネントのテスト</li>\n<li>Component/SubComponent.js</li>\n</ul></li>\n<li>CSSは <a href=\"https://github.com/suitcss/suit/blob/master/doc/naming-conventions.md\">https://github.com/suitcss/suit/blob/master/doc/naming-conventions.md</a></li>\n<li>コンポーネント単位切りまくっても、きちんと`shouldComponentUpdate()`チューニングすればパフォーマンスはなんとかなる</li>\n</ul><p>HLSへの呪詛はまた今度らしいので期待して待ってます。</p>\n\n</div>\n</div>\n<div class=\"section\">\n    <h3>「vue.jsの最近の話」 by @kazupon</h3>\n    \n<ul>\n<li>元は個人プロジェクト</li>\n<li>React / Angularの影で、Vueもシェアが伸びてた2015</li>\n<li>PHPのLaravelに採用されて急成長</li>\n<li>VueServerっていうサーバーサイドのモジュールも</li>\n<li>VueでFluxするVuexも最近でた</li>\n<li>GoogleやめてMeteorいったけどそこも最近やめたらしい\n<ul>\n<li>Vue.jsをフルタイムで開発したい・・？</li>\n</ul></li>\n<li>人手が足りなくてContribチームが発足</li>\n<li>異なる複雑なレベルに適応するProgressive Frameworkという新しいビジョン</li>\n</ul><p>Vue.js Meetupやるよ！Evan氏くるかもよ！<br />\n<br />\n</p>\n\n</div>\n<div class=\"section\">\n    <h3>「Nodebotsの話」 by @n0bisuke</h3>\n    <p>89世代のLIGエンジニア。</p>\n\n    <blockquote>\n        <p><a href=\"https://speakerdeck.com/n0bisuke/nodebotsfalsehua-nodexue-yuan-20shi-xian-mu-number-tng20-20fen\">NodeBots&#x306E;&#x8A71; (Node&#x5B66;&#x5712;20&#x6642;&#x9650;&#x76EE; #tng20 : 20&#x5206;) // Speaker Deck</a></p>\n\n    </blockquote>\n\n<div class=\"section\">\n    <h4>IOTまわりのものたち</h4>\n    \n<ul>\n<li><a href=\"http://konashi.ux-xu.com/kjs/\">konashi - konashi.js - A physical computing environment for iPhone, iPod touch and iPad with JavaScript/HTML/CSS</a></li>\n<li><a href=\"http://meshprj.com/jp/\">MESH&#xFF1A;&#x904A;&#x3073;&#x5FC3;&#x3092;&#x5F62;&#x306B;&#x3067;&#x304D;&#x308B;&#x3001;&#x30A2;&#x30D7;&#x30EA;&#x3068;&#x3064;&#x306A;&#x3052;&#x308B;&#x30D6;&#x30ED;&#x30C3;&#x30AF;&#x5F62;&#x72B6;&#x306E;&#x96FB;&#x5B50;&#x30BF;&#x30B0;&#xFF5C;&#x30BD;&#x30CB;&#x30FC;</a></li>\n<li><a href=\"https://github.com/sandeepmistry/noble\">GitHub - sandeepmistry/noble: A Node.js BLE (Bluetooth Low Energy) central module</a></li>\n<li><a href=\"https://www.npmjs.com/package/rpi-gpio\">rpi-gpio</a></li>\n</ul>\n</div>\n<div class=\"section\">\n    <h4>Nodebots</h4>\n    <p>Node.jsでIOTする人たちのコミュニティのこと。</p>\n\n<ul>\n<li><a href=\"https://cylonjs.com/\">Cylon.js - JavaScript framework for robotics, physical computing, and the Internet of Things using Node.js</a></li>\n<li><a href=\"http://johnny-five.io/\">Johnny-Five: The JavaScript Robotics Programming Framework</a></li>\n<li>NoderがやるならJohnny-Fiveがおすすめ\n<ul>\n<li>NodeSchoolで学べるし、何も買わなくてもいい</li>\n</ul></li>\n</ul>\n</div>\n<div class=\"section\">\n    <h4>機材</h4>\n    \n<ul>\n<li>買うならArduino Uno R3が最初はおすすめ\n<ul>\n<li>Genuino 101ってのもある(BlueToothと加速度センサーがついてる)</li>\n</ul></li>\n<li>でもTessel 2がイチオシ\n<ul>\n<li>組み込みでWiFi使えるけど技適にまだ不適合・・</li>\n</ul></li>\n</ul>\n</div>\n<div class=\"section\">\n    <h4>BaaS</h4>\n    \n<ul>\n<li>Milkcocoa / PubNub</li>\n<li>日本語リソースいっぱいあるのでMilkcocoa推し</li>\n</ul><p>イベントもいっぱいやっていくので盛り上げていきましょう！</p>\n\n</div>\n</div>\n<div class=\"section\">\n    <h3>「option-tでエラーハンドリング」 by @saneyuki</h3>\n    <p>インターネットチンピラ from 株式会社VOYAGE GROUPだそうですｗ<br />\n採用やってるって！</p>\n\n<ul>\n<li>エラーには2つある\n<ul>\n<li>復帰できないもの = ただのバグ起因</li>\n<li>復帰できるもの</li>\n</ul></li>\n<li>復帰できないエラーはtry-catchしたらあかん</li>\n<li>復帰できるエラーもできればcatchしない</li>\n<li>TypeScriptでもPromiseのcatchするエラーの型はany\n<ul>\n<li>どうしたものか</li>\n</ul></li>\n<li>IteratorにErrorってフィールドを追加する作戦\n<ul>\n<li>thenでつないで、そのなかでErrorフィールドを見て処理するように</li>\n<li>そうする限りは型情報がついたまま捌ける</li>\n</ul></li>\n<li><a href=\"https://www.npmjs.com/package/option-t\">https://www.npmjs.com/package/option-t</a> ってのを作った</li>\n</ul>\n<div class=\"section\">\n    <h4>言いたかったこと</h4>\n    \n<ul>\n<li>できればtry-catchしない\n<ul>\n<li>関数でちゃんと拾おう</li>\n<li>エラー復帰はさせちゃダメ</li>\n</ul></li>\n<li>エラーはエラーとして、QAで拾うべし</li>\n</ul>\n</div>\n</div>\n<div class=\"section\">\n    <h3>「OracleがNode.jsをやり始めたというのだが！」 by @charlier_shoe</h3>\n    <p>Oracle社の方で専門はJavaだそうですｗ</p>\n\n<ul>\n<li>OldなITはモノリシックで息も長い\n<ul>\n<li>新しいものも試せないし成長しない</li>\n</ul></li>\n<li>NewなITは小さなサービス群を組み合わせてやっていきたい</li>\n<li>だからOracleがNode.jsを始める！</li>\n</ul>\n<div class=\"section\">\n    <h4>Oracle Node Cloud</h4>\n    \n<ul>\n<li>コンテナ型の実行環境のサービス</li>\n<li>競合はherokuとか</li>\n<li>アプリとメタデータをzipにしてアップロードすればおｋ\n<ul>\n<li>GUIでもRESTでもアップロードできる</li>\n</ul></li>\n<li>フリートライアルは最大60日</li>\n</ul>\n</div>\n<div class=\"section\">\n    <h4>Oracle JET</h4>\n    \n    <blockquote>\n        <p><a href=\"http://www.oracle.com/webfolder/technetwork/jet/index.html\">Home</a></p>\n\n    </blockquote>\n\n<ul>\n<li>JavaScript Extension Toolkit</li>\n<li>5つのOSSとOracle\n<ul>\n<li>Knockout.js</li>\n<li>jQuery</li>\n<li>jQueryUI</li>\n<li>Hammer</li>\n<li>Require.js</li>\n</ul></li>\n<li>Oracle発のOSS！</li>\n</ul>\n</div>\n</div>\n<div class=\"section\">\n    <h3>「JavaScriptだけでKaggleチュートリアルチャレンジ」 by @yuji.isobe</h3>\n    \n    <blockquote>\n        <p><a href=\"https://speakerdeck.com/yujiosaka/hitasurale-sitedeipuraningu\">&#x3072;&#x305F;&#x3059;&#x3089;&#x697D;&#x3057;&#x3066;&#x30C7;&#x30A3;&#x30FC;&#x30D7;&#x30E9;&#x30FC;&#x30CB;&#x30F3;&#x30B0; // Speaker Deck</a></p>\n\n    </blockquote>\n<p>機械学習で人の気持ちを・・というEmotion Intelligence株式会社より。</p>\n\n<ul>\n<li>会社の研究者と話すためにはじパタ本からスタート</li>\n<li>そしてKaggleに挑戦</li>\n<li>課題はMNIST\n<ul>\n<li>28x28pxの60000枚の学習サンプル、10000枚のテストサンプルからなる手書き数字画像の認識テスト</li>\n</ul></li>\n<li>ES2015でディープラーニングは世界初？</li>\n<li>PythonをCoffeeScriptに手動置換して、それをDecaf.jsでES2015に</li>\n<li>精度を上げるための技術や考え方がたくさんある</li>\n<li>それの組合せで精度を磨くのがディープラーニング</li>\n<li><a href=\"https://github.com/yujiosaka/js-mind\">https://github.com/yujiosaka/js-mind</a></li>\n</ul>\n</div>\n<div class=\"section\">\n    <h3>「nobleを使った、Node.jsからBluetooth 機器の制御」 by @niccolli</h3>\n    <p>秋葉原の株式会社Cerevoで回路設計されてる方より。</p>\n\n<ul>\n<li>BLE: Bluetooth 4.0(Low Energy)機器を制御</li>\n<li><a href=\"https://cloudiss.cerevo.com/ja/\">https://cloudiss.cerevo.com/ja/</a>\n<ul>\n<li>振らないと止まらない目覚まし機能もある！</li>\n</ul></li>\n<li>connpassでイベントが公開されたらブザーが鳴る仕組みとか？</li>\n<li>BLEはGenuino 101で！</li>\n</ul>\n</div>"
}
