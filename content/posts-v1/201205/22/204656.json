{
  "title": "Twitter@Anywhereのログイン状態を取得する方法2つ",
  "html": "\n    <blockquote>\n        <p>参考：<a href=\"http://lealog.hateblo.jp/entry/2012/05/19/122110\" target=\"_blank\" title=\"最新のTwitter@Anywhere公式ドキュメントの日本語訳\">最新のTwitter@Anywhere公式ドキュメントの日本語訳</a></p>\n\n    </blockquote>\n<p><a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/Twitter\">Twitter</a>公式リファレンスに出てる認証サンプルは<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/Ruby\">Ruby</a>しかなかったので、<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/PHP\">PHP</a>でのサンプルを載せておきます。<br />\n面倒くさい<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/PEAR\">PEAR</a>のライブラリやらOAuthやらより、簡単に認証できるんですねー。</p><p>もちろんセキュリティ面でもう少し気をつけるべき点はあるものの、基本的にはコレでログイン状態が取れます。</p>\n\n<div class=\"seemore\">\n    \n<div class=\"section\">\n    <h3><a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/PHP\">PHP</a>でのログイン判定</h3>\n    \n<div class=\"section\">\n    <h4>認証用の関数</h4>\n    \n    <pre class=\"code lang-php\" data-lang=\"php\" data-unlink>if(!function_exists(&#39;isVerified&#39;)){\n  function isVerified(){\n    $consumer_secret = &#39;自分で取得したConsumer Secret&#39;;\n    $twitter_anywhere_identity = explode(&#39;:&#39;, $_COOKIE[&#39;twitter_anywhere_identity&#39;]);\n\n    if (sha1($twitter_anywhere_identity[0] . $consumer_secret) === $twitter_anywhere_identity[1]) {\n\treturn true;\n    } else {\n\treturn false;\n    }\n  }\n}</pre>\n<p>$_COOKIE['twitter_anywhere_identity']を覗くと、999999:abcdefghijklmnopqrstuvwxyzみたくなってます。<br />\n\"：\"の前とConsumer Secretをsha1に通したものと、\"：\"の後が同じであればご本人さまというわけですね。</p>\n\n</div>\n<div class=\"section\">\n    <h4>使用例</h4>\n    \n    <pre class=\"code lang-php\" data-lang=\"php\" data-unlink>if(isVerified()){\n  echo&#39;Verified!&#39;;\n}else{\n  echo&#39;Not verified.&#39;;\n};</pre>\n<p>WordPressでやる場合は、functions.phpに関数を書いて、他のテンプレートで使用します。</p>\n\n</div>\n</div>\n<div class=\"section\">\n    <h3>JavaScriptでのログイン判定</h3>\n    \n<div class=\"section\">\n    <h4>isConnected()</h4>\n    \n    <pre class=\"code lang-javascript\" data-lang=\"javascript\" data-unlink>var myTw;\ntwttr.anywhere(function(tw){\n  myTw = tw;\t\t\n  if (myTw.isConnected()) {\n    // Connected!\n  }else{\n    // Not connected.\n  }\n});</pre>\n<p>これはリファレンスにも載ってるやつですね。</p>\n\n</div>\n</div>\n<div class=\"section\">\n    <h3>つかいみちとして</h3>\n    <p>基本的にPHPでOAuthのロジックとか書けるなら、それにこしたことはないのかなーとも思います。<br />\nただ、認証はJavaScriptで！っていうこだわりがある場合は以上2つを併用することで、幾分か強固な仕組みになるんじゃないでしょうか。</p><p>ちなみに私が今回作ろうとしてるのは、このやり方でデータをこねこねしてます。<br />\nAjaxとか、JavaScript経由でデータ取得してページ構成する・・っていうシーンだと、PHPより使い勝手は良いかもです。</p>\n\n</div>\n</div>"
}
