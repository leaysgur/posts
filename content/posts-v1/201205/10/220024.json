{
  "title": "同じ動作を実装するとき、JavaScriptの書き分け方",
  "html": "<p>同じ動作をするコードも、いくつかの書き方ができるわけで。<br />\nその時々によって良し悪しがあるんやろうけど、この場合の違いはなんやろ？っていうメモ。</p>\n\n<div class=\"seemore\">\n    \n<div class=\"section\">\n    <h3>オブジェクトでやるパターン</h3>\n    \n    <pre class=\"code lang-javascript\" data-lang=\"javascript\" data-unlink>var test1 = {\n     init: function(){\n          this.make();\n     },\n     make: function(){\n          console.log(&#39;Make something 1.&#39;);\n     }\n};\n\ntest1.init(); // Make something 1.</pre>\n<p>この○○.init()って、プラグインとか各所でよく見るなぁと思ってて、実際の使い所は？って思ってたんです。</p>\n\n<div class=\"section\">\n    <h4>いいところ</h4>\n    <p>実装する内容を、1つの<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%A5%B0%A5%ED%A1%BC%A5%D0%A5%EB%CA%D1%BF%F4\">グローバル変数</a>に閉じ込められる点かな？たぶん。</p>\n\n</div>\n<div class=\"section\">\n    <h4>よくないところ</h4>\n    <p>↓でも書くけど、newして<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%A5%A4%A5%F3%A5%B9%A5%BF%A5%F3%A5%B9\">インスタンス</a>増やして拡張していくとか、そういうのができない。</p>\n\n</div>\n</div>\n<div class=\"section\">\n    <h3>functionでやるパターン</h3>\n    \n    <pre class=\"code lang-javascript\" data-lang=\"javascript\" data-unlink>var test2 = function(){\n     this.init = function(){\n          this.make();\n     };\n     this.make = function(){\n          console.log(&#39;Make something 2.&#39;);\n     };\n}\n\n/*\ntest2.init();\nって書いても動かないので\n*/\n\nvar test3 = new test2();\ntest3.init(); // Make something 2.</pre>\n\n<div class=\"section\">\n    <h4>いいところ</h4>\n    <p>クラスとしてnewしてnewしたい場合はこっち。<br />\n最初のパターンでnew test1()ってしたくても、test1は関数じゃないのでできないんね。</p>\n\n</div>\n<div class=\"section\">\n    <h4>よくないところ</h4>\n    <p>newする必要がないなら冗長になるだけ。</p>\n\n</div>\n</div>\n<div class=\"section\">\n    <h3>つまり</h3>\n    \n    <blockquote>\n        <p>プラグインなど単体で動作するものを定義したい場合は、Objectパターン。<br />\nプログラムとしてクラスを定義したい場合は後者のfunctionパターン。</p>\n\n    </blockquote>\n<p>というように理解したけどあってるのかしら？<br />\nOreilly本でも読み返したら載ってるかしら。</p>\n\n</div>\n</div>"
}
