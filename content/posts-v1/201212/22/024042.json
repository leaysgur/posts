{
  "title": "Perlのワンライナーでテキストの一括置換",
  "html": "<p>職場の諸先輩方の影響を受け、Terminal.appからiTerm2に乗り換えました。<br />\nコレ良い！ってなった点は、カラースキームがエクスポートできて、複数台で使いまわせる点と、範囲選択＝<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%A5%AF%A5%EA%A5%C3%A5%D7%A5%DC%A1%BC%A5%C9\">クリップボード</a>にコピーくらいですが・・。</p><p>というわけで、黒い画面でできることは黒い画面でやろう！のモットーの元、今回は<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/Perl\">Perl</a>の<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%A5%EF%A5%F3%A5%E9%A5%A4%A5%CA%A1%BC\">ワンライナー</a>を勉強します。</p>\n\n<div class=\"seemore\">\n    \n<div class=\"section\">\n    <h3><a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%A5%EF%A5%F3%A5%E9%A5%A4%A5%CA%A1%BC\">ワンライナー</a></h3>\n    <p><a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%A5%D7%A5%ED%A5%B0%A5%E9%A5%DF%A5%F3%A5%B0%B8%C0%B8%EC\">プログラミング言語</a>の<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/Perl\">Perl</a>ですが、コマンドラインからも実行できます。</p>\n<pre class=\"code\" data-unlink>perl -e &#39;print &#34;Hello One Liner!\\n&#34;&#39;\n# Hello One Liner!</pre><p>みたいな感じです。<br />\nコマンドの引数として1行(OneLine)の短いスクリプトを書ける！ってやつなんですね。<br />\nそれに、文字を置換する</p>\n<pre class=\"code\" data-unlink><span class=\"synStatement\">s/</span><span class=\"synConstant\">hoge</span><span class=\"synStatement\">/</span><span class=\"synConstant\">fuga</span><span class=\"synStatement\">/g</span>\n</pre><p>のような<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%C0%B5%B5%AC%C9%BD%B8%BD\">正規表現</a>の置換を組み合わせようという魂胆です。</p>\n\n<div class=\"section\">\n    <h4>やりたかったこと</h4>\n    <pre class=\"code\" data-unlink>ack -al &#39;nyan&#39; | xargs perl -pi -e &#39;s/nyan/PIYO/g&#39;</pre><p>\"nyan\"という文字列が含まれるファイル内の、\"nyan\"をすべて\"PIYO\"に置換します。<br />\nクラス名やプロパティの一括置換とかに使えます。</p><p>ファイル名がわかってる場合は、</p>\n<pre class=\"code\" data-unlink>perl -pi -e &#39;s/nyan/PIYO/g&#39; hoge.html</pre><p>とかでも良いです。</p>\n\n</div>\n</div>\n<div class=\"section\">\n    <h3>xargs</h3>\n    <p>しれっと書いてますが、先に実行したコマンドの結果を、その後につないだコマンドの引数にできるってやつです。<br />\n概念的には、</p>\n<pre class=\"code\" data-unlink>perl -pi -e &#39;s/nyan/piyo/g&#39; [fileName(s)]</pre><p>このファイル名の引数の部分に、</p>\n<pre class=\"code\" data-unlink>ack -al &#39;nyan&#39;</pre><p>の結果を渡して実行することになります。<br />\nこのackコマンドとlオプションでは、ファイル名のリストが返ってくるので、この使い方にはぴったりでした。</p>\n\n</div>\n<div class=\"section\">\n    <h3><a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/perl\">perl</a>コマンドのオプションについて</h3>\n    <p>今回の例において必要なオプションは以下の通り。</p>\n\n<ul>\n<li>pをつけないと、出力結果が出ない＝ファイルが変更されない</li>\n<li>iをつけないと、出力結果がファイルに返らない(pのおかげで標準出力には出る</li>\n<li>eをつけないと、文字がスクリプトとして認識されない(<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%A5%EF%A5%F3%A5%E9%A5%A4%A5%CA%A1%BC\">ワンライナー</a>にならない</li>\n</ul><pre class=\"code\" data-unlink>ack -al &#39;nyan&#39; | xargs perl -pi -e &#39;s/nyan/PIYO/g&#39;</pre><p>っていう今回の<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%A5%EF%A5%F3%A5%E9%A5%A4%A5%CA%A1%BC\">ワンライナー</a>ですが、そもそも、</p>\n<pre class=\"code\" data-unlink>ack -al &#39;nyan&#39; | xargs perl -pie &#39;s/nyan/PIYO/g&#39;</pre><p>なんでこうできないの？って思いました。<br />\nオプションってひとまとめにできないもんかね？と。</p><p>でも、やってみると、</p>\n<pre class=\"code\" data-unlink>Can&#39;t open perl script &#34;s/fuga/PIYO/g&#34;: No such file or directory</pre><p>eオプションをつけずに<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/perl\">perl</a>コマンドを実行した場合、第一引数はスクリプトと解釈されるらしい。(付けたつもりやったけど<br />\nというわけで、オプションにも色々あって、独立して指定しないといけないオプションもいるんですね。</p>\n\n    <blockquote>\n        <p>さらにちなみに、オプションの順番を変えてもダメです。eオプションの直後にスクリプト文字列！これが大事。</p>\n\n    </blockquote>\n\n</div>\n<div class=\"section\">\n    <h3>おわりに</h3>\n    <p>厳密なパフォーマンス的な観点からいうと、xargsは使わない方が良いとも聞きます。<br />\nじゃあどうすれば良いのってのが今はわからないので、しばらくはコレでやってみようと思います。</p><p><a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%A5%EF%A5%F3%A5%E9%A5%A4%A5%CA%A1%BC\">ワンライナー</a>のワくらいしか使えてない感はありますが、これできるだけでだいぶ楽なので良しとしますｗ<br />\n<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/Perl\">Perl</a>って便利ですねー。</p>\n\n</div>\n</div>"
}
