{
  "title": "Handlebars.jsの基本的な使い方のメモ",
  "html": "<p>便利ですよね、Handlebars。<br />\nでも日本語の記事が案外なかったり、公式のドキュメントがいまいちアレだったりするので、自分用にまとめます。</p><p>それがどこかで誰かの役に立てば、それはそれで幸いです。</p>\n\n<div class=\"section\">\n    <h3>基本的な使い方</h3>\n    <p>インストールとかは割愛。<br />\nだって読み込むだけやし・・・。</p><p>で、そこからは</p>\n\n<ul>\n<li>テンプレート・ひな形となるHTMLを用意</li>\n<li>そのHTMLをHandlebarsに食わせる</li>\n<li>動的にはめ込む値をつっこむ</li>\n</ul><p>基本的にはこの3ステップです。</p>\n\n<div class=\"section\">\n    <h4>Html</h4>\n    <pre class=\"code lang-html\" data-lang=\"html\" data-unlink><span class=\"synComment\">&lt;!-- 略 --&gt;</span>\n<span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">script</span><span class=\"synIdentifier\"> </span><span class=\"synType\">id</span><span class=\"synIdentifier\">=</span><span class=\"synConstant\">&quot;input&quot;</span><span class=\"synIdentifier\"> </span><span class=\"synType\">type</span><span class=\"synIdentifier\">=</span><span class=\"synConstant\">&quot;text/x-handlebars-template&quot;</span><span class=\"synIdentifier\">&gt;</span>\n<span class=\"synSpecial\">&lt;section </span><span class=\"synStatement\">class</span><span class=\"synSpecial\">=</span><span class=\"synConstant\">&quot;inner&quot;</span><span class=\"synSpecial\">&gt;</span>\n<span class=\"synSpecial\">  &lt;h1 </span><span class=\"synStatement\">class</span><span class=\"synSpecial\">=</span><span class=\"synConstant\">&quot;header&quot;</span><span class=\"synSpecial\">&gt;</span><span class=\"synIdentifier\">{{</span><span class=\"synSpecial\">title</span><span class=\"synIdentifier\">}}</span><span class=\"synSpecial\">&lt;/h1&gt;</span>\n<span class=\"synSpecial\">  &lt;div </span><span class=\"synStatement\">class</span><span class=\"synSpecial\">=</span><span class=\"synConstant\">&quot;box&quot;</span><span class=\"synSpecial\">&gt;</span>\n<span class=\"synSpecial\">    &lt;img src=</span><span class=\"synConstant\">&quot;{{img.url}}&quot;</span><span class=\"synSpecial\"> alt=</span><span class=\"synConstant\">&quot;{{img.alt}}&quot;</span><span class=\"synSpecial\"> /&gt;</span>\n<span class=\"synSpecial\">    &lt;p </span><span class=\"synStatement\">class</span><span class=\"synSpecial\">=</span><span class=\"synConstant\">&quot;flex&quot;</span><span class=\"synSpecial\">&gt;</span><span class=\"synIdentifier\">{{</span><span class=\"synSpecial\">text</span><span class=\"synIdentifier\">}}</span><span class=\"synSpecial\">&lt;/p&gt;</span>\n<span class=\"synSpecial\">  &lt;/div&gt;</span>\n<span class=\"synSpecial\">&lt;/section&gt;</span>\n<span class=\"synIdentifier\">&lt;/</span><span class=\"synStatement\">script</span><span class=\"synIdentifier\">&gt;</span>\n<span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">div</span><span class=\"synIdentifier\"> </span><span class=\"synType\">id</span><span class=\"synIdentifier\">=</span><span class=\"synConstant\">&quot;output&quot;</span><span class=\"synIdentifier\">&gt;&lt;/</span><span class=\"synStatement\">div</span><span class=\"synIdentifier\">&gt;</span>\n<span class=\"synComment\">&lt;!-- 略 --&gt;</span>\n</pre>\n<ul>\n<li>type=\"text/x-handlebars-template\"としたscript要素でテンプレートをくくる</li>\n<li>最終的に出力したい要素を用意する</li>\n<li>変数として動的にしたい部分を、{{ }} でくくって名前をつける</li>\n</ul><p>typeはscriptとして認識されなければ何でも良いです。</p>\n\n</div>\n<div class=\"section\">\n    <h4><a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/JavaScript\">JavaScript</a></h4>\n    <pre class=\"code lang-javascript\" data-lang=\"javascript\" data-unlink><span class=\"synComment\">// Handlebars.jsを読み込む</span>\n<span class=\"synComment\">// jQueryとかライブラリを読み込む</span>\n\n<span class=\"synIdentifier\">var</span> values = <span class=\"synIdentifier\">{</span>\n  title: <span class=\"synConstant\">'Hello Handlebars!'</span>,\n  img: <span class=\"synIdentifier\">{</span>\n    url: <span class=\"synConstant\">'http://example.com'</span>,\n    alt: <span class=\"synConstant\">'Something..'</span>\n  <span class=\"synIdentifier\">}</span>,\n  text: <span class=\"synConstant\">'My first Handlebars!'</span>\n<span class=\"synIdentifier\">}</span>;\n<span class=\"synIdentifier\">var</span> template = Handlebars.compile($(<span class=\"synConstant\">'#input'</span>).html());\n\n$(<span class=\"synConstant\">'#output'</span>).html(template(values));\n</pre>\n<ul>\n<li>変数オブジェクトを用意する</li>\n<li>Handlebarsでテンプレートを<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%A5%B3%A5%F3%A5%D1%A5%A4%A5%EB\">コンパイル</a>しておく</li>\n<li>最後に出力！</li>\n</ul><p>読み込ませる変数は、自分で用意することもあれば<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/API\">API</a>等から<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/json\">json</a>で取得することもあるでしょうけど、どっちでもやることは同じです。<br />\n↑のサンプルのように構えておけば、イベントで再度値を出力するときも楽だと思います。</p>\n\n</div>\n<div class=\"section\">\n    <h4>そうすると</h4>\n    <pre class=\"code lang-html\" data-lang=\"html\" data-unlink><span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">div</span><span class=\"synIdentifier\"> </span><span class=\"synType\">id</span><span class=\"synIdentifier\">=</span><span class=\"synConstant\">&quot;output&quot;</span><span class=\"synIdentifier\">&gt;</span>\n<span class=\"synIdentifier\">&lt;</span>section<span class=\"synIdentifier\"> </span><span class=\"synType\">class</span><span class=\"synIdentifier\">=</span><span class=\"synConstant\">&quot;inner&quot;</span><span class=\"synIdentifier\">&gt;</span>\n  <span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">h1</span><span class=\"synIdentifier\"> </span><span class=\"synType\">class</span><span class=\"synIdentifier\">=</span><span class=\"synConstant\">&quot;header&quot;</span><span class=\"synIdentifier\">&gt;</span>Hello Handlebars!<span class=\"synIdentifier\">&lt;/</span><span class=\"synStatement\">h1</span><span class=\"synIdentifier\">&gt;</span>\n  <span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">div</span><span class=\"synIdentifier\"> </span><span class=\"synType\">class</span><span class=\"synIdentifier\">=</span><span class=\"synConstant\">&quot;box&quot;</span><span class=\"synIdentifier\">&gt;</span>\n    <span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">img</span><span class=\"synIdentifier\"> </span><span class=\"synType\">src</span><span class=\"synIdentifier\">=</span><span class=\"synConstant\">&quot;http://example.com&quot;</span><span class=\"synIdentifier\"> </span><span class=\"synType\">alt</span><span class=\"synIdentifier\">=</span><span class=\"synConstant\">&quot;Something..&quot;</span><span class=\"synIdentifier\">&gt;</span>\n    <span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">p</span><span class=\"synIdentifier\"> </span><span class=\"synType\">class</span><span class=\"synIdentifier\">=</span><span class=\"synConstant\">&quot;flex&quot;</span><span class=\"synIdentifier\">&gt;</span>My first Handlebars!<span class=\"synIdentifier\">&lt;/</span><span class=\"synStatement\">p</span><span class=\"synIdentifier\">&gt;</span>\n  <span class=\"synIdentifier\">&lt;/</span><span class=\"synStatement\">div</span><span class=\"synIdentifier\">&gt;</span>\n<span class=\"synIdentifier\">&lt;/</span>section<span class=\"synIdentifier\">&gt;</span>\n<span class=\"synIdentifier\">&lt;/</span><span class=\"synStatement\">div</span><span class=\"synIdentifier\">&gt;</span>\n</pre><p>ってなHtmlが出力されるってわけですね。</p><p>img.urlとしてるのは、読み込ませたvaluesのコンテキストが云々かんぬん・・なのですが、だいたい雰囲気でわかるかと。<br />\n.じゃなくて/とかでも上がったり下がったりできるらしい。<br />\n<br />\n</p>\n\n</div>\n</div>\n<div class=\"section\">\n    <h3>ループ</h3>\n    <p><a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/Twitter\">Twitter</a>の<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/API\">API</a>など<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/json\">json</a>を山ほど取得して、だーっと表示したいケース。</p>\n\n<div class=\"section\">\n    <h4>Html</h4>\n    <pre class=\"code lang-html\" data-lang=\"html\" data-unlink><span class=\"synComment\">&lt;!-- 略 --&gt;</span>\n<span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">script</span><span class=\"synIdentifier\"> </span><span class=\"synType\">id</span><span class=\"synIdentifier\">=</span><span class=\"synConstant\">&quot;input&quot;</span><span class=\"synIdentifier\"> </span><span class=\"synType\">type</span><span class=\"synIdentifier\">=</span><span class=\"synConstant\">&quot;text/x-handlebars-template&quot;</span><span class=\"synIdentifier\">&gt;</span>\n<span class=\"synSpecial\">&lt;ul&gt;</span>\n<span class=\"synIdentifier\">{{</span><span class=\"synSpecial\">#each tweets</span><span class=\"synIdentifier\">}}</span>\n<span class=\"synSpecial\">  &lt;li&gt;</span><span class=\"synIdentifier\">{{</span><span class=\"synSpecial\">tweet</span><span class=\"synIdentifier\">}}</span><span class=\"synSpecial\"> by </span><span class=\"synIdentifier\">{{</span><span class=\"synSpecial\">user</span><span class=\"synIdentifier\">}}</span><span class=\"synSpecial\">&lt;/li&gt;</span>\n<span class=\"synIdentifier\">{{</span><span class=\"synSpecial\">/each</span><span class=\"synIdentifier\">}}</span>\n<span class=\"synSpecial\">&lt;/ul&gt;</span>\n<span class=\"synIdentifier\">&lt;/</span><span class=\"synStatement\">script</span><span class=\"synIdentifier\">&gt;</span>\n<span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">div</span><span class=\"synIdentifier\"> </span><span class=\"synType\">id</span><span class=\"synIdentifier\">=</span><span class=\"synConstant\">&quot;output&quot;</span><span class=\"synIdentifier\">&gt;&lt;/</span><span class=\"synStatement\">div</span><span class=\"synIdentifier\">&gt;</span>\n<span class=\"synComment\">&lt;!-- 略 --&gt;</span>\n</pre>\n<ul>\n<li>繰り返しには#eachと繰り返したいオブジェクト</li>\n<li>終わりを表す/eachをお忘れなく</li>\n</ul>\n</div>\n<div class=\"section\">\n    <h4><a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/JavaScript\">JavaScript</a></h4>\n    <pre class=\"code lang-javascript\" data-lang=\"javascript\" data-unlink><span class=\"synComment\">// Handlebars.jsを読み込む</span>\n<span class=\"synComment\">// jQueryとかライブラリを読み込む</span>\n\n<span class=\"synIdentifier\">var</span> values = <span class=\"synIdentifier\">{</span>\n  tweets: <span class=\"synIdentifier\">[</span>\n    <span class=\"synIdentifier\">{</span>\n      user: <span class=\"synConstant\">'Yuji'</span>,\n      tweet: <span class=\"synConstant\">'I</span><span class=\"synSpecial\">\\'</span><span class=\"synConstant\">m hungry...'</span>\n    <span class=\"synIdentifier\">}</span>,\n    <span class=\"synIdentifier\">{</span>\n      user: <span class=\"synConstant\">'Koji'</span>,\n      tweet: <span class=\"synConstant\">'I</span><span class=\"synSpecial\">\\'</span><span class=\"synConstant\">m sleepy...'</span>\n    <span class=\"synIdentifier\">}</span>,\n    <span class=\"synIdentifier\">{</span>\n      user: <span class=\"synConstant\">'Ryuji'</span>,\n      tweet: <span class=\"synConstant\">'I</span><span class=\"synSpecial\">\\'</span><span class=\"synConstant\">m xxxxxx...'</span>\n    <span class=\"synIdentifier\">}</span>\n  <span class=\"synIdentifier\">]</span>\n<span class=\"synIdentifier\">}</span>;\n<span class=\"synIdentifier\">var</span> template = Handlebars.compile($(<span class=\"synConstant\">'#input'</span>).html());\n\n$(<span class=\"synConstant\">'#output'</span>).html(template(values));\n</pre>\n<ul>\n<li>valuesではなく直接tweetsをつっこんでも良いです。（その場合は #each this</li>\n</ul>\n</div>\n<div class=\"section\">\n    <h4>そうすると</h4>\n    <pre class=\"code lang-html\" data-lang=\"html\" data-unlink><span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">div</span><span class=\"synIdentifier\"> </span><span class=\"synType\">id</span><span class=\"synIdentifier\">=</span><span class=\"synConstant\">&quot;output&quot;</span><span class=\"synIdentifier\">&gt;</span>\n<span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">ul</span><span class=\"synIdentifier\">&gt;</span>\n  <span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">li</span><span class=\"synIdentifier\">&gt;</span>I'm hungry... by Yuji<span class=\"synIdentifier\">&lt;/</span><span class=\"synStatement\">li</span><span class=\"synIdentifier\">&gt;</span>\n  <span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">li</span><span class=\"synIdentifier\">&gt;</span>I'm sleepy... by Koji<span class=\"synIdentifier\">&lt;/</span><span class=\"synStatement\">li</span><span class=\"synIdentifier\">&gt;</span>\n  <span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">li</span><span class=\"synIdentifier\">&gt;</span>I'm xxxxxx... by Ryuji<span class=\"synIdentifier\">&lt;/</span><span class=\"synStatement\">li</span><span class=\"synIdentifier\">&gt;</span>\n<span class=\"synIdentifier\">&lt;/</span><span class=\"synStatement\">ul</span><span class=\"synIdentifier\">&gt;</span>\n<span class=\"synIdentifier\">&lt;/</span><span class=\"synStatement\">div</span><span class=\"synIdentifier\">&gt;</span>\n</pre><p>まぁこの場合はoutput先をulにしておくのが良いかも。</p><p>あと、</p>\n<pre class=\"code lang-javascript\" data-lang=\"javascript\" data-unlink>   $(<span class=\"synConstant\">'#output'</span>).html(template(values)); <span class=\"synComment\">// 別にhtml()じゃなくて</span>\n<span class=\"synComment\">// $('#output').append(template(values)); // 別にappend()とかでももちろんOK</span>\n</pre><p>ここはHandlebars関係ないですから。<br />\n<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/Ajax\">Ajax</a>で随時追加・・系はこうなりますよね。</p>\n\n</div>\n</div>\n<div class=\"section\">\n    <h3>if文</h3>\n    <p>ここでちょっとHandlebarsについて。</p>\n\n<div class=\"section\">\n    <h4>ロジックレステンプレート</h4>\n    <p>というように、ロジックを持たないのがこのライブラリの特徴ですが、徹底的です。(表向きには<br />\n値が0以上だったら・・のif文くらい書けると思いがちですが、それもできません。(表向きには</p><p>サーバー側でロジックは作って、出力する値も確定させてそれをそのままクライアント側に表示する、そのためのテンプレートエンジン。<br />\nちょっとくらいクライアント側でも・・と思うなら、違う仕組みを使ったほうが便利かもですよ。</p><p>それらしい例と、if文の限界を・・。</p>\n\n</div>\n<div class=\"section\">\n    <h4>Html</h4>\n    <pre class=\"code lang-html\" data-lang=\"html\" data-unlink><span class=\"synComment\">&lt;!-- 略 --&gt;</span>\n<span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">script</span><span class=\"synIdentifier\"> </span><span class=\"synType\">id</span><span class=\"synIdentifier\">=</span><span class=\"synConstant\">&quot;input&quot;</span><span class=\"synIdentifier\"> </span><span class=\"synType\">type</span><span class=\"synIdentifier\">=</span><span class=\"synConstant\">&quot;text/x-handlebars-template&quot;</span><span class=\"synIdentifier\">&gt;</span>\n<span class=\"synSpecial\">&lt;section&gt;</span>\n<span class=\"synSpecial\">  &lt;h2&gt;パーティ状況&lt;/h2&gt;</span>\n<span class=\"synSpecial\">  &lt;dl&gt;</span>\n<span class=\"synSpecial\">    </span><span class=\"synIdentifier\">{{</span><span class=\"synSpecial\">#each myParty</span><span class=\"synIdentifier\">}}</span>\n<span class=\"synSpecial\">    &lt;dt&gt;しょくぎょう&lt;/dt&gt;</span>\n<span class=\"synSpecial\">    &lt;dd&gt;</span><span class=\"synIdentifier\">{{</span><span class=\"synSpecial\">name</span><span class=\"synIdentifier\">}}</span><span class=\"synSpecial\">&lt;/dd&gt;</span>\n<span class=\"synSpecial\">    &lt;dt&gt;HP&lt;/dt&gt;</span>\n<span class=\"synSpecial\">    &lt;dd&gt;</span><span class=\"synIdentifier\">{{</span><span class=\"synSpecial\">current_hp</span><span class=\"synIdentifier\">}}</span><span class=\"synSpecial\">/</span><span class=\"synIdentifier\">{{</span><span class=\"synSpecial\">max_hp</span><span class=\"synIdentifier\">}}</span><span class=\"synSpecial\">&lt;/dd&gt;</span>\n<span class=\"synSpecial\">    &lt;dt&gt;じょうたい&lt;/dt&gt;</span>\n<span class=\"synSpecial\">    &lt;dd&gt;</span><span class=\"synIdentifier\">{{</span><span class=\"synSpecial\">#</span><span class=\"synStatement\">if</span><span class=\"synSpecial\"> isLive</span><span class=\"synIdentifier\">}}</span><span class=\"synSpecial\">げんき</span><span class=\"synIdentifier\">{{</span><span class=\"synStatement\">else</span><span class=\"synIdentifier\">}}</span><span class=\"synSpecial\">ひんし</span><span class=\"synIdentifier\">{{</span><span class=\"synSpecial\">/</span><span class=\"synStatement\">if</span><span class=\"synIdentifier\">}}</span><span class=\"synSpecial\">&lt;/dd&gt;</span>\n\n<span class=\"synSpecial\">    </span><span class=\"synComment\">&lt;!--</span><span class=\"synSpecial\"> ほんとはこんなことしたい（けどできない </span><span class=\"synComment\">--&gt;</span>\n<span class=\"synSpecial\">    </span><span class=\"synComment\">&lt;!--</span><span class=\"synSpecial\"> &lt;dd&gt;</span><span class=\"synIdentifier\">{{</span><span class=\"synSpecial\">#</span><span class=\"synStatement\">if</span><span class=\"synSpecial\"> current_hp &gt; </span>80<span class=\"synIdentifier\">}}</span>\n<span class=\"synSpecial\">        すごくげんき</span>\n<span class=\"synSpecial\">      </span><span class=\"synIdentifier\">{{</span><span class=\"synSpecial\">elseif current_hp &gt; </span>0<span class=\"synIdentifier\">}}</span>\n<span class=\"synSpecial\">        げんき</span>\n<span class=\"synSpecial\">      </span><span class=\"synIdentifier\">{{</span><span class=\"synStatement\">else</span><span class=\"synIdentifier\">}}</span>\n<span class=\"synSpecial\">        ひんし</span>\n<span class=\"synSpecial\">      </span><span class=\"synIdentifier\">{{</span><span class=\"synSpecial\">/</span><span class=\"synStatement\">if</span><span class=\"synIdentifier\">}}</span><span class=\"synSpecial\">&lt;/dd&gt; </span><span class=\"synComment\">--&gt;</span>\n\n<span class=\"synSpecial\">    </span><span class=\"synIdentifier\">{{</span><span class=\"synSpecial\">/each</span><span class=\"synIdentifier\">}}</span>\n<span class=\"synSpecial\">  &lt;/dl&gt;</span>\n<span class=\"synSpecial\">&lt;/section&gt;</span>\n<span class=\"synIdentifier\">&lt;/</span><span class=\"synStatement\">script</span><span class=\"synIdentifier\">&gt;</span>\n<span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">div</span><span class=\"synIdentifier\"> </span><span class=\"synType\">id</span><span class=\"synIdentifier\">=</span><span class=\"synConstant\">&quot;output&quot;</span><span class=\"synIdentifier\">&gt;&lt;/</span><span class=\"synStatement\">div</span><span class=\"synIdentifier\">&gt;</span>\n<span class=\"synComment\">&lt;!-- 略 --&gt;</span>\n</pre><p>できません。</p>\n\n</div>\n<div class=\"section\">\n    <h4><a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/JavaScript\">JavaScript</a></h4>\n    <pre class=\"code lang-javascript\" data-lang=\"javascript\" data-unlink><span class=\"synComment\">// Handlebars.jsを読み込む</span>\n<span class=\"synComment\">// jQueryとかライブラリを読み込む</span>\n\n<span class=\"synIdentifier\">var</span> values = <span class=\"synIdentifier\">{</span>\n  myParty: <span class=\"synIdentifier\">[</span>\n    <span class=\"synIdentifier\">{</span>\n      name: <span class=\"synConstant\">'ゆうしゃ'</span>,\n      current_hp: 20,\n      max_hp: 100,\n      isLive: <span class=\"synConstant\">true</span>\n    <span class=\"synIdentifier\">}</span>,\n    <span class=\"synIdentifier\">{</span>\n      name: <span class=\"synConstant\">'けんじゃ'</span>,\n      current_hp: 0,\n      max_hp: 100,\n      isLive: <span class=\"synConstant\">false</span>\n    <span class=\"synIdentifier\">}</span>\n  <span class=\"synIdentifier\">]</span>\n<span class=\"synIdentifier\">}</span>;\n<span class=\"synIdentifier\">var</span> template = Handlebars.compile($(<span class=\"synConstant\">'#input'</span>).html());\n\n$(<span class=\"synConstant\">'#output'</span>).html(template(values));\n</pre>\n</div>\n<div class=\"section\">\n    <h4>そうすると</h4>\n    <pre class=\"code lang-html\" data-lang=\"html\" data-unlink><span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">div</span><span class=\"synIdentifier\"> </span><span class=\"synType\">id</span><span class=\"synIdentifier\">=</span><span class=\"synConstant\">&quot;output&quot;</span><span class=\"synIdentifier\">&gt;</span>\n<span class=\"synIdentifier\">&lt;</span>section<span class=\"synIdentifier\">&gt;</span>\n  <span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">h2</span><span class=\"synIdentifier\">&gt;</span>パーティ状況<span class=\"synIdentifier\">&lt;/</span><span class=\"synStatement\">h2</span><span class=\"synIdentifier\">&gt;</span>\n  <span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">dl</span><span class=\"synIdentifier\">&gt;</span>\n    <span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">dt</span><span class=\"synIdentifier\">&gt;</span>しょくぎょう<span class=\"synIdentifier\">&lt;/</span><span class=\"synStatement\">dt</span><span class=\"synIdentifier\">&gt;</span>\n    <span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">dd</span><span class=\"synIdentifier\">&gt;</span>ゆうしゃ<span class=\"synIdentifier\">&lt;/</span><span class=\"synStatement\">dd</span><span class=\"synIdentifier\">&gt;</span>\n    <span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">dt</span><span class=\"synIdentifier\">&gt;</span>HP<span class=\"synIdentifier\">&lt;/</span><span class=\"synStatement\">dt</span><span class=\"synIdentifier\">&gt;</span>\n    <span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">dd</span><span class=\"synIdentifier\">&gt;</span>20/100<span class=\"synIdentifier\">&lt;/</span><span class=\"synStatement\">dd</span><span class=\"synIdentifier\">&gt;</span>\n    <span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">dt</span><span class=\"synIdentifier\">&gt;</span>じょうたい<span class=\"synIdentifier\">&lt;/</span><span class=\"synStatement\">dt</span><span class=\"synIdentifier\">&gt;</span>\n    <span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">dd</span><span class=\"synIdentifier\">&gt;</span>げんき<span class=\"synIdentifier\">&lt;/</span><span class=\"synStatement\">dd</span><span class=\"synIdentifier\">&gt;</span>\n    \n    <span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">dt</span><span class=\"synIdentifier\">&gt;</span>しょくぎょう<span class=\"synIdentifier\">&lt;/</span><span class=\"synStatement\">dt</span><span class=\"synIdentifier\">&gt;</span>\n    <span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">dd</span><span class=\"synIdentifier\">&gt;</span>けんじゃ<span class=\"synIdentifier\">&lt;/</span><span class=\"synStatement\">dd</span><span class=\"synIdentifier\">&gt;</span>\n    <span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">dt</span><span class=\"synIdentifier\">&gt;</span>HP<span class=\"synIdentifier\">&lt;/</span><span class=\"synStatement\">dt</span><span class=\"synIdentifier\">&gt;</span>\n    <span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">dd</span><span class=\"synIdentifier\">&gt;</span>0/100<span class=\"synIdentifier\">&lt;/</span><span class=\"synStatement\">dd</span><span class=\"synIdentifier\">&gt;</span>\n    <span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">dt</span><span class=\"synIdentifier\">&gt;</span>じょうたい<span class=\"synIdentifier\">&lt;/</span><span class=\"synStatement\">dt</span><span class=\"synIdentifier\">&gt;</span>\n    <span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">dd</span><span class=\"synIdentifier\">&gt;</span>ひんし<span class=\"synIdentifier\">&lt;/</span><span class=\"synStatement\">dd</span><span class=\"synIdentifier\">&gt;</span>\n  <span class=\"synIdentifier\">&lt;/</span><span class=\"synStatement\">dl</span><span class=\"synIdentifier\">&gt;</span>\n<span class=\"synIdentifier\">&lt;/</span>section<span class=\"synIdentifier\">&gt;</span>\n<span class=\"synIdentifier\">&lt;/</span><span class=\"synStatement\">div</span><span class=\"synIdentifier\">&gt;</span>\n</pre>\n<ul>\n<li>true/falseもしくは値の有無程度のif文は書けます（無理やり</li>\n<li>HP20以上あったら・・とかは書けません。</li>\n</ul><p>ロジックレスですからー。</p><p>そこで最後に覚えておきたいのが、ヘルパー関数です。</p>\n\n</div>\n</div>\n<div class=\"section\">\n    <h3>ヘルパー関数</h3>\n    <p>Handlebarsには関数を定義して、結果を出力する機能があります。<br />\n何を隠そうeachもifも、それで定義されてるんです。</p><p>オリジナルな関数を作れるということは、なんでもできるということです。<br />\nたとえそれがHandlebarsの思想に背くものであったとしても・・・。</p><p>↑でやりたかったことを実現してみる</p>\n\n<div class=\"section\">\n    <h4>Html</h4>\n    <pre class=\"code lang-html\" data-lang=\"html\" data-unlink><span class=\"synComment\">&lt;!-- 略 --&gt;</span>\n<span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">script</span><span class=\"synIdentifier\"> </span><span class=\"synType\">id</span><span class=\"synIdentifier\">=</span><span class=\"synConstant\">&quot;input&quot;</span><span class=\"synIdentifier\"> </span><span class=\"synType\">type</span><span class=\"synIdentifier\">=</span><span class=\"synConstant\">&quot;text/x-handlebars-template&quot;</span><span class=\"synIdentifier\">&gt;</span>\n<span class=\"synSpecial\">&lt;section&gt;</span>\n<span class=\"synSpecial\">  &lt;h2&gt;パーティ状況&lt;/h2&gt;</span>\n<span class=\"synSpecial\">  &lt;dl&gt;</span>\n<span class=\"synSpecial\">    </span><span class=\"synIdentifier\">{{</span><span class=\"synSpecial\">#each myParty</span><span class=\"synIdentifier\">}}</span>\n<span class=\"synSpecial\">    &lt;dt&gt;しょくぎょう&lt;/dt&gt;</span>\n<span class=\"synSpecial\">    &lt;dd&gt;</span><span class=\"synIdentifier\">{{</span><span class=\"synSpecial\">name</span><span class=\"synIdentifier\">}}</span><span class=\"synSpecial\">&lt;/dd&gt;</span>\n<span class=\"synSpecial\">    &lt;dt&gt;HP&lt;/dt&gt;</span>\n<span class=\"synSpecial\">    &lt;dd&gt;</span><span class=\"synIdentifier\">{{</span><span class=\"synSpecial\">current_hp</span><span class=\"synIdentifier\">}}</span><span class=\"synSpecial\">/</span><span class=\"synIdentifier\">{{</span><span class=\"synSpecial\">max_hp</span><span class=\"synIdentifier\">}}</span><span class=\"synSpecial\">&lt;/dd&gt;</span>\n<span class=\"synSpecial\">    &lt;dt&gt;じょうたい&lt;/dt&gt;</span>\n<span class=\"synSpecial\">    &lt;dd&gt;</span><span class=\"synIdentifier\">{{</span><span class=\"synSpecial\">#showCondition current_hp</span><span class=\"synIdentifier\">}}{{</span><span class=\"synSpecial\">/showCondition</span><span class=\"synIdentifier\">}}</span><span class=\"synSpecial\">&lt;/dd&gt;</span>\n<span class=\"synSpecial\">    </span><span class=\"synIdentifier\">{{</span><span class=\"synSpecial\">/each</span><span class=\"synIdentifier\">}}</span>\n<span class=\"synSpecial\">  &lt;/dl&gt;</span>\n<span class=\"synSpecial\">&lt;/section&gt;</span>\n<span class=\"synIdentifier\">&lt;/</span><span class=\"synStatement\">script</span><span class=\"synIdentifier\">&gt;</span>\n<span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">div</span><span class=\"synIdentifier\"> </span><span class=\"synType\">id</span><span class=\"synIdentifier\">=</span><span class=\"synConstant\">&quot;output&quot;</span><span class=\"synIdentifier\">&gt;&lt;/</span><span class=\"synStatement\">div</span><span class=\"synIdentifier\">&gt;</span>\n<span class=\"synComment\">&lt;!-- 略 --&gt;</span>\n</pre><p>ここでは#showConditionという関数を定義することにします。</p>\n\n</div>\n<div class=\"section\">\n    <h4><a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/JavaScript\">JavaScript</a></h4>\n    <pre class=\"code lang-javascript\" data-lang=\"javascript\" data-unlink><span class=\"synComment\">// Handlebars.jsを読み込む</span>\n<span class=\"synComment\">// jQueryとかライブラリを読み込む</span>\n\n<span class=\"synIdentifier\">var</span> values = <span class=\"synIdentifier\">{</span>\n  myParty: <span class=\"synIdentifier\">[</span>\n    <span class=\"synIdentifier\">{</span>\n      name: <span class=\"synConstant\">'ゆうしゃ'</span>,\n      current_hp: 90,\n      max_hp: 100,\n      isLive: <span class=\"synConstant\">true</span>\n    <span class=\"synIdentifier\">}</span>,\n    <span class=\"synIdentifier\">{</span>\n      name: <span class=\"synConstant\">'けんじゃ'</span>,\n      current_hp: 0,\n      max_hp: 100,\n      isLive: <span class=\"synConstant\">false</span>\n    <span class=\"synIdentifier\">}</span>,\n    <span class=\"synIdentifier\">{</span>\n      name: <span class=\"synConstant\">'ぶとうか'</span>,\n      current_hp: 30,\n      max_hp: 100,\n      isLive: <span class=\"synConstant\">true</span>\n    <span class=\"synIdentifier\">}</span>\n  <span class=\"synIdentifier\">]</span>\n<span class=\"synIdentifier\">}</span>;\n<span class=\"synIdentifier\">var</span> template = Handlebars.compile($(<span class=\"synConstant\">'#input'</span>).html());\n\nHandlebars.registerHelper(<span class=\"synConstant\">'showCondition'</span>, <span class=\"synIdentifier\">function</span>(cond, opt) <span class=\"synIdentifier\">{</span>\n  <span class=\"synIdentifier\">var</span> condition = <span class=\"synConstant\">''</span>;\n  <span class=\"synStatement\">if</span> (cond &gt; 80) <span class=\"synIdentifier\">{</span>\n    condition = <span class=\"synConstant\">'すごくげんき'</span>;\n  <span class=\"synIdentifier\">}</span> <span class=\"synStatement\">else</span> <span class=\"synStatement\">if</span> (cond &gt; 10) <span class=\"synIdentifier\">{</span>\n    condition = <span class=\"synConstant\">'げんき'</span>;\n  <span class=\"synIdentifier\">}</span> <span class=\"synStatement\">else</span> <span class=\"synIdentifier\">{</span>\n    condition = <span class=\"synConstant\">'ひんし'</span>;\n  <span class=\"synIdentifier\">}</span>\n  <span class=\"synStatement\">return</span> condition;\n<span class=\"synIdentifier\">}</span>);\n\n$(<span class=\"synConstant\">'#output'</span>).html(template(values));\n</pre><p>見ての通り、showConditionはcurrent_hpを引数にとり、じょうたいを返します。</p>\n\n</div>\n<div class=\"section\">\n    <h4>そうすると</h4>\n    <pre class=\"code lang-html\" data-lang=\"html\" data-unlink><span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">div</span><span class=\"synIdentifier\"> </span><span class=\"synType\">id</span><span class=\"synIdentifier\">=</span><span class=\"synConstant\">&quot;output&quot;</span><span class=\"synIdentifier\">&gt;</span>\n<span class=\"synIdentifier\">&lt;</span>section<span class=\"synIdentifier\">&gt;</span>\n  <span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">h2</span><span class=\"synIdentifier\">&gt;</span>パーティ状況<span class=\"synIdentifier\">&lt;/</span><span class=\"synStatement\">h2</span><span class=\"synIdentifier\">&gt;</span>\n  <span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">dl</span><span class=\"synIdentifier\">&gt;</span>\n    <span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">dt</span><span class=\"synIdentifier\">&gt;</span>しょくぎょう<span class=\"synIdentifier\">&lt;/</span><span class=\"synStatement\">dt</span><span class=\"synIdentifier\">&gt;</span>\n    <span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">dd</span><span class=\"synIdentifier\">&gt;</span>ゆうしゃ<span class=\"synIdentifier\">&lt;/</span><span class=\"synStatement\">dd</span><span class=\"synIdentifier\">&gt;</span>\n    <span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">dt</span><span class=\"synIdentifier\">&gt;</span>HP<span class=\"synIdentifier\">&lt;/</span><span class=\"synStatement\">dt</span><span class=\"synIdentifier\">&gt;</span>\n    <span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">dd</span><span class=\"synIdentifier\">&gt;</span>90/100<span class=\"synIdentifier\">&lt;/</span><span class=\"synStatement\">dd</span><span class=\"synIdentifier\">&gt;</span>\n    <span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">dt</span><span class=\"synIdentifier\">&gt;</span>じょうたい<span class=\"synIdentifier\">&lt;/</span><span class=\"synStatement\">dt</span><span class=\"synIdentifier\">&gt;</span>\n    <span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">dd</span><span class=\"synIdentifier\">&gt;</span>すごくげんき<span class=\"synIdentifier\">&lt;/</span><span class=\"synStatement\">dd</span><span class=\"synIdentifier\">&gt;</span>\n    \n    <span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">dt</span><span class=\"synIdentifier\">&gt;</span>しょくぎょう<span class=\"synIdentifier\">&lt;/</span><span class=\"synStatement\">dt</span><span class=\"synIdentifier\">&gt;</span>\n    <span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">dd</span><span class=\"synIdentifier\">&gt;</span>けんじゃ<span class=\"synIdentifier\">&lt;/</span><span class=\"synStatement\">dd</span><span class=\"synIdentifier\">&gt;</span>\n    <span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">dt</span><span class=\"synIdentifier\">&gt;</span>HP<span class=\"synIdentifier\">&lt;/</span><span class=\"synStatement\">dt</span><span class=\"synIdentifier\">&gt;</span>\n    <span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">dd</span><span class=\"synIdentifier\">&gt;</span>0/100<span class=\"synIdentifier\">&lt;/</span><span class=\"synStatement\">dd</span><span class=\"synIdentifier\">&gt;</span>\n    <span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">dt</span><span class=\"synIdentifier\">&gt;</span>じょうたい<span class=\"synIdentifier\">&lt;/</span><span class=\"synStatement\">dt</span><span class=\"synIdentifier\">&gt;</span>\n    <span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">dd</span><span class=\"synIdentifier\">&gt;</span>ひんし<span class=\"synIdentifier\">&lt;/</span><span class=\"synStatement\">dd</span><span class=\"synIdentifier\">&gt;</span>\n    \n    <span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">dt</span><span class=\"synIdentifier\">&gt;</span>しょくぎょう<span class=\"synIdentifier\">&lt;/</span><span class=\"synStatement\">dt</span><span class=\"synIdentifier\">&gt;</span>\n    <span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">dd</span><span class=\"synIdentifier\">&gt;</span>ぶとうか<span class=\"synIdentifier\">&lt;/</span><span class=\"synStatement\">dd</span><span class=\"synIdentifier\">&gt;</span>\n    <span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">dt</span><span class=\"synIdentifier\">&gt;</span>HP<span class=\"synIdentifier\">&lt;/</span><span class=\"synStatement\">dt</span><span class=\"synIdentifier\">&gt;</span>\n    <span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">dd</span><span class=\"synIdentifier\">&gt;</span>30/100<span class=\"synIdentifier\">&lt;/</span><span class=\"synStatement\">dd</span><span class=\"synIdentifier\">&gt;</span>\n    <span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">dt</span><span class=\"synIdentifier\">&gt;</span>じょうたい<span class=\"synIdentifier\">&lt;/</span><span class=\"synStatement\">dt</span><span class=\"synIdentifier\">&gt;</span>\n    <span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">dd</span><span class=\"synIdentifier\">&gt;</span>げんき<span class=\"synIdentifier\">&lt;/</span><span class=\"synStatement\">dd</span><span class=\"synIdentifier\">&gt;</span>\n  <span class=\"synIdentifier\">&lt;/</span><span class=\"synStatement\">dl</span><span class=\"synIdentifier\">&gt;</span>\n<span class=\"synIdentifier\">&lt;/</span>section<span class=\"synIdentifier\">&gt;</span>\n<span class=\"synIdentifier\">&lt;/</span><span class=\"synStatement\">div</span><span class=\"synIdentifier\">&gt;</span>\n</pre><p>という具合です。</p><p>もちろんこんな風にHandlebarsに背いてガチガチに書くもよしですが、こんな例も載せておきます。</p>\n\n</div>\n<div class=\"section\">\n    <h4>Html</h4>\n    <pre class=\"code lang-html\" data-lang=\"html\" data-unlink><span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">p</span><span class=\"synIdentifier\">&gt;</span>\n{{#isGreaterThanZero user.current_hp}}\n  まだ戦えるよ！\n{{else}}\n  HPがやばい！\n{{/isGreaterThanZero}}\n<span class=\"synIdentifier\">&lt;/</span><span class=\"synStatement\">p</span><span class=\"synIdentifier\">&gt;</span>\n</pre>\n</div>\n<div class=\"section\">\n    <h4><a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/JavaScript\">JavaScript</a></h4>\n    <pre class=\"code lang-javascript\" data-lang=\"javascript\" data-unlink>Handlebars.registerHelper(<span class=\"synConstant\">'isGreaterThanZero'</span>, <span class=\"synIdentifier\">function</span>(cond, opt) <span class=\"synIdentifier\">{</span>\nconsole.log();\n  <span class=\"synStatement\">if</span>(cond &gt; 0) <span class=\"synIdentifier\">{</span>\n    <span class=\"synStatement\">return</span> opt.fn(<span class=\"synIdentifier\">this</span>); <span class=\"synComment\">// まだ戦えるよ！　のこと</span>\n  <span class=\"synIdentifier\">}</span> <span class=\"synStatement\">else</span> <span class=\"synIdentifier\">{</span>\n    <span class=\"synStatement\">return</span> opt.inverse(<span class=\"synIdentifier\">this</span>); <span class=\"synComment\">// HPがやばい！　のこと</span>\n  <span class=\"synIdentifier\">}</span>\n<span class=\"synIdentifier\">}</span>);\n</pre><p>こっちのがまだHandlebarsっぽいｗ</p>\n\n<div class=\"section\">\n    <h5>registerHelperの引数</h5>\n    <pre class=\"code lang-javascript\" data-lang=\"javascript\" data-unlink>Handlebars.registerHelper(<span class=\"synConstant\">'someFunc'</span>, <span class=\"synIdentifier\">function</span>(cond1, cond2, condN, opt) <span class=\"synIdentifier\">{</span>\n  <span class=\"synComment\">// ここで処理</span>\n<span class=\"synIdentifier\">}</span>);\n</pre><p>引数はいくらでも追加できます。<br />\nそして引数とは別に、オプションとなる引数が使えます。<br />\ninverseとかhashとかfnとか。<br />\n<br />\n</p>\n\n</div>\n</div>\n</div>\n<div class=\"section\">\n    <h3>おわりに</h3>\n    <p>だいたいのことには触れたと思いますが、足りない部分は公式へ。</p>\n\n    <blockquote>\n        <p>参考：<a href=\"http://handlebarsjs.com/\" target=\"_blank\">Handlebars.js: Minimal Templating on Steroids</a><br />\n参考：<a href=\"http://tryhandlebarsjs.com/\" target=\"_blank\">Try Handlebars.js in your web browser</a></p>\n\n    </blockquote>\n\n</div>"
}
