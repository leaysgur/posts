{
  "title": "MobX 5.0.0 について",
  "html": "<p>出ました！</p><p>リリースブログもあるけど、どことなくポエミーなので、おとなしく<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/ChangeLog\">ChangeLog</a>見たほうがいいかも・・ｗ</p>\n\n    <blockquote>\n        <p><a href=\"https://github.com/mobxjs/mobx/blob/master/CHANGELOG.md#500\">mobx/CHANGELOG.md at master &middot; mobxjs/mobx &middot; GitHub</a></p>\n\n    </blockquote>\n\n<div class=\"section\">\n    <h3>3行まとめ</h3>\n    \n<ul>\n<li>v4移行してればほぼやることない</li>\n<li>`Proxy` ベースになったので、古い環境は要Polyfill</li>\n<li>コードベースがES5からES6(ES2015)になったので、古い環境は（ｒｙ</li>\n</ul><p>v4移行についてはこちらもどうぞ。</p>\n\n    <blockquote>\n        <p><a href=\"https://lealog.hateblo.jp/entry/2018/03/13/172034\">MobX 4.0.0 &#x306B;&#x3064;&#x3044;&#x3066; - console.lealog();</a></p>\n\n    </blockquote>\n<p>基本的にv4とv5の<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/API\">API</a>にそこまで違いはなく、中身の実装が違うだけでパフォーマンス的にもそこまで差はないとのこと。</p>\n\n</div>\n<div class=\"section\">\n    <h3>Proxyベースになって変わったこと</h3>\n    <p>v5からは、内部的な実装が`Proxy`を使ったものに変わりました。`immer`で培ったノウハウですね。</p>\n\n<div class=\"section\">\n    <h4>Object</h4>\n    <p>これまでのMobXは、宣言時点でマークされてないプロパティはObservableではなかったので、そのあたりの扱いがやや面倒だった。</p>\n<pre class=\"code lang-javascript\" data-lang=\"javascript\" data-unlink><span class=\"synStatement\">const</span> <span class=\"synIdentifier\">{</span> observable, autorun <span class=\"synIdentifier\">}</span> = mobx;\n\n<span class=\"synStatement\">const</span> obj = observable(<span class=\"synIdentifier\">{</span> x: 1 <span class=\"synIdentifier\">}</span>);\n\nautorun(() =&gt; <span class=\"synIdentifier\">{</span>\n  console.log(<span class=\"synType\">Object</span>.keys(obj));\n<span class=\"synIdentifier\">}</span>)\n\nobj.y = 1; <span class=\"synComment\">// &lt;-</span>\n</pre><p>v4までは、`obj.y`が増えても検知できなくて、それ用の<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/API\">API</a>を使ってた or `Map`でがんばってた。</p>\n\n<ul>\n<li><a href=\"https://mobx.js.org/refguide/object-api.html\">Object api | MobX</a></li>\n<li><a href=\"https://mobx.js.org/refguide/map.html\">maps | MobX</a></li>\n</ul><p>しかしついにこれがv5では検知できるように！やった！</p>\n\n</div>\n<div class=\"section\">\n    <h4>Array</h4>\n    <pre class=\"code lang-javascript\" data-lang=\"javascript\" data-unlink><span class=\"synStatement\">const</span> <span class=\"synIdentifier\">{</span> observable <span class=\"synIdentifier\">}</span> = mobx;\n\n<span class=\"synStatement\">const</span> arr = observable(<span class=\"synIdentifier\">[</span>1, 2, 3<span class=\"synIdentifier\">]</span>);\n\n<span class=\"synType\">Array</span>.isArray(arr); <span class=\"synComment\">// &lt;-</span>\n</pre><p>v4までは、これが`false`だった。<br />\nなのでMobX界の外に出るときは、`.slice()`するなり`toJS()`したりしてた。</p><p>しかしこれがv5では`true`になります！！Proxy最高！</p>\n\n</div>\n</div>\n<div class=\"section\">\n    <h3>v4 -> v5移行</h3>\n    \n<ul>\n<li>v4時点でDepricatedだったものを確実に消す</li>\n<li>上記のObjectとArrayの<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%A5%EF%A1%BC%A5%AF%A5%A2%A5%E9%A5%A6%A5%F3%A5%C9\">ワークアラウンド</a>があれば消す\n<ul>\n<li>ただし、ObservableArrayに対して`.reverse()`と`.sort()`を呼んでるところは、`.slice()`したままに</li>\n</ul></li>\n<li>`mobx-react`と一緒に使ってる場合は、そっちのバージョンも上げる</li>\n</ul><p>これだけ。</p><p>Jestとの組み合わせでバグがあったっぽいけど、すでに解消済み。</p>\n\n    <blockquote>\n        <p><a href=\"https://github.com/facebook/jest/issues/6392\">`toEqual` does not treat non-enumerable properties equally &middot; Issue #6392 &middot; facebook/jest &middot; GitHub</a></p>\n\n    </blockquote>\n<p>`master`にはマージ済みなので、`23.1.1`のリリース待ち。</p>\n\n</div>"
}
