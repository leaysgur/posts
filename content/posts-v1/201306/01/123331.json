{
  "title": "innerTextとtextContentの違い",
  "html": "<p>いきなりなんのこっちゃですが。<br />\nこれは意外に実用的な知識な気がしてきた。</p><p>そもそもは、DOMのセレクタ達のパフォーマンスが気になって以下のようなてきとーなサンプルを作ってたとき。<br />\nふと、結果をDOMに落とす時に、どう書くのが良いんやろ？って思ったのがきっかけ。</p>\n\n<div class=\"section\">\n    <h3>似てるようで全然違った</h3>\n    <p>どちらもNodeからテキストを得るっちゃ得るけども。<br />\n困ったときのMDN！</p>\n\n    <blockquote>\n        <p>参考：<a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Node.textContent\" target=\"_blank\" title=\"Node.textContent - Web API reference | MDN\">Node.textContent - Web API reference | MDN</a></p>\n\n    </blockquote>\n\n<div class=\"section\">\n    <h4>違いそのいち</h4>\n    \n    <blockquote>\n        <p>Note that while textContent gets the content of all elements, including script and style elements, the mostly equivalent IE-specific property, innerText, does not.</p>\n\n    </blockquote>\n<p>対象がscriptタグやらstyleタグやったりすると、innerTextでは中身が取得できない。<br />\n・・・手元のChromeやとできたので、IEだけなんかな？</p>\n\n</div>\n<div class=\"section\">\n    <h4>違いそのに</h4>\n    \n    <blockquote>\n        <p>innerText is also aware of style and will not return the text of hidden elements, whereas textContent will.</p>\n\n    </blockquote>\n<p>visibilty: hiddenとか、改行コードのそれとか、DOMには存在するけどレンダリングされた時に見えてないものは、innerTextでは取得できない。</p>\n\n</div>\n<div class=\"section\">\n    <h4>違いそのさん</h4>\n    \n    <blockquote>\n        <p>As innerText is aware of CSS styling, it will trigger a reflow, whereas textContent will not.</p>\n\n    </blockquote>\n<p>innerTextで書き換えるとリフローが発生するけど、textContentだと発生しない。<br />\nこれはデカい違いなのではなかろうか。<br />\n<br />\n</p>\n\n    <blockquote>\n        <p>参考：<a href=\"http://kellegous.com/j/2013/02/27/innertext-vs-textcontent/\" target=\"_blank\" title=\"kelly norton: innerText vs. textContent\">kelly norton: innerText vs. textContent</a></p>\n\n    </blockquote>\n<p>ここ見るのがいちばんわかりやすかったです。</p>\n\n</div>\n</div>"
}
