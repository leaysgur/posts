{
  "title": "2018年版: getUserMedia()で画面のストリームを取得する",
  "html": "<p>2018年2月verです。<br />\n基本的に2017年8月に書いた記事と変わってない。NO進歩。</p>\n\n    <blockquote>\n        <p><a href=\"http://lealog.hateblo.jp/entry/2017/08/02/161204\">2017&#x5E74;&#x7248;: getUserMedia()&#x3067;&#x753B;&#x9762;&#x306E;&#x30B9;&#x30C8;&#x30EA;&#x30FC;&#x30E0;&#x3092;&#x53D6;&#x5F97;&#x3059;&#x308B; - console.lealog();</a></p>\n\n    </blockquote>\n<p>この記事に書いてること + さらに最近調べたことをメモ。<br />\nなんかおかしかったら教えてください。<br />\n<br />\n</p>\n\n<div class=\"section\">\n    <h3>対応ブラウザ</h3>\n    \n<ul>\n<li>Chrome</li>\n<li>Firefox</li>\n</ul><p>以上。</p><p>Safariの実装は進んでるらしいが、まだ。</p>\n\n</div>\n<div class=\"section\">\n    <h3>Chrome</h3>\n    \n<ul>\n<li>Chrome拡張が必須</li>\n<li>参考実装\n<ul>\n<li><a href=\"https://github.com/muaz-khan/WebRTC-Experiment/tree/master/getScreenId.js\">https://github.com/muaz-khan/WebRTC-Experiment/tree/master/getScreenId.js</a></li>\n<li><a href=\"https://github.com/skyway/skyway-screenshare/\">https://github.com/skyway/skyway-screenshare/</a></li>\n</ul></li>\n</ul><p>これで得た`screenId`を使って`getUserMedia()`するだけ。</p>\n<pre class=\"code lang-javascript\" data-lang=\"javascript\" data-unlink><span class=\"synIdentifier\">{</span>\n  video: <span class=\"synIdentifier\">{</span>\n    mandatory: <span class=\"synIdentifier\">{</span>\n      chromeMediaSource:   <span class=\"synConstant\">'desktop'</span>,\n      chromeMediaSourceId: <span class=\"synConstant\">''</span>, <span class=\"synComment\">// 取れたscreenId</span>\n  <span class=\"synIdentifier\">}</span>,\n<span class=\"synIdentifier\">}</span>\n</pre><p>`mandatory`とかいう古い感じの制約を指定するので、たとえば`width: { min: 300}`なんかは`maxWidth: 300`みたく書く必要があって、混ぜるとエラーになる。</p>\n\n</div>\n<div class=\"section\">\n    <h3>Firefox</h3>\n    \n<ul>\n<li>拡張も設定も不要</li>\n</ul><p>`getUserMedia()`するだけ。</p>\n<pre class=\"code lang-javascript\" data-lang=\"javascript\" data-unlink><span class=\"synIdentifier\">{</span>\n  video: <span class=\"synIdentifier\">{</span> mediaSource: <span class=\"synConstant\">'window'</span> <span class=\"synIdentifier\">}</span>,\n<span class=\"synIdentifier\">}</span>\n</pre><p>指定できるのはこの3つ。</p>\n\n<ul>\n<li>`window`</li>\n<li>`application`</li>\n<li>`screen`</li>\n</ul><p>Chromeと違って、いつもどおりの書き方で`width`とかは指定できる。</p>\n\n</div>\n<div class=\"section\">\n    <h3>その他</h3>\n    \n<div class=\"section\">\n    <h4>音声も送りたい</h4>\n    <p>↑で書いたオブジェクトに、`{ audio: true }`を加えてご自由にどうぞ・・といけるのはFirefoxだけ。</p><p><s><br />\nChromeは`{ audio: false }`しか認めてくれない。<br />\nなので別途用意しておいた音声の`MediaStreamTrack`と、画面のストリームに入ってる映像の`MediaStreamTrack`を使って、自前で新たな`MediaStream`を用意しないとダメ。</p><p>その他、画面共有されてるアプリから出てる音だけを送りたい・・みたいなのはできない。（今のところブラウザのあらゆるAPIを組み合わせてもできない）</s></p><p>と思ってたら、ご丁寧にTwitterで教えてもらえまして・・、</p>\n\n    <blockquote>\n        <p><a href=\"https://qiita.com/gtk2k/items/ac08ddeeaf74f3126f81#chrome%E3%81%A7%E3%81%AE%E3%82%B7%E3%82%B9%E3%83%86%E3%83%A0%E3%81%BE%E3%81%9F%E3%81%AF%E3%82%BF%E3%83%96%E3%81%AE%E3%82%AA%E3%83%BC%E3%83%87%E3%82%A3%E3%82%AA%E3%82%AD%E3%83%A3%E3%83%97%E3%83%81%E3%83%A3%E3%83%BC\">&#x3010;&#x5099;&#x5FD8;&#x9332;&#x3011;[getUserMedia] Chrome&#x3068;Electron(&#x3068;Firefox)&#x3067;&#x30B9;&#x30AF;&#x30EA;&#x30FC;&#x30F3;&#x30AD;&#x30E3;&#x30D7;&#x30C1;&#x30E3;&#x30FC;&#x304A;&#x3088;&#x3073;Chrome&#x3068;Electron&#x3067;(&#x30B7;&#x30B9;&#x30C6;&#x30E0;&#x307E;&#x305F;&#x306F;&#x30BF;&#x30D6;)&#x30AA;&#x30FC;&#x30C7;&#x30A3;&#x30AA;&#x306E;&#x30AD;&#x30E3;&#x30D7;&#x30C1;&#x30E3;&#x30FC; - Qiita</a></p>\n\n    </blockquote>\n<p>この記事にあるように、Chrome拡張側でもその指定をしていれば、音声もまとめた`MediaStream`が取れるそうな。</p><p>まぁただWeb会議みたく通話しながら・・の場合は、打ち消し線のところで書いてるように、別途音声と画面の映像をマージして扱わないとダメなので、ケースに応じてかな。</p>\n\n</div>\n<div class=\"section\">\n    <h4>`<a href=\"http://localhost\">http://localhost</a>`でもできるか</h4>\n    <p>Chromeはできる。</p><p>Firefoxはデフォルトではできない。通常のカメラ映像の取得はできるのに・・。</p><p>`about:config`で、`media.navigator.permission.disabled`を`true`にすればできるようになる。<br />\nただこのフラグ、`getUserMedia()`のパーミッションのダイアログをスキップする挙動になるので、</p>\n\n<ul>\n<li>どのウィンドウを共有するとか選べない</li>\n<li>デフォルトのカメラ・マイクから変更できない</li>\n</ul><p>というクソ仕様なので、ちょっとした挙動確認くらいにしか使えない。</p>\n\n</div>\n<div class=\"section\">\n    <h4>画面共有を停止されたかどうか</h4>\n    <p>Chromeはなんか画面の下の方に、ご丁寧に「共有を停止」みたいなUIを出してくれる。<br />\nあれで停止されると、ブラウザ外の出来事なのでどうやって拾えばいいの？ってなる。</p><p>あれを拾うには、取得した`MediaStream`もとい画面の`MediaStreamTrack`のイベントを監視する。</p>\n<pre class=\"code lang-javascript\" data-lang=\"javascript\" data-unlink><span class=\"synStatement\">const</span> <span class=\"synIdentifier\">[</span>screenVideoTrack<span class=\"synIdentifier\">]</span> = screenStream.getVideoTracks();\n\nscreenVideoTrack.addEventListener(<span class=\"synConstant\">'ended'</span>, () =&gt; <span class=\"synIdentifier\">{</span>\n  <span class=\"synComment\">// UIを戻すなりなんなり</span>\n<span class=\"synIdentifier\">}</span>, <span class=\"synIdentifier\">{</span> once: <span class=\"synConstant\">true</span> <span class=\"synIdentifier\">}</span>);\n</pre>\n</div>\n<div class=\"section\">\n    <h4>この先の動きは？</h4>\n    <p>Safariがいま実装してるように、将来的には`getUserMedia()`ではなく、`getDisplayMedia()`を使うようになるとは思う・・。</p><p>が、いつになるかわからんので気長に待ちましょう。</p>\n\n</div>\n</div>"
}
