{
  "title": "Svelte Summit 2020 気になったトークのまとめ",
  "html": "\n    <blockquote>\n        <p><a href=\"https://sveltesummit.com/\">https://sveltesummit.com/</a><br />\n<a href=\"https://www.youtube.com/watch?v=vHHLLJA0b70\">https://www.youtube.com/watch?v=vHHLLJA0b70</a></p>\n\n    </blockquote>\n<p>JST夜中スタートだとリアルタイムで見れない...😴</p><p>というわけで、気になるトークだけまとめました。<br />\n<br />\n</p>\n\n<div class=\"section\">\n    <h3>The Zen of Svelte (Morgan Williams)</h3>\n    \n    <blockquote>\n        <p><a href=\"https://www.youtube.com/watch?v=vHHLLJA0b70&t=683s\">https://www.youtube.com/watch?v=vHHLLJA0b70&t=683s</a></p>\n\n    </blockquote>\n\n<ul>\n<li>Svelteはフレームワークである\n<ul>\n<li>そして学びやすいのが特徴</li>\n</ul></li>\n<li>Pythonのように、Zenの心得がある\n<ul>\n<li><a href=\"https://github.com/feltcoop/why-svelte#easy-to-learn\">https://github.com/feltcoop/why-svelte#easy-to-learn</a></li>\n</ul></li>\n<li>作者のRich氏もこう言ってる\n<ul>\n<li>Frameworks are not tools for organizing your code,</li>\n<li>They are tools for organizing your mind.</li>\n</ul></li>\n<li>コアなプログラマーでなくても、そんな知識がなくても、扱える</li>\n<li>HTMLが書けるなら、Svelteは書ける\n<ul>\n<li>好きなテンプレートエンジンも使える（preprocessorで）</li>\n</ul></li>\n<li>REPLつきのTutorialも学びやすい\n<ul>\n<li><a href=\"https://svelte.dev/tutorial/basics\">https://svelte.dev/tutorial/basics</a></li>\n</ul></li>\n<li>PythonやjQueryがそうだったように、本来の仕事にフォーカスできる\n<ul>\n<li>よりクリエイティブに、日々の仕事に取り組めるということ</li>\n</ul></li>\n</ul>\n</div>\n<div class=\"section\">\n    <h3>Svelte at the Edge: Powering Svelte Apps with Cloudflare Workers (Luke Edwards)</h3>\n    \n    <blockquote>\n        <p><a href=\"https://www.youtube.com/watch?v=vHHLLJA0b70&t=7168s\">https://www.youtube.com/watch?v=vHHLLJA0b70&t=7168s</a></p>\n\n    </blockquote>\n\n<ul>\n<li>Workerとは\n<ul>\n<li>いろんな種類がある</li>\n</ul></li>\n<li>Web Workers\n<ul>\n<li>メインスレッドから処理を逃がすためのもの</li>\n<li>最も扱いやすい</li>\n</ul></li>\n<li>Worklets\n<ul>\n<li>特定分野にフォーカスしたもの</li>\n<li>Audio, Paint, ...etc</li>\n</ul></li>\n<li>Service Workers\n<ul>\n<li>ネットワーク、キャッシュ境界とのProxy</li>\n<li>HTTPコールにたいして、その挙動を変えることもできる</li>\n</ul></li>\n<li>Cloudflare Workers\n<ul>\n<li>本日のテーマ</li>\n<li>Service Workerと同じ立ち位置</li>\n</ul></li>\n<li>違い: 参照するキャッシュは、CloudflareのCDNにできる\n<ul>\n<li>エッジは世界中にある</li>\n</ul></li>\n<li>違い: Workers KVが使える\n<ul>\n<li><a href=\"https://developers.cloudflare.com/workers/learning/how-kv-works\">https://developers.cloudflare.com/workers/learning/how-kv-works</a></li>\n<li>グローバルなKeyValueストア</li>\n</ul></li>\n<li>Worker Sites\n<ul>\n<li>Cloudflareの`wrangler`を使う\n<ul>\n<li><a href=\"https://github.com/cloudflare/wrangler\">https://github.com/cloudflare/wrangler</a></li>\n</ul></li>\n<li>Workers KVに静的なアセットをアップロードして、Workerから読み出す</li>\n<li>そうやってサイトを作るアプローチ</li>\n</ul></li>\n<li>この仕組みを使って、SvelteをWorkerでSSRする</li>\n<li>デモ: <a href=\"https://github.com/lukeed/svelte-ssr-worker\">https://github.com/lukeed/svelte-ssr-worker</a></li>\n<li>このアプローチのメリット\n<ul>\n<li>より柔軟な設定ができる</li>\n<li>`Cache-Control`ヘッダも自在にできる</li>\n<li>裏側のバケットを自由にできる</li>\n</ul></li>\n<li>このアプローチのデメリット\n<ul>\n<li>ルーティング部分を実装する必要がある</li>\n<li>扱うパスも列挙しないといけない</li>\n<li>Workerと、アセットを別々にデプロイする必要がある</li>\n</ul></li>\n<li>ただこのデプロイ部分はツール化できる</li>\n<li>[WIP] <a href=\"https://github.com/lukeed/freshie\">https://github.com/lukeed/freshie</a>\n<ul>\n<li>SvelteではなくReactでもVueでもなんでも使える</li>\n<li>デプロイ先を、Cloudflare Workerにするか、従来のNode.jsでのSSRにするかも選べる</li>\n</ul></li>\n</ul>\n</div>\n<div class=\"section\">\n    <h3>Futuristic Web Development (Rich Harris)</h3>\n    \n    <blockquote>\n        <p><a href=\"https://www.youtube.com/watch?v=vHHLLJA0b70&t=24060s\">https://www.youtube.com/watch?v=vHHLLJA0b70&t=24060s</a></p>\n\n    </blockquote>\n\n<ul>\n<li>Svelteのこれからについて\n<ul>\n<li>最近やってることについてお知らせするだけ</li>\n<li>なにかを保証するわけではない</li>\n</ul></li>\n<li>特によく聞かれるのが、環境構築に関すること\n<ul>\n<li>なにかしらのガイドを示したいとは思ってる</li>\n<li>Svelteを使ったWeb開発という広いスコープで</li>\n</ul></li>\n<li>そして、Sapperのv1.0.0は、永遠に出ない\n<ul>\n<li>ジョークじゃないよ</li>\n</ul></li>\n<li>代わりに、これからのSvelteをデモで紹介する\n<ul>\n<li>`npm init svelte@next`でセットアップ\n<ul>\n<li>Sapperのように、`app.html`や`routes`ディレクトリなど一式が生成される</li>\n<li>`@sveltejs/kit`が基本のツールキット</li>\n<li>`svelte.config.js`で設定</li>\n</ul></li>\n<li>書き味\n<ul>\n<li>`routes`に`*.svelte`を置けば、それがURLになる</li>\n<li>`$layout.svelte`を置けば、それがレイアウトになる</li>\n</ul></li>\n<li>`snowpack`をベースにしてる\n<ul>\n<li>なので速い</li>\n<li>HMRもあるよ</li>\n</ul></li>\n<li>ビルドコマンド\n<ul>\n<li>3段階の仕事をする</li>\n<li>まずはunoptimizedなビルド</li>\n<li>つぎにoptimizedなビルド</li>\n<li>最後にアプリの生成</li>\n</ul></li>\n<li>アプリの生成とは\n<ul>\n<li>`adapter`と呼ばれるものを使う</li>\n<li>Node.jsでSSRしたいのか、静的に出力したいのかなどを選ぶ</li>\n<li>Serverless First Frameworkとして、各種FaaSやWorkerでも使えるようにする</li>\n</ul></li>\n<li>StaticなページとDynamicなページを同居できる\n<ul>\n<li>Nextとかと一緒</li>\n<li>`script type=context`で、`prerender = true`する</li>\n</ul></li>\n</ul></li>\n<li>ここから想定FAQコーナー</li>\n<li>簡単に移行できるの？\n<ul>\n<li>もちろん手間はかかるが、Sapperのそれとそこまで大きな変更はない</li>\n</ul></li>\n<li>これを使うべきなのか？\n<ul>\n<li>「べき」とかではない</li>\n<li>ただサイトでもアプリでも、広く使えるようにしたい</li>\n</ul></li>\n<li>TypeScriptは使えるのか？\n<ul>\n<li>そうするつもり</li>\n</ul></li>\n<li>Contributeできる？\n<ul>\n<li>まだ準備中</li>\n<li>フィードバックを募集してる段階</li>\n</ul></li>\n</ul>\n</div>\n<div class=\"section\">\n    <h3>感想</h3>\n    \n<div class=\"section\">\n    <h4>The Zen of Svelte</h4>\n    <p>そうそうそうなんですよ！って感じだった。</p><p>Svelteが提供できるのは、シュッと書いたらさっと動く、jQueryのそれと一緒なんよね。<br />\n書けば動く、それだけで自分のサイトが作れる、みたいなプログラミングのベースラインみたいな体験のやつ。</p><p>これは何回も言ってるけど、これからWeb開発はじめますって人こそ、最初に入門してほしい。</p><p>やればやるほどReactってほんとむずかしいなって最近思ってて、そういう意味でも、すべての人がReactをやる必要はない。</p>\n\n    <blockquote>\n        <p><a href=\"https://dev.to/swyx/svelte-for-sites-react-for-apps-2o8h\">Svelte for Sites, React for Apps - DEV</a></p>\n\n    </blockquote>\n<p>個人的には、この記事の主張にもだいたい同意。</p><p>コンポーネント指向とか単方向データフローとか、Web開発のメンタルモデルを進化させたReact（もといFacebook）の功績はたしかにあるけど、あとはそれにどこまでついていくのかいつ離れるのか、みたいなことを最近は考えてる今日このごろ・・。</p>\n\n</div>\n<div class=\"section\">\n    <h4>Svelte at the Edge</h4>\n    <p>最近はやりのCDN Edge Worker！<br />\nService Workerの活用方法、やっぱこっち方面なんかな？</p><p>使い方を模索してみたい気持ちもあるけど、いまいち運用コスパに見合わず食指が動かない・・。<br />\n（ちょうどいい社内案件などないかしら）</p><p>Service WorkerもEdge handlerも、ちょっとした用途にはいらんのよね・・。</p>\n\n</div>\n<div class=\"section\">\n    <h4>Futuristic Web Development</h4>\n    <p>さよならSapper 😲（まあなんとなくそんな予感はしてたけどｗ）</p><p>発表の主旨としては、「Svelteが、単なるUIライブラリから、一歩進んでUIキットになろうとしてる」ってこと。<br />\nそれはそれで悪くないというか、正しい方向性なのかなと発表を見てて思った。</p><p>最初のトークの感想でも書いたけど、これからのWeb開発を、これからはじめる人にぜひ触ってほしいな〜と。</p><p>次なるリリースに期待。</p>\n\n    <blockquote>\n        <p>この勢いで既存のSvelteアプリを`snowpack`化しようとしたけど、諦めたこともメモっておく。<br />\n<a href=\"https://github.com/leader22/mmss-client/pull/40\">https://github.com/leader22/mmss-client/pull/40</a></p>\n\n    </blockquote>\n\n</div>\n</div>"
}
