{
  "title": "特定のURLで動作するChromeExtensionをつくる",
  "html": "<p>Google Chromeのエクステンションのネタです。</p><p>昔書いた記事もありますが、イマイチ実践的な感じではないので改めて。</p>\n\n    <blockquote>\n        <p>参考：<a href=\"http://lealog.hateblo.jp/entry/2013/01/29/004617\" target=\"_blank\" title=\"いまさらまとめるChrome ExtensionでのJavaScript挿入 - console.lealog();\">いまさらまとめるChrome ExtensionでのJavaScript挿入 - console.lealog();</a></p>\n\n    </blockquote>\n<p>とはいえやはり、タブどうしでやりとりしたり・・はしてません。<br />\nPage Actionといわれる拡張機能の体裁を取り繕うために、何が必要かをメモしただけです。<br />\n<br />\n</p>\n\n<div class=\"section\">\n    <h3>特定のURL・ページで動作させる</h3>\n    <p>キーワードは以下。</p>\n\n<ul>\n<li>Page Action</li>\n<li>Content Script</li>\n</ul>\n</div>\n<div class=\"section\">\n    <h3>Page Action</h3>\n    <p>Chromeのエクステンションには2種類あって、</p>\n\n<ul>\n<li>Browser Action</li>\n<li>Page Action</li>\n</ul><p>どこのページでも使えるはてブのやつみたいなのはBrowser Actionです。<br />\nSPDY対応かどうかチェックするやつみたく、特定のURLでアレコレしたいものがPage Actionです。</p>\n\n    <blockquote>\n        <p>実際は「どこにアイコン出したいか」の差しかないような認識です・・。</p>\n\n    </blockquote>\n\n</div>\n<div class=\"section\">\n    <h3>Content Script</h3>\n    <p>拡張機能側から閲覧してるページに対してコードを差し込むためにはいくつか方法がありますが、<br />\nその中で一番お手軽で強力なやつがコレ。</p>\n\n</div>\n<div class=\"section\">\n    <h3>コード</h3>\n    <p>今までは逐一ココに書いてましたが、今回はGithubにあげてありますのでそちらをどうぞ。</p>\n\n    <blockquote>\n        <p>参考：<a href=\"https://github.com/leader22/chrome-page-action-scheleton\" target=\"_blank\" title=\"leader22/chrome-page-action-scheleton\">leader22/chrome-page-action-scheleton</a></p>\n\n    </blockquote>\n\n<div class=\"section\">\n    <h4>ポイント</h4>\n    <p>箇条書きで。</p>\n\n<ul>\n<li>background.jsからアクセスできるwindowは、閲覧してるページのwindowとは別モノ</li>\n<li>main.jsは、manifest.jsonでweb_accessible_resourcesの指定をする必要がある</li>\n<li>content_scriptの設定にあるrun_atはアテにしちゃいけない</li>\n<li>特定のURLかどうかは、manifestのmatchで絞るか、main.jsでLocationから判断</li>\n<li>単純にコード実行したいだけならContent Scriptだけで問題ない</li>\n<li>無名関数でくくってるけどたぶんいらない</li>\n</ul>\n</div>\n</div>"
}
