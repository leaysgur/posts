{
  "title": "0からはじめるJSX Part.7",
  "html": "<p>今回でチュートリアルの個人的メモ解説は終わりです。<br />\nあと一回、JSXについて書き溜めたいことがあるのでそれで一区切りかな？</p>\n\n<div class=\"seemore\">\n    \n<div class=\"section\">\n    <h3>Interface to Web Browsers</h3>\n    <p>ブラウザとの連携についてです。</p>\n\n    <blockquote>\n        <p>The js/web.jsx module provides the interface to web browser APIs, e.g. the window object and DOM APIs. The example below shows how to insert a text node into an HTML.</p>\n\n    </blockquote>\n\n<ul>\n<li>js/web.jsモジュールをインポートすることで、ブラウザの各APIを利用することができます。</li>\n<li>windowオブジェクトや、DOMのAPIなどです。</li>\n<li>下の例では、HTMLにテキストノードを追加しています。</li>\n</ul>\n<div class=\"section\">\n    <h4>JSX</h4>\n    <pre class=\"code lang-javascript\" data-lang=\"javascript\" data-unlink><span class=\"synStatement\">import</span> <span class=\"synConstant\">&quot;js/web.jsx&quot;</span>;\n\n<span class=\"synStatement\">class</span> _Main <span class=\"synIdentifier\">{</span>\n\n    <span class=\"synStatement\">static</span> <span class=\"synIdentifier\">function</span> say() : void <span class=\"synIdentifier\">{</span>\n        <span class=\"synIdentifier\">var</span> text = dom.<span class=\"synStatement\">window</span>.<span class=\"synStatement\">document</span>.createTextNode(<span class=\"synConstant\">&quot;Hello, world!&quot;</span>);\n        dom.getElementById(<span class=\"synConstant\">&quot;hello&quot;</span>).appendChild(text);\n    <span class=\"synIdentifier\">}</span>\n\n<span class=\"synIdentifier\">}</span>\n</pre><p>domなるオブジェクトを利用できるようになるんですね。</p>\n\n</div>\n<div class=\"section\">\n    <h4>Html</h4>\n    <pre class=\"code lang-html\" data-lang=\"html\" data-unlink> <span class=\"synComment\">&lt;!DOCTYPE html&gt;</span>\n<span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">html</span><span class=\"synIdentifier\">&gt;</span>\n  <span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">head</span><span class=\"synIdentifier\">&gt;</span>\n<span class=\"synPreProc\">    </span><span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">title</span><span class=\"synIdentifier\">&gt;</span>Hello, world!<span class=\"synIdentifier\">&lt;/</span><span class=\"synStatement\">title</span><span class=\"synIdentifier\">&gt;</span>\n<span class=\"synPreProc\">    </span><span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">script</span><span class=\"synIdentifier\"> </span><span class=\"synType\">src</span><span class=\"synIdentifier\">=</span><span class=\"synConstant\">&quot;hello.jsx.js&quot;</span><span class=\"synIdentifier\">&gt;&lt;/</span><span class=\"synStatement\">script</span><span class=\"synIdentifier\">&gt;</span>\n<span class=\"synPreProc\">    </span><span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">script</span><span class=\"synIdentifier\">&gt;</span>\n<span class=\"synSpecial\">        </span><span class=\"synStatement\">window</span><span class=\"synSpecial\">.addEventListener</span>(<span class=\"synConstant\">&quot;load&quot;</span><span class=\"synSpecial\">, </span><span class=\"synIdentifier\">function</span>(<span class=\"synSpecial\">e</span>)<span class=\"synSpecial\"> </span><span class=\"synIdentifier\">{</span>\n<span class=\"synSpecial\">            JSX.require</span>(<span class=\"synConstant\">&quot;hello.jsx&quot;</span>)<span class=\"synSpecial\">._Main.say$</span>()<span class=\"synSpecial\">;</span>\n<span class=\"synSpecial\">        </span><span class=\"synIdentifier\">}</span>)<span class=\"synSpecial\">;</span>\n<span class=\"synSpecial\">    </span><span class=\"synIdentifier\">&lt;/</span><span class=\"synStatement\">script</span><span class=\"synIdentifier\">&gt;</span>\n<span class=\"synPreProc\">  </span><span class=\"synIdentifier\">&lt;/</span><span class=\"synStatement\">head</span><span class=\"synIdentifier\">&gt;</span>\n  <span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">body</span><span class=\"synIdentifier\">&gt;</span>\n  <span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">p</span><span class=\"synIdentifier\"> </span><span class=\"synType\">id</span><span class=\"synIdentifier\">=</span><span class=\"synConstant\">&quot;hello&quot;</span><span class=\"synIdentifier\">&gt;&lt;/</span><span class=\"synStatement\">p</span><span class=\"synIdentifier\">&gt;</span>\n  <span class=\"synIdentifier\">&lt;/</span><span class=\"synStatement\">body</span><span class=\"synIdentifier\">&gt;</span>\n<span class=\"synIdentifier\">&lt;/</span><span class=\"synStatement\">html</span><span class=\"synIdentifier\">&gt;</span>\n</pre>\n    <blockquote>\n        <p>Once you compile hello.jsx by the following command, then you can access the HTML and you will see it saying \"Hello, world!.\"</p>\n\n    </blockquote>\n<p>下のコマンドでコンパイルすると、hello.jsx.jsが出力され利用できるようになります。</p>\n<pre class=\"code lang-linux\" data-lang=\"linux\" data-unlink> $ bin/jsx --output hello.jsx.js hello.jsx\n</pre><p>もうここまで見てくると、なんてことないですね。←ちょっと嬉しい</p>\n\n</div>\n<div class=\"section\">\n    <h4>ブラウザとの連携のために</h4>\n    <pre class=\"code lang-javascript\" data-lang=\"javascript\" data-unlink><span class=\"synStatement\">window</span>.addEventListener(<span class=\"synConstant\">&quot;load&quot;</span>, <span class=\"synIdentifier\">function</span>(e) <span class=\"synIdentifier\">{</span>\n\n  <span class=\"synComment\">// メインの実行部</span>\n  JSX.require(<span class=\"synConstant\">&quot;hello.jsx&quot;</span>)._Main.say$();\n\n<span class=\"synIdentifier\">}</span>);\n</pre><p>この１行さえ抑えれば良いっぽい。<br />\n別にonloadじゃなくてclickでもなんでも良さそう。</p><p>まぁ、ブラウザ向け既存JavaScriptのパイを奪うものではないような気もしますが。</p>\n\n</div>\n</div>\n<div class=\"section\">\n    <h3>Further Learning</h3>\n    \n    <blockquote>\n        <p>To learn more, please refer to the examples on this web site, or look into the example directory of the distribution.</p>\n\n    </blockquote>\n<p>チュートリアルを終えたあとは、Exampleのページか、配布されているソースのexampleディレクトリ以下を見ていくことで、もっと理解を深めることができます。</p>\n\n    <blockquote>\n        <p>チュートリアル回はこれで終わりです。<br />\n後は個人的まとめを１つ書こうと思ってるので、そちらもよろしければ！</p>\n\n    </blockquote>\n\n</div>\n</div>"
}
