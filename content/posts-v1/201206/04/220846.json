{
  "title": "0からはじめるJSX Part.3",
  "html": "<p>続けてやっていきます。<br />\n(平日に突入すると更新頻度がガクンと落ちるはずなのは内緒)</p><p>今回も<a href=\"http://jsx.github.com/tutorial.html\" target=\"_blank\" title=\"JSX Tutorial\">JSX Tutorial</a>の続きを。<br />\n初学者の天敵、クラスさまのご登場です。</p>\n\n    <blockquote>\n        <p>毎度毎度で恐縮ですが、私はプログラマではありません。<br />\nJavaを一口かじったことはありますが、オブジェクト指向言語ってのもJSXで初めて勉強するようなものです。</p><p>というわけで、独自の解釈・誤った解釈が多々含まれるであろうことを明記しつつ、自分用の勉強メモですと再三書いているわけです。</p>\n\n    </blockquote>\n\n<div class=\"seemore\">\n    \n<div class=\"section\">\n    <h3>Pointクラス</h3>\n    <pre class=\"code lang-javascript\" data-lang=\"javascript\" data-unlink><span class=\"synStatement\">class</span> Point <span class=\"synIdentifier\">{</span>\n  <span class=\"synIdentifier\">var</span> x = 0;\n  <span class=\"synIdentifier\">var</span> y = 0;\n\n  <span class=\"synIdentifier\">function</span> constructor() <span class=\"synIdentifier\">{</span>\n  <span class=\"synIdentifier\">}</span>\n\n  <span class=\"synIdentifier\">function</span> constructor(x : <span class=\"synType\">number</span>, y : <span class=\"synType\">number</span>) <span class=\"synIdentifier\">{</span>\n    <span class=\"synIdentifier\">this</span>.set(x, y);\n  <span class=\"synIdentifier\">}</span>\n\n  <span class=\"synIdentifier\">function</span> constructor(other : Point) <span class=\"synIdentifier\">{</span>\n    <span class=\"synIdentifier\">this</span>.set(other);\n  <span class=\"synIdentifier\">}</span>\n\n  <span class=\"synIdentifier\">function</span> set(x : <span class=\"synType\">number</span>, y : <span class=\"synType\">number</span>) : void <span class=\"synIdentifier\">{</span>\n    <span class=\"synIdentifier\">this</span>.x = x;\n    <span class=\"synIdentifier\">this</span>.y = y;\n  <span class=\"synIdentifier\">}</span>\n\n  <span class=\"synIdentifier\">function</span> set(other : Point) : void <span class=\"synIdentifier\">{</span>\n    <span class=\"synIdentifier\">this</span>.x = other.x;\n    <span class=\"synIdentifier\">this</span>.y = other.y;\n  <span class=\"synIdentifier\">}</span>\n<span class=\"synIdentifier\">}</span>\n</pre>\n<ul>\n<li>Pointという名前のクラスで、</li>\n<li>xとyという2つの変数と</li>\n<li>コンストラクタ：初期化するときのメソッドが3通りと</li>\n<li>メソッドが2通りある。</li>\n</ul>\n    <blockquote>\n        <p>JSXに限らず、オブジェクト指向言語は基本的にクラスを宣言して、その中で全部やっちゃう・・というのが普通らしい。<br />\nというか最近のプログラミング言語ってそういうもんらしい。<br />\nで、クラスもそのまま使えるわけではなくて、基本的にはnewする必要がある・・と。<br />\nこれがまたわからんかったんよ昔！（今もちゃんとわかってない</p>\n\n    </blockquote>\n\n<div class=\"section\">\n    <h4>注釈</h4>\n    \n    <blockquote>\n        <p>As you can see, member variables of Point, var x and var y, are declared without types, but their types are deducted from their initial values to be number.</p><p>You might be surprised at multiple definition of member functions: one takes no parameters and the others take parameters. They are overloaded by their types of parameters. When you construct the class with new Point(), the first constructor, which takes no parameters, is called. The second with two parameters will be called on new Point(2, 3) and the third with one parameter will be called as a copy constructor. Other forms of construction, e.g. new Point(42) or new Point(\"foo\", \"bar\") will cause compilation errors of mismatching signatures. The Point#set() functions are also overloaded and the compiler know how to call the correct one.</p>\n\n    </blockquote>\n<p>見てわかる通り、Pointクラスのメンバー変数であるxとyは、型の指定なしに宣言されています。<br />\nそして、もし最初に代入したのが数値なら、その変数の型は数値型になるようになっています。</p><p>メンバー関数の定義の仕方に驚いたかもしれません。パラメータ：引数を受け取るやつと、そうでないやつがありますね。これらは引数の種類によって上書きされるようになっています。引数なしでnew Point()とした場合は、最初のパラメータなしのやつが使われます。new Point(2, 3)とした場合は、後者のやつが使われます。コピーコンストラクタと呼ばれる3番目のやつは、パラメータが1つの場合に使われます。<br />\nnew Point(42) new Point(\"foo\", \"bar\")のような使われ方をした場合は、どれにも当てはまらないのでエラーになります。set関数についても同じです。</p>\n\n    <blockquote>\n        <p>メンバー○○ってなんやねん！って思ったら、とあるクラス内で宣言されてる変数やら関数やらのことでした・・。<br />\nまんまか！</p>\n\n    </blockquote>\n<p>こういう冗長な書き方には意味があって、このクラスの使われ方をきっちり定義しよう！っていう感じなんやね。</p>\n\n</div>\n</div>\n<div class=\"section\">\n    <h3>newしてみる</h3>\n    <p><a href=\"http://jsx.github.com/try/#\" target=\"_blank\" title=\"JSX - Statically-typed, object-oritented programming lauguage\">JSX - Try</a>のページで、以下のソースを記入すれば動くように書いてみた。</p>\n<pre class=\"code lang-javascript\" data-lang=\"javascript\" data-unlink><span class=\"synStatement\">class</span> Point <span class=\"synIdentifier\">{</span>\n  <span class=\"synIdentifier\">var</span> x = 0;\n  <span class=\"synIdentifier\">var</span> y = 0;\n\n  <span class=\"synIdentifier\">function</span> constructor() <span class=\"synIdentifier\">{</span>\n  <span class=\"synIdentifier\">}</span>\n\n  <span class=\"synIdentifier\">function</span> constructor(x : <span class=\"synType\">number</span>, y : <span class=\"synType\">number</span>) <span class=\"synIdentifier\">{</span>\n      <span class=\"synIdentifier\">this</span>.set(x, y);\n  <span class=\"synIdentifier\">}</span>\n\n  <span class=\"synIdentifier\">function</span> constructor(other : Point) <span class=\"synIdentifier\">{</span>\n      <span class=\"synIdentifier\">this</span>.set(other);\n  <span class=\"synIdentifier\">}</span>\n\n  <span class=\"synIdentifier\">function</span> set(x : <span class=\"synType\">number</span>, y : <span class=\"synType\">number</span>) : void <span class=\"synIdentifier\">{</span>\n      <span class=\"synIdentifier\">this</span>.x = x;\n      <span class=\"synIdentifier\">this</span>.y = y;\n  <span class=\"synIdentifier\">}</span>\n\n  <span class=\"synIdentifier\">function</span> set(other : Point) : void <span class=\"synIdentifier\">{</span>\n      <span class=\"synIdentifier\">this</span>.x = other.x;\n      <span class=\"synIdentifier\">this</span>.y = other.y;\n  <span class=\"synIdentifier\">}</span>\n<span class=\"synIdentifier\">}</span>\n\n<span class=\"synStatement\">class</span> Test <span class=\"synIdentifier\">{</span>\n  <span class=\"synStatement\">static</span> <span class=\"synIdentifier\">function</span> run() : void <span class=\"synIdentifier\">{</span>\n    <span class=\"synIdentifier\">var</span> pt = <span class=\"synStatement\">new</span> Point(10, 20);\n    log pt.x; <span class=\"synComment\">// 10</span>\n    \n    pt.set(50, 100);\n    log pt.x; <span class=\"synComment\">// 50</span>\n    \n    <span class=\"synIdentifier\">var</span> pt2 = <span class=\"synStatement\">new</span> Point(pt);\n    log pt2.x, pt2.y; <span class=\"synComment\">// 50 100</span>\n  <span class=\"synIdentifier\">}</span>\n<span class=\"synIdentifier\">}</span>\n</pre><p>ふむ、なるほど。</p><p>Pointクラスを使いたい場合は、</p>\n\n<ul>\n<li>引数なしで呼び出す。</li>\n<li>2つの数値を引数として与えて呼び出す。</li>\n<li>他で作ったPointクラスを1つ与えて呼び出す。</li>\n</ul><p>set関数を使うときは、</p>\n\n<ul>\n<li>2つの数値を引数として与えて使う。</li>\n<li>他で作ったPointクラスを1つ与えて使う。</li>\n</ul><p>それ以外は全部エラー！<br />\n確かにここまでやれば、予期せぬ不具合とか想定外の動きとかはなくなる気がする。</p>\n\n</div>\n<div class=\"section\">\n    <h3>本日の愚痴コーナー</h3>\n    <p>最初はJSXの謳い文句であるfaster, safer, and easierってのを見て、「簡単なんや！」と心踊らせたんですけどね、全然簡単じゃないですorz<br />\nそんでもしかして、既に経験のあるプログラマーの方々が簡単に学べるって意味のeasierか！って思ったら、</p>\n\n    <blockquote>\n        <p>....<br />\nso it is easy to for JavaScript programmers to start using JSX.</p>\n\n    </blockquote>\n<p>ほんとに書いてあった！ｗ</p><p>初学者は大人しく<a href=\"http://www.tohoho-web.com/java/index.htm\" target=\"_blank\" title=\"とほほのJava入門\">とほほのJava入門</a>から見直すか・・。</p><p>次回はデータ型。</p>\n\n</div>\n</div>"
}
