{
  "title": "Node.jsのConnectなら、ローカルサーバーを一瞬で",
  "html": "<p>ちょっとコレは感動的やったので！<br />\nご存知の方はご存知なのでしょうが、このモジュール。</p>\n\n    <blockquote>\n        <p>参考：<a href=\"http://www.senchalabs.org/connect/\" target=\"_blank\" title=\"Connect - High quality middleware for node.js\">Connect - High quality middleware for node.js</a></p>\n\n    </blockquote>\n\n<div class=\"section\">\n    <h3>インストール</h3>\n    <p>Node.jsとnpmは使える想定で。</p><p>言わずもがなnpmでインストール。</p>\n<pre class=\"code\" data-unlink>cd /path/to/my/project\nmkdir sample &amp;&amp; cd sample\n\nnpm install connect</pre><p>したらば、以下のファイルを用意します。</p>\n<pre class=\"code\" data-unlink><span class=\"synIdentifier\">var</span> cnct = require(<span class=\"synConstant\">'connect'</span>);\ncnct().use(cnct.<span class=\"synStatement\">static</span>(<span class=\"synConstant\">'/path/to/my/project/sample'</span>)).listen(3000);\n</pre>\n<ul>\n<li>Connectをrequire</li>\n<li>どこをドキュメントルートにするか</li>\n<li>何番ポートか</li>\n</ul><p>たったこれだけ。<br />\nファイル名は server.js とでもしておくとして、</p>\n<pre class=\"code\" data-unlink>node server.js</pre><p>適当にindex.htmlと名付けたファイルを置いてからの、 <a href=\"http://localhost:3000\">http://localhost:3000</a> でアクセス・・・できたー！<br />\nまさかの2行でカレントディレクトリがWebサーバーに・・・。<br />\n感動した！</p>\n\n</div>\n<div class=\"section\">\n    <h3>お気に入り設定</h3>\n    <pre class=\"code\" data-unlink><span class=\"synIdentifier\">var</span> cnct = require(<span class=\"synConstant\">'connect'</span>);\n<span class=\"synIdentifier\">var</span> port = 3000;\ncnct()\n  .use(cnct.logger(<span class=\"synConstant\">'dev'</span>))\n  .use(cnct.<span class=\"synStatement\">static</span>(global.process.env.PWD))\n  .listen(port);\nconsole.log(<span class=\"synConstant\">'Server has started at http://localhost:'</span> + port);\n</pre><p>node server.js するディレクトリがプロジェクトの作業ディレクトリであることが多いので。<br />\n<br />\n</p>\n\n    <blockquote>\n        <p>今回はこれだけのために使ってますが、このモジュール実はとても高機能なんです・・。<br />\n気になったのがあれば、またいずれ記事にします！</p>\n\n    </blockquote>\n\n</div>"
}
