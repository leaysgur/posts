{
  "title": "CloudflareのPlatform Weekの発表まとめ",
  "html": "\n    <blockquote>\n        <p><a href=\"https://blog.cloudflare.com/tag/platform-week/\">Platform Week - The Cloudflare Blog</a></p>\n\n    </blockquote>\n<p>この中から、個人的に気になったものたちをさっくりまとめ。つまりWorkersとかPagesとかに関連するものが多く、それ以外のStreamingとかWeb3系はスルーしてる。<br />\n<br />\n</p>\n\n<div class=\"section\">\n    <h3>The next chapter for Cloudflare Workers: open source</h3>\n    \n    <blockquote>\n        <p><a href=\"https://blog.cloudflare.com/workers-open-source-announcement/\">The next chapter for Cloudflare Workers: open source</a></p>\n\n    </blockquote>\n\n<ul>\n<li>CFWのランタイムのソースコードをオープンソースにするっていう発表</li>\n<li>現時点でコードが見れるわけではなさそう</li>\n<li>これで`miniflare`と実環境の境界もなくせるねって言ってた\n<ul>\n<li><a href=\"https://twitter.com/_mrbbot/status/1523652262115278848\">https://twitter.com/_mrbbot/status/1523652262115278848</a></li>\n<li>がんばれ〜</li>\n</ul></li>\n</ul><p>コードとして公開されたとして、誰しもが簡単に扱えるものではないよなーとも思いつつ、各エッジランタイムの差分が減るといいですね。</p>\n\n</div>\n<div class=\"section\">\n    <h3>10 things I love about Wrangler v2.0</h3>\n    \n    <blockquote>\n        <p><a href=\"https://blog.cloudflare.com/10-things-i-love-about-wrangler/\">10 things I love about Wrangler v2.0</a></p>\n\n    </blockquote>\n\n<ul>\n<li>CLI`wrangler`のメンテナより、`v2`のリリース記念記事</li>\n<li>いくつかピックアップすると、</li>\n<li>4. `miniflare`が内包されたよ\n<ul>\n<li>`--local`フラグだけでローカルで開発できるよ</li>\n<li>まぁそのために`wrangler`をRustからTypeScriptで書き直したようなもんやし</li>\n</ul></li>\n<li>8. バンドラ同梱になったよ\n<ul>\n<li>設定いらずにポンできるよ路線</li>\n<li>内部的には`esbuild`を使ってる</li>\n<li>JSX、TS、WASM、HTMLがフォーマットとして自動で使える</li>\n<li><a href=\"https://developers.cloudflare.com/workers/wrangler/module-system/\">https://developers.cloudflare.com/workers/wrangler/module-system/</a></li>\n<li>独自のビルドコマンドも引き続き使えるのでご安心を</li>\n</ul></li>\n</ul><p>For CFWとしての`wrangler`は元からそんなに不満なかったので、いまだβなFor CFPとしての`wrangler pages`コマンドもこの勢いでいい感じにしてほし〜。</p>\n\n</div>\n<div class=\"section\">\n    <h3>A Community Group for Web-interoperable JavaScript runtimes</h3>\n    \n    <blockquote>\n        <p><a href=\"https://blog.cloudflare.com/introducing-the-wintercg/\">A Community Group for Web-interoperable JavaScript runtimes</a></p>\n\n    </blockquote>\n\n<ul>\n<li>ブラウザ以外のJS実行環境の互換性を向上させよう委員会発足のお知らせ\n<ul>\n<li>Node, Deno, CFW, ...etc</li>\n</ul></li>\n<li>通称、Winter CGとのこと</li>\n<li>まずは最小公倍数としてのAPIを取り決めるところから\n<ul>\n<li><a href=\"https://github.com/wintercg/proposal-common-minimum-api\">https://github.com/wintercg/proposal-common-minimum-api</a></li>\n</ul></li>\n</ul><p>さすが御大やで！</p>\n\n</div>\n<div class=\"section\">\n    <h3>Introducing Direct Uploads for Cloudflare Pages</h3>\n    \n    <blockquote>\n        <p><a href=\"https://blog.cloudflare.com/cloudflare-pages-direct-uploads/\">Introducing Direct Uploads for Cloudflare Pages</a></p>\n\n    </blockquote>\n\n<ul>\n<li>Cloudflare Pagesが、Gitリポジトリ連携以外でも使えるようになったよ</li>\n<li>`wrangler page publish`コマンドでもできるし\n<ul>\n<li>これによって、CIからデプロイしたりもできる</li>\n</ul></li>\n<li>GUIからドラッグドロップもできる\n<ul>\n<li>Netlifyみたいに手軽に使える</li>\n</ul></li>\n</ul><p>これはいい改善やと思うし、Netlify並に敷居下がった感あるやね。</p>\n\n</div>\n<div class=\"section\">\n    <h3>A new era for Cloudflare Pages builds</h3>\n    \n    <blockquote>\n        <p><a href=\"https://blog.cloudflare.com/cloudflare-pages-build-improvements/\">A new era for Cloudflare Pages builds</a></p>\n\n    </blockquote>\n\n<ul>\n<li>Cloudflare Pagesのビルドプロセスがアップデートされたよ</li>\n<li>ビルド自体の高速化\n<ul>\n<li>今まではびっくりするくらい遅かった（数ページの静的サイトが3分とか）けど、それが3秒くらいに</li>\n</ul></li>\n<li>ログがストリームで見れるようになった\n<ul>\n<li>ビルド失敗して全部終わったことになってからエラー表示ではなく</li>\n</ul></li>\n<li>プレビュー対象のブランチが指定できるようになった</li>\n<li>CI skipができるように\n<ul>\n<li>以下のいずれかを含めたメッセージでコミットすればよい</li>\n<li>`[CISkip], [CI-Skip], [Skip CI], [Skip-CI] or [CF-Pages-Skip]`</li>\n</ul></li>\n<li>これからの改善予定\n<ul>\n<li>インクリメンタルビルド（ご要望にお応えして）</li>\n<li>実行環境のアップデート（2021のままでNodeとかも古いので）</li>\n<li>エラーメッセージの詳細化</li>\n</ul></li>\n</ul><p>自分で有効化しなくても速くなっていい感じ。個人的にはスキップできるのがうれしい。</p>\n\n</div>\n<div class=\"section\">\n    <h3>Workers visibility: announcing Logpush for Worker’s Trace Events</h3>\n    \n    <blockquote>\n        <p><a href=\"https://blog.cloudflare.com/logpush-for-workers/\">Workers visibility: announcing Logpush for Worker&rsquo;s Trace Events</a></p>\n\n    </blockquote>\n\n<ul>\n<li>CFWの実行ログやメトリクスが、Logpushに連携されるように</li>\n<li>Logpushは、Cloudflareのサービスのひとつ\n<ul>\n<li><a href=\"https://developers.cloudflare.com/logs/about/\">https://developers.cloudflare.com/logs/about/</a></li>\n</ul></li>\n</ul><p>ただし、エンタープライズプランからしか使えな〜い・・。</p>\n\n</div>\n<div class=\"section\">\n    <h3>Service Bindings are generally available, with efficient pricing</h3>\n    \n    <blockquote>\n        <p><a href=\"https://blog.cloudflare.com/service-bindings-ga/\">Service Bindings are generally available, with efficient pricing</a></p>\n\n    </blockquote>\n\n<ul>\n<li>Worker同士をシームレスに連携できるアレが待望のGA</li>\n<li>通称、Service Bindings</li>\n<li>サービスとして登録したWorker間の通信はノーコスト</li>\n</ul>\n    <blockquote>\n        <p>While the interface among Service bindings is HTTP, the networking is not. Unlike the typical microservice architecture, where services communicate over a network and can suffer from latency or interruption, Service bindings are a zero-cost abstraction. When one Worker invokes another, there is no network delay and the request is executed immediately.<br />\n<a href=\"https://developers.cloudflare.com/workers/platform/bindings/about-service-bindings\">https://developers.cloudflare.com/workers/platform/bindings/about-service-bindings</a></p>\n\n    </blockquote>\n<p>ついに待望のやつが来てくれました！</p>\n\n</div>\n<div class=\"section\">\n    <h3>Announcing Workers for Platforms: making every application on the Internet more programmable</h3>\n    \n    <blockquote>\n        <p><a href=\"https://blog.cloudflare.com/workers-for-platforms/\">Announcing Workers for Platforms: making every application on the Internet more programmable</a></p>\n\n    </blockquote>\n\n<ul>\n<li>地味に説明が難しいやつ</li>\n<li>CFWのテックリード氏の説明がわかりやすいのでそれを\n<ul>\n<li><a href=\"https://twitter.com/KentonVarda/status/1524033314448891905\">https://twitter.com/KentonVarda/status/1524033314448891905</a></li>\n<li>SaaS事業者の抱える課題として、自分たちのAPI（webhookとか）を使ってほしい気持ちがある</li>\n<li>ただしそのためには、利用者がコードの実行環境を用意して、APIキーを管理して・・みたいな手間が必要</li>\n<li>これが地味に面倒で、敷居が高い（いやほんどに面倒よ）</li>\n<li>そこで、CFWと連携（間借りみたいな）すれば、コードだけアップロードすればいいようにできるよ</li>\n<li>もちろん利用者はCFWのあれこれを意識する必要はない</li>\n</ul></li>\n<li>利用してみたい事業者はフォームから登録してね\n<ul>\n<li><a href=\"https://www.cloudflare.com/lp/workers-for-platforms\">https://www.cloudflare.com/lp/workers-for-platforms</a></li>\n</ul></li>\n</ul><p>どんどん便利な世の中になってほしいですね。</p>\n\n</div>\n<div class=\"section\">\n    <h3>Durable Objects Alarms — a wake-up call for your applications</h3>\n    \n    <blockquote>\n        <p><a href=\"https://blog.cloudflare.com/durable-objects-alarms/\">Durable Objects Alarms &mdash; a wake-up call for your applications</a></p>\n\n    </blockquote>\n\n<ul>\n<li>DOにいわゆるアラーム機能が追加された</li>\n<li>DO内で`setAlarm(scheduledTime)`すると、その時がきたら`alarm()`ハンドラが呼ばれるようになる</li>\n<li>これによって、Workerから呼びにいかなくても、DOが抱える値にアクセスできるように\n<ul>\n<li>DOの値を定期的に永続化するとか、集計してどっかに送るとか、レポートするとか</li>\n</ul></li>\n<li>Workerでは3つしか設定できないCron Triggersの代わりにもなるとのこと</li>\n</ul>\n    <blockquote>\n        <p>The alarm() handler has guaranteed at-least-once execution and will be retried upon failure using exponential backoff, starting at 2 seconds delay for up to 6 retries.<br />\n<a href=\"https://developers.cloudflare.com/workers/runtime-apis/durable-objects/#alarm-handler-method\">https://developers.cloudflare.com/workers/runtime-apis/durable-objects/#alarm-handler-method</a></p>\n\n    </blockquote>\n<p>やはりこれを期にDO再入門するかな〜。</p>\n\n</div>\n<div class=\"section\">\n    <h3>Introducing Cache Reserve: massively extending Cloudflare’s cache</h3>\n    \n    <blockquote>\n        <p><a href=\"https://blog.cloudflare.com/introducing-cache-reserve/\">Introducing Cache Reserve: massively extending Cloudflare&rsquo;s cache</a></p>\n\n    </blockquote>\n\n<ul>\n<li>Cache Reserveっていう機能が追加されて、ダッシュボードでONにするだけで使えるように</li>\n<li>オリジンとCDNエッジキャッシュの\"間\"に新たに配置されるキャッシュレイヤー\n<ul>\n<li>もともとあるCDNのキャッシュは、各エッジロケーションごとでLRUになってる</li>\n<li>なので人気のあるサイトのコンテンツは高キャッシュヒットになるけど、そうでないものはevictされがち</li>\n<li>そうなるともちろんオリジンにアクセスが来るので、CDN使ってる意義とは・・ってなる</li>\n</ul></li>\n<li>そこで、自分でCache Reserveを置くことでそれを回避できる\n<ul>\n<li>もちろんエッジにキャッシュがあればそれが返る</li>\n</ul></li>\n<li>Cache ReserveはR2の上に実装されてる</li>\n</ul><p>なるほどそういう需要もあるのだなあ。</p>\n\n</div>\n<div class=\"section\">\n    <h3>A New Hope for Object Storage: R2 enters open beta</h3>\n    \n    <blockquote>\n        <p><a href=\"https://blog.cloudflare.com/r2-open-beta/\">A New Hope for Object Storage: R2 enters open beta</a></p>\n\n    </blockquote>\n\n<ul>\n<li>S3互換のR2がついにオープンβに</li>\n<li>Workerからも呼べるし、署名付きURLによってRESTでも呼べる</li>\n<li>S3互換なので、世のS3向けクライアント実装でもURLを変えれば動く</li>\n<li>β中の制約としては、\n<ul>\n<li>バケットごとに、1,000 GET/秒、100 PUT/秒の呼び出し制限</li>\n<li>合計で約5TB、ファイルあたり5GBまでのサイズ制限</li>\n</ul></li>\n<li>無料で使えるのは、\n<ul>\n<li>10GB/月</li>\n<li>1,000,000/月（put, list, write, delete）</li>\n<li>10,000,000/月（read）</li>\n</ul></li>\n<li>今後の改善予定\n<ul>\n<li>TTLのサポート（自動で消せる）</li>\n<li>パブリックにできる設定</li>\n<li>etc...</li>\n</ul></li>\n</ul><p>いやほんと全方位的やね・・・。</p>\n\n</div>\n<div class=\"section\">\n    <h3>Announcing D1: our first SQL database</h3>\n    \n    <blockquote>\n        <p><a href=\"https://blog.cloudflare.com/introducing-d1/\">Announcing D1: our first SQL database</a></p>\n\n    </blockquote>\n\n<ul>\n<li>SQLite for Workers!\n<ul>\n<li>R2ときてD2ではなく、D1</li>\n</ul></li>\n<li>`wrangler d1 execute`でローカルからSQLも流せる</li>\n<li>WorkerからはBindingsとして登録して使う\n<ul>\n<li>`MY_DB.get(\"SELECT * FROM products\")`みたいに書く</li>\n<li>`MY_DB.exec([\"UPDATE users SET ...\"])`みたいにバッチも</li>\n</ul></li>\n<li>DBの本体としては1つだが、同期したREAD用のレプリカに対してアクセスするイメージらしい\n<ul>\n<li>これ、つまりKVと一緒でラグありってこと・・？</li>\n<li>かと思えば、本体インスタンス横のWorkerに処理を委譲できる的なことも書いてあるし・・？</li>\n</ul></li>\n<li>定期的にR2へスナップショットをバックアップしてくれる</li>\n<li>1クリックで復元もできるので、本番データをローカルでデバッグするとかも容易い</li>\n<li>βの招待は6月にも</li>\n</ul><p>噂はあれど、整合性まわりの詳細がわからんとなんともなので、続報に期待。</p>\n\n</div>\n<div class=\"section\">\n    <h3>Introducing Workers Analytics Engine</h3>\n    \n    <blockquote>\n        <p><a href=\"https://blog.cloudflare.com/workers-analytics-engine/\">Introducing Workers Analytics Engine</a></p>\n\n    </blockquote>\n\n<ul>\n<li>Workersにメトリクスを取る機能が追加</li>\n<li>Bindingsとして`analytics_engine`を登録して使う</li>\n<li>それをWorkerから呼んで書き込み\n<ul>\n<li>`MY_AE.writeDataPoint({ labels: [\"Seattle\", \"USA\", \"pro_sensor_9000\"], metrics: [25, 0.5] });`</li>\n<li>`labels: string<span data-unlink>`で`metrics: number</span>`とのこと</li>\n<li>ちなみにこれはNon-blockingなので`waitUntil()`しなくていいらしい</li>\n</ul></li>\n<li>データの取得はSQLのAPIかGraphQLのAPIで\n<ul>\n<li>ダッシュボードでもいい感じに見れるようにしていく</li>\n</ul></li>\n<li>パフォーマンスが特徴で\n<ul>\n<li>データ反映までのレイテンシーが数秒</li>\n<li>クエリの実行も速い</li>\n</ul></li>\n</ul><p>クローズドβではあるけど、これは気になるやつ。</p>\n\n</div>\n<div class=\"section\">\n    <h3>Introducing Pages Plugins</h3>\n    \n    <blockquote>\n        <p><a href=\"https://blog.cloudflare.com/cloudflare-pages-plugins/\">Introducing Pages Plugins</a></p>\n\n    </blockquote>\n\n<ul>\n<li>CFPのFunctionsで使える公式ミドルウェアを公開したよって話\n<ul>\n<li>新しい機能が追加されたわけではない</li>\n<li>お作法に則って書かれたミドルウェアを公開すれば、誰でも簡単に使えるっていうだけ</li>\n<li>`npm`からインストールして自分で設定する</li>\n</ul></li>\n<li>現時点での公式プラグインがいくつか\n<ul>\n<li><a href=\"https://github.com/cloudflare/pages-plugins\">https://github.com/cloudflare/pages-plugins</a></li>\n</ul></li>\n</ul><p>別に自分で書けば今までもできたことを、あえてこういう形で提供するように表現するあたり、Pagesの利用者層を拡大しようとしてる感じかな？</p>\n\n</div>\n<div class=\"section\">\n    <h3>Introducing Custom Domains for Workers</h3>\n    \n    <blockquote>\n        <p><a href=\"https://blog.cloudflare.com/custom-domains-for-workers/\">Introducing Custom Domains for Workers</a></p>\n\n    </blockquote>\n\n<ul>\n<li>CFWに独自ドメインが貼れるようになったよ\n<ul>\n<li><a href=\"https://developers.cloudflare.com/workers/platform/routing/custom-domains/\">https://developers.cloudflare.com/workers/platform/routing/custom-domains/</a></li>\n</ul></li>\n<li>`/*`みたいなRouteを指定せずとも、まとめて受けられるように</li>\n<li>ドメインを気にして元リクエストを引き回してたりしてたのも不要に</li>\n<li>WorkerからWorkerを呼ぶのも問題なくできるように\n<ul>\n<li>Service Bindingsを使わずとも</li>\n</ul></li>\n</ul><p>オープンβ！</p>\n\n</div>\n<div class=\"section\">\n    <h3>Send email using Workers with MailChannels</h3>\n    \n    <blockquote>\n        <p><a href=\"https://blog.cloudflare.com/sending-email-from-workers-with-mailchannels/\">Send email using Workers with MailChannels</a></p>\n\n    </blockquote>\n\n<ul>\n<li>MailChannels社とパートナーシップを結んで、CFWからEメール送信できるようにしたよ\n<ul>\n<li>`<a href=\"https://api.mailchannels.net/tx/v1/send\">https://api.mailchannels.net/tx/v1/send</a>`にJSONをPOSTするだけ</li>\n<li>雑に送信APIを叩いても、SPAMと判断されたなら送信しないのでお気軽に使える</li>\n<li>しかもすべて無料</li>\n</ul></li>\n<li>制約があるとすれば、CloudflareのIPからしか送信できないようにしてあること\n<ul>\n<li>つまり実際のWorkerでしか送信できない</li>\n<li>ローカルからは送信できない</li>\n</ul></li>\n<li>より簡単に使うために、先日発表したPagesのプラグインにもラインナップしてあるよ</li>\n</ul><p>地味に嬉しいやつ。ただ、送信ログとかバウンスとかそういうの見たい場合はどうすればいいんやろう・・・？</p>\n\n</div>\n<div class=\"section\">\n    <h3>Part 1: Rethinking Cache Purge, Fast and Scalable Global Cache Invalidation</h3>\n    \n    <blockquote>\n        <p><a href=\"https://blog.cloudflare.com/part1-coreless-purge/\">Part 1: Rethinking Cache Purge, Fast and Scalable Global Cache Invalidation</a></p>\n\n    </blockquote>\n\n<ul>\n<li>CDNのキャッシュ管理とそのパージについて</li>\n<li>現状の構成では、中央のDCがコアとなり、世界中のDCに対してパージの司令を送るイメージ</li>\n<li>この構成を変更して、もっと速く効率よくキャッシュをパージできるようにしていきたい\n<ul>\n<li>という進捗を定期的にお知らせしていくよ</li>\n</ul></li>\n<li>その名も、Corelessパージ\n<ul>\n<li>中央のDCがないということ</li>\n<li>代わりに、WorkerとDOを使って、それぞれのDCでコアの代わりをする</li>\n</ul></li>\n</ul><p>自分たちのプロダクトを使い倒す姿勢、すごい良いなって思った。</p>\n\n</div>\n<div class=\"section\">\n    <h3>Network performance update: Platform Week</h3>\n    \n    <blockquote>\n        <p><a href=\"https://blog.cloudflare.com/network-performance-update-platform-week/\">Network performance update: Platform Week</a></p>\n\n    </blockquote>\n\n<ul>\n<li>なんたらWeek恒例のパフォーマンス計測の記事\n<ul>\n<li>前回よりも計測対象のネットワークを増やしたり、指標のアップデートなどを行った</li>\n</ul></li>\n<li>Catchpointを使用</li>\n<li>3000ネットワークでTCPコネクションの速さを計測\n<ul>\n<li>インドとロシアはGoogle</li>\n<li>欧米とアフリカではCloudflare</li>\n<li>中国はCloudfront</li>\n</ul></li>\n<li>エッジランタイムのパフォーマンスを計測\n<ul>\n<li>対戦相手は例によってFastly Compute@Edge</li>\n<li>基本的にCloudflareが速い</li>\n</ul></li>\n</ul><p>またFastlyからのアンサーソングが出るんかな？</p>\n\n</div>\n<div class=\"section\">\n    <h3>まとめ</h3>\n    <p>俺得だった発表TOP5はこんな感じ。</p>\n\n<ul>\n<li>Announcing D1: our first SQL database</li>\n<li>Service Bindings are generally available, with efficient pricing</li>\n<li>Introducing Workers Analytics Engine</li>\n<li>A new era for Cloudflare Pages builds</li>\n<li>A New Hope for Object Storage: R2 enters open beta</li>\n</ul><p>引き続きやっていき。</p>\n\n</div>"
}
