{
  "title": "やっぱりサーバーサイドレンダリングなんかしなくていいやという気持ち",
  "html": "<p>個人の意見 aka ポエムです。<br />\n界隈的には今さら感がすごいけど。</p><p>そんな今さらポエった事情としては、</p>\n\n<ul>\n<li>とある案件でSPAをReactで作りつつサーバーサイドレンダリング（以下SSR）をすることになるかも\n<ul>\n<li>SPAじゃないページもまとめてReactでSSRすることになるかも</li>\n</ul></li>\n<li>ただ個人的にはSPA+SSR不要論者\n<ul>\n<li>サーバーサイドのテンプレートとしてのReactも冗長なだけやろ派</li>\n</ul></li>\n<li>でも仕事なのでしゃーない（お客様がそう申されるなら・・</li>\n<li>なのでやるからには再考察してみて、前向きにやれる要素を見つけたい！</li>\n<li>けどどんだけ考えてもやっぱり意義が見つけられなーい( ´Д｀)=3</li>\n</ul><p>という感じで、SSR自体の是非はまあどうでもよくて、ただ個人的に「しなくていい」と思ってる気持ちをまとめたものです。<br />\n技術に是も非もないです。大事なのはどう使うかなのです。</p><p>ちなみにやってみた結果・・とかいう話ではなく、やってないけどやらなくてよさそうだなーという話です。</p>\n\n    <blockquote>\n        <p>20170724: なぜか今さら盛り上がってたのであれこれ追記</p>\n\n    </blockquote>\n\n<div class=\"section\">\n    <h3>なぜしなくていいと思ってるか</h3>\n    <p>コストの割に、メリットが薄い。コスパが悪すぎる。と思うから。</p><p>狭い観測範囲で見てる限りでも、</p>\n\n<ul>\n<li>ちょっと大変とかではなくめっちゃ大変</li>\n<li>そのくせ100点の満足度にはなってない</li>\n</ul><p>なのでここにコストをかけるくらいなら、他にやることあるでしょーという。</p><p>政治的な理由だとか、コストをかけるヒト・カネが余ってるとか、人に言えない理由があるとかならどうぞ頑張ってください。</p><p>なので絶対するな！っていうのではなく、やることやってやりたいならやればいいし、無理してやらないといけないことでもないと思ってるよ、という話です。</p>\n\n</div>\n<div class=\"section\">\n    <h3>SSRする理由といわれているポイントに対する個人的な解</h3>\n    <p>○○だからSSRが必要！SSRすれば○○できる！みたいなやつに対して、SSRしなくても○○できると思ってるやつ。</p>\n\n<div class=\"section\">\n    <h4>SEO対策</h4>\n    <p>サーバーでUA見て、botに返す用ページを作るのはどうか。<br />\njsもcssもない、本質的なコンテンツのみをDBから取ってきて埋めたプレーンなHTML。</p><p>普通のブラウザには、いつもどおりのコンテンツを返す。</p><p>てかコレSEOって言葉がすごい誤解を招くと思ってて、要はOGPの`meta`タグの対応ができればそれでいいんでしょ・・？<br />\nそこだけサーバーサイドで差し替えて、後はいつも通りでもOKなのでは・・？</p><p>こうすりゃOGPももちろん問題ない。<br />\nSSRで頑張って`body`配下のアレコレをやる意義とは・・と思ってます。</p><p>なんかそのうちGoogleBotが解釈したページと、一般的なブラウザが解釈したページが異なる場合ペナルティ！とかにならないかぎり。<br />\nならんやろうけど。あとこのSNS全盛の時代にGoogleのインデックスがーとかどうなんだろうという気持ちもある。</p><p>面倒な点としては、GoogleだけじゃなくてTwitterもFacebookもLINEも・・ってな感じでBotホワイトリストの管理がちょっとアレなくらい。<br />\nけど、SSRを頑張る工数に比べたら微々たるもの・・。</p><p>もしくは、単なるLPを前段におくのではダメなの？、という。</p><p>~~~~ ここから追記 ~~~~</p><p>このBot用に違うページを返す手法は、クローキングといってGoogle的にはよしとしないそうな。</p>\n\n    <blockquote>\n        <p><a href=\"https://support.google.com/webmasters/answer/66355\">Cloaking - Search Console Help</a></p>\n\n    </blockquote>\n<p>ならまあ`body`配下は何もしない、`meta`だけ差し替えるでいいんじゃないですかねー。（それすらダメなのかはこの記事からは読み取れなかった</p>\n\n</div>\n<div class=\"section\">\n    <h4>初期表示が速くなる</h4>\n    <p>ボトルネックがネットワークコストなのであれば、</p>\n\n    <blockquote>\n        <p><a href=\"http://qiita.com/shibukawa/items/184d3101946ec4fa98c1\">&#x30B5;&#x30FC;&#x30D0;&#x30FC;&#x30B5;&#x30A4;&#x30C9;&#x30EC;&#x30F3;&#x30C0;&#x30EA;&#x30F3;&#x30B0;&#x4E0D;&#x8981;&#x8AD6; - Qiita</a></p>\n\n    </blockquote>\n<p>この記事に書いてあるようにデータを埋めてネットワークリクエストを短縮するだけで、ほとんどのケースで十分な気がする。</p><p>てかこんな手法、iOS3くらいの時代から存在するテクニックな気がしてて、このパターンでも足りない・・もっと速く・・！ってなった人がSSRに行くのは納得です。<br />\nでもそれすらやらずにいきなりSSR！って話も多い気がしてて、飛躍しすぎでは・・という。</p><p>GraphQLだとかBFFだとかいう話もそうで（表示の高速化を主旨とするなら）、それより先に、マスターデータの最新を吐いて埋めるとかCDNに載せるとか、やれることやった上での選択であって欲しい。<br />\nそもそもネットワーク以前にサーバーサイドでデータの取得に時間がかかる問題は、SSRでもこの手法でも同じはず。<br />\nまーパフォーマンスチューニングを最適化と捉えるか、実装の延長で捉えるかの違いな気もするけど・・。</p><p>ちなみにこの場合とSSRとの差異は、「埋まってるデータを取り出して画面を構築するステップの有無」になるけど、そこってそんな時間かかるか・・？というのが個人的な主張です。</p><p>てかそもそも、AMPとかSPAじゃないページをシェアさせるとか、方法は他にもあるはずで、なぜ全部を詰め込んで頑張ろうとするのかが個人的にはわからない・・。</p>\n\n</div>\n<div class=\"section\">\n    <h4>古いブラウザ・低性能マシンにやさしい</h4>\n    <p>具体的にどのラインなのかが不明なので、いまだにAndroid2系とか謎タブレットとかそういうのを対象にしてるとする。</p><p>そもそもそんなレベルの古いブラウザ・低性能マシンに優しくしたいなら、それこそSPAなんかやめたらいい（ReactもやめてBabelもやめてね）のに・・。<br />\nそんでどーせSSRした後のことはケアしないんやろうし。そんなうわべだけの優しさなんか欲しくないのよ！</p><p>てかサービスにおいてそいつらのシェアはどれくらいなんだ、本当にターゲットに入れるのかという話が先。<br />\nこのご時世に本当に考慮しないといけない低スペックって具体的にどんなもんなんやろう・・。</p><p>という気持ちになるのであまり気にしなくていいと思ってる。</p>\n\n</div>\n</div>\n<div class=\"section\">\n    <h3>コスパのコスとは</h3>\n    \n<div class=\"section\">\n    <h4>Nodeでのサーバーサイド・BFF的なやつが必須になる</h4>\n    <p>これがとにかく大変な認識です。</p><p>そういうSaaSとか使うにしても、それだけ依存が増えることがコスト。</p><p>だからここに問題を感じない環境にいるなら、別にコストではないのかなーと。</p>\n\n</div>\n<div class=\"section\">\n    <h4>Isomorphicなコード</h4>\n    <p>手書きで実装するのは大変なので、3rdのライブラリとかOSSとか使いますよね？<br />\nそれらが読み込むだけで爆死するケースもあるので・・そこがコスト。</p><p>videoとかcanvasとかやってると割とよくあるので個人的な印象に寄ってる感はある。</p>\n\n</div>\n<div class=\"section\">\n    <h4>`renderToString()`相当のパフォーマンス</h4>\n    <p>とりあえず遅いらしいけど、コンポーネント数（幅）の問題なのか、ネスト（深さ）が問題なのか、具体的な問題点がいまいちわかってない。<br />\nどっかに情報ないかしら・・？<br />\n逆にいうとこれくらいまでなら、パフォーマンスは気にしないでOKという線引ができるのかなーとか。</p><p>頑張って実装するまでもなく、見積もりする方法ってないんだろーか。</p><p>そういや`renderToStream()`がマージされてたけど、アレにしたらどうなるとかいうデータもあったら知りたいなー。<br />\n<br />\n</p>\n\n</div>\n</div>\n<div class=\"section\">\n    <h3>おまけ: ATFレンダリングが個人的に・・・</h3>\n    <p>SSR勢の現実解と言われているらしいAboveTheFold（最初に見えるとこだけ先に、それ以外はスクロールされたら）レンダリング。</p>\n\n<ul>\n<li>SSRでページがさくっと表示されるのは良い</li>\n<li>ただしさくっと表示された = FullyLoadedとヒトは認識するのですぐスクロールして情報を探しちゃう</li>\n<li>何もない空間を見つめさせられること数秒</li>\n</ul><p>とかいう体験をよくするんですが、あれ微妙じゃないですか・・？<br />\nで、加えてむっちゃ頑張って作ったんやろうにこんなことになってしまって・・という気持ちになるので好きじゃない。</p>\n\n</div>\n<div class=\"section\">\n    <h3>おわりに</h3>\n    <p>というわけで、他にもやりようはあるのに、わざわざコスト高な選択肢を選ぶ理由がわからない。<br />\nそして界隈がそれを至上命題みたいな扱いにしてる理由がわからない。</p><p>個人的には、他にもやりようはあるしそれで十分やと思うし、やっぱりサーバーサイドレンダリングなんか頑張らなくて良い気がするなー、という気持ち。</p>\n\n</div>"
}
