{
  "title": "W3C TPAC 2019 に行ってきたメモ Part.1",
  "html": "<p>きたで福岡！</p><p>TPACとは、The W3C Technical Plenary and Advisory Committee Meetingsのことで、Webの標準化団体であるW3Cの年会みたいなやつです。</p><p>こういうのに参加できるのは大企業の強いとこですよね・・。</p><p>今回のTPACは月曜から金曜まであったんですが、その中の木曜と金曜の2日だけ参加しました。</p>\n\n    <blockquote>\n        <p><a href=\"https://www.w3.org/2019/09/TPAC/schedule.html#Thursday\">TPAC 2019: Detailed schedule</a></p>\n\n    </blockquote>\n<p>Part.1は木曜の記事で、終日「Web Real-Time Communications WG」のオブザーバーをやってました。<br />\n<br />\n</p>\n\n<div class=\"section\">\n    <h4>Links</h4>\n    \n<ul>\n<li>アジェンダ\n<ul>\n<li><a href=\"https://docs.google.com/document/d/1oh_-WEwsOKvnu_BrMLOH8nT4gpafFlom1t1XlvOmEm4/edit?ts=5d2e0197\">https://docs.google.com/document/d/1oh_-WEwsOKvnu_BrMLOH8nT4gpafFlom1t1XlvOmEm4/edit?ts=5d2e0197</a></li>\n</ul></li>\n<li>スライド\n<ul>\n<li><a href=\"https://docs.google.com/presentation/d/1Xprz0ElNTUWRDdX6kyp11cZ4ItTvUFUmzoXsKZdXxuU/edit\">https://docs.google.com/presentation/d/1Xprz0ElNTUWRDdX6kyp11cZ4ItTvUFUmzoXsKZdXxuU/edit</a></li>\n</ul></li>\n</ul><p>基本的にはコレを見れば事足りるんですが、まあ現場で聞いて取ったメモ記事ってことでひとつ。<br />\nスライドも1日目だけで148Pもあるんでね・・・。</p>\n\n</div>\n<div class=\"section\">\n    <h4>State of the WebRTC WG</h4>\n    \n<ul>\n<li>WebRTC 1.0をfinishしたい\n<ul>\n<li>it just works</li>\n<li>全てのブラウザ・ネットワーク</li>\n</ul></li>\n<li>ローレベルのAPI\n<ul>\n<li>非圧縮な状態のメディアをさわりたい需要など</li>\n</ul></li>\n<li>APIまわり\n<ul>\n<li>ORTC需要はちょっと落ち着いた感じ</li>\n<li>かわりにWebTransportとかでてきた</li>\n</ul></li>\n</ul>\n</div>\n<div class=\"section\">\n    <h4>各分野の概観</h4>\n    \n<div class=\"section\">\n    <h5>Media Capture and Streams</h5>\n    \n<ul>\n<li>CandidateRecommendation in Oct 17th</li>\n<li>26 open issues</li>\n<li>ブラウザの実装状況こちら\n<ul>\n<li><a href=\"https://wpt.fyi/interop/mediacapture-streams?label=stable&aligned\">https://wpt.fyi/interop/mediacapture-streams?label=stable&aligned</a></li>\n</ul></li>\n</ul>\n</div>\n<div class=\"section\">\n    <h5>WebRTC-PC</h5>\n    \n<ul>\n<li>CR</li>\n<li>32 open issues</li>\n<li>動くけど、完璧ではないよね\n<ul>\n<li><a href=\"https://wpt.fyi/interop/webrtc?label=stable&aligned\">https://wpt.fyi/interop/webrtc?label=stable&aligned</a></li>\n</ul></li>\n</ul>\n</div>\n<div class=\"section\">\n    <h5>WebRTC Identity</h5>\n    \n<ul>\n<li>（みんなどうなってましたっけそれって感じ）</li>\n<li>24 open issues\n<ul>\n<li>最新のissueが2017...</li>\n</ul></li>\n</ul>\n</div>\n<div class=\"section\">\n    <h5>仕様検討それ自体について</h5>\n    \n<ul>\n<li>HenrikとYouennがEditor\n<ul>\n<li>Jan-Ivarはアクティブに書かないとのこと</li>\n<li>AdamとTaylorとDanは前のTPACでチームを去った</li>\n</ul></li>\n<li>どうしようね</li>\n<li>W3Cはボランティア精神によって支えられてます</li>\n</ul>\n</div>\n<div class=\"section\">\n    <h5>他</h5>\n    \n<ul>\n<li>Capture from DOM\n<ul>\n<li>すごく使われてる</li>\n<li>しかしEditor不在</li>\n<li>19 open issues</li>\n</ul></li>\n<li>Recorder\n<ul>\n<li>同上</li>\n</ul></li>\n<li>Stats</li>\n</ul>\n</div>\n<div class=\"section\">\n    <h5>他（下火なやつ）</h5>\n    \n<ul>\n<li>Depth\n<ul>\n<li>活動なし</li>\n</ul></li>\n<li>Audio output devices\n<ul>\n<li>CR</li>\n<li>やや使われてる</li>\n</ul></li>\n<li>Contnet hints\n<ul>\n<li>released</li>\n</ul></li>\n<li>DSCP\n<ul>\n<li>無</li>\n</ul></li>\n<li>WebRTC-SVC\n<ul>\n<li>intent to implement(Chrome)</li>\n</ul></li>\n<li>WebRTC-ICE\n<ul>\n<li>implemented(Chrome)</li>\n</ul></li>\n</ul>\n</div>\n<div class=\"section\">\n    <h5>他（他のWGと関係が深いもの）</h5>\n    \n<ul>\n<li>WebCodec at Media WG</li>\n<li>WebTransport</li>\n<li>Timed Text</li>\n<li>Media Time Events</li>\n<li>みんなTPACで裏でWGやってるよね</li>\n</ul>\n</div>\n</div>\n<div class=\"section\">\n    <h4>ここでやりたいこと</h4>\n    \n<ul>\n<li>WebRTC 1.0のfinishが最重要課題\n<ul>\n<li>すべてのバグ・ブロッカーを解消したい</li>\n</ul></li>\n<li>次いで新しいAPIを模索したい\n<ul>\n<li>Developerからのフィードバックも</li>\n</ul></li>\n<li>次のネタはrawなメディアとか</li>\n<li>そういや去年はSimulcastな年だったね</li>\n</ul>\n</div>\n<div class=\"section\">\n    <h4>WebRTC Test Status</h4>\n    \n<ul>\n<li>ここ数年でテストの数が増えた\n<ul>\n<li>というか仕様と実装が増えた</li>\n</ul></li>\n<li>当初、4ブラウザでの互換性は残念な感じだった\n<ul>\n<li>ここ最近は復調</li>\n<li>テストを細分化したりした</li>\n</ul></li>\n<li><a href=\"https://dashboard.cosmosoftware.io/wpt/aab8bf00bd40f392c06b88f8afd03a8b03691099/\">https://dashboard.cosmosoftware.io/wpt/aab8bf00bd40f392c06b88f8afd03a8b03691099/</a>\n<ul>\n<li>KITEでやってるよ</li>\n</ul></li>\n<li>モバイルブラウザもテストしないといけない</li>\n<li>P2PだけではなくSFUも（というかSimulcastを）\n<ul>\n<li>ただSFUはみんな実装が違うので画一的にテストできない</li>\n<li>そのための仕組みをハッカソンで作ってた</li>\n<li>loopbackサーバーを用意してもらって、KITEでアクセスする</li>\n<li>Medooze, Janus, Mediasoup</li>\n</ul></li>\n<li>IETF Hackathon\n<ul>\n<li>毎回新たなベンダーを巻き込んでる</li>\n<li>次の106ではIntelを呼んだ</li>\n</ul></li>\n</ul>\n</div>\n<div class=\"section\">\n    <h4>PR for WebRTC-PC</h4>\n    \n<ul>\n<li>TPAC2018からの進捗はよい\n<ul>\n<li>31 open issues</li>\n</ul></li>\n<li>Simulcast\n<ul>\n<li>ラベルついてたやつは解消された</li>\n<li>実装としては少し問題は残ってる\n<ul>\n<li>SSRCサポートとか</li>\n<li>RID/MIDヘッダー拡張のサポートとか</li>\n</ul></li>\n</ul></li>\n<li>WebPlatformTests\n<ul>\n<li>年々Greenになってきてる</li>\n<li>Simulcastのテストがない</li>\n</ul></li>\n<li>Simulcastの互換性をどうやって担保するか\n<ul>\n<li>F2Fでディスカッションするしかなさそう</li>\n<li>次のHackathonネタかな</li>\n</ul></li>\n</ul>\n</div>\n<div class=\"section\">\n    <h4>WebRTC-PC issues</h4>\n    \n<div class=\"section\">\n    <h5>reducing audio packet rate while track is disabled</h5>\n    \n<ul>\n<li><a href=\"https://github.com/w3c/webrtc-pc/issues/1764\">https://github.com/w3c/webrtc-pc/issues/1764</a></li>\n<li>いわゆるミュート時の挙動</li>\n<li>`video`は「black frameを送る」 = 画面にそう表示するから\n<ul>\n<li>「何も送らない」だと、最後のフレームが残りっぱなしになる</li>\n</ul></li>\n<li>結論: `audio`は「何も送らない」\n<ul>\n<li>CNもDTXも関係ない</li>\n</ul></li>\n</ul>\n</div>\n<div class=\"section\">\n    <h5>Constrainable properties on remote tracks are under-specified</h5>\n    \n<ul>\n<li><a href=\"https://github.com/w3c/webrtc-pc/issues/2121\">https://github.com/w3c/webrtc-pc/issues/2121</a></li>\n<li>リモートのtrackに対するconstraintsについて</li>\n<li>現状Chromeでは`width`, `height`, `frameRate`, `aspectRatio`が指定できる\n<ul>\n<li>ただし仕様にはない</li>\n</ul></li>\n<li>`gUM()`側のそれと、WebRTC-PC側のそれが独立しちゃってる</li>\n<li>結論: 改めて`getSettings()`のconstraintsを定義しなおす\n<ul>\n<li>+ `applyConstraints()`したら`throw`するようにする</li>\n</ul></li>\n</ul>\n</div>\n<div class=\"section\">\n    <h5>RTCPeerConnectionIceErrorEvent: hostCandidate clarification</h5>\n    \n<ul>\n<li><a href=\"https://github.com/w3c/webrtc-pc/issues/2230\">https://github.com/w3c/webrtc-pc/issues/2230</a></li>\n<li>`RTCPeerConnectionIceErrorEvent`が`host`のIP/portを公開しちゃう問題</li>\n<li>これは隠されるべきでフィルタを適用すべき\n<ul>\n<li>その場合は、`0.0.0.0:0`になる</li>\n<li>型的に空文字列のほうがよいのでは</li>\n</ul></li>\n<li>mDNSのnameを使うべき？どのタイミングで？\n<ul>\n<li>使わない</li>\n</ul></li>\n<li>結論: IPとportは分ける、IPは`null`ではなく空文字列で</li>\n</ul>\n</div>\n<div class=\"section\">\n    <h5>Consider making RTCCertificate throw when serialized when _forStorage_ is false</h5>\n    \n<ul>\n<li><a href=\"https://github.com/w3c/webrtc-pc/issues/2257\">https://github.com/w3c/webrtc-pc/issues/2257</a></li>\n<li>`RTCCertificate`を`postMessage()`できちゃう問題</li>\n<li>デフォルトではできないようにする案が出てる</li>\n<li>他にもシリアライズできちゃう情報あるよね\n<ul>\n<li>DTLSのフィンガープリントとか</li>\n</ul></li>\n<li>Origin内ならよい？\n<ul>\n<li>indexedDBに保存するのとかは問題なさそう</li>\n</ul></li>\n<li>結論: 現状維持 + セキュリティの懸念がある旨をアップデート</li>\n</ul>\n</div>\n</div>\n<div class=\"section\">\n    <h4>Screen Capture issues</h4>\n    \n<div class=\"section\">\n    <h5>Define tab capture</h5>\n    \n<ul>\n<li><a href=\"https://github.com/w3c/mediacapture-screen-share/issues/60\">https://github.com/w3c/mediacapture-screen-share/issues/60</a></li>\n<li>CRブロッカーになってる最後のissue\n<ul>\n<li>本当にブロッカーってほどなのこれ？</li>\n</ul></li>\n<li>結論: 仕様の言い回しの問題であり、タブもBrowsing contextとする</li>\n<li>タブの切り替えはどうする？\n<ul>\n<li>実装の問題なのでよしなに</li>\n</ul></li>\n</ul>\n</div>\n</div>\n<div class=\"section\">\n    <h4>Media Capture issues</h4>\n    \n<div class=\"section\">\n    <h5>Specify a way for WebDriver to add/remove/setup capture devices</h5>\n    \n<ul>\n<li><a href=\"https://github.com/w3c/mediacapture-main/issues/554\">https://github.com/w3c/mediacapture-main/issues/554</a></li>\n<li>WebDriverからデバイスを設定できるようにしたい</li>\n<li>`devicechange`イベントをテストする方法がない</li>\n<li>結論: あったら嬉しいね</li>\n</ul>\n</div>\n<div class=\"section\">\n    <h5>Should a devicechange event be fired when the list of devices stays the same</h5>\n    \n<ul>\n<li><a href=\"https://github.com/w3c/mediacapture-main/issues/565\">https://github.com/w3c/mediacapture-main/issues/565</a></li>\n<li>裏でデバイスを抜き差ししたりして、`devicechange`が複数回発火するときに、さっきと同じ内容だったら</li>\n<li>結論: イベントをスキップしてよい\n<ul>\n<li>複数回発火する可能性があるケースでは、まとめて最後の1つにする</li>\n</ul></li>\n</ul>\n</div>\n<div class=\"section\">\n    <h5>ResizeMode (crop-and-scale) is underspecified</h5>\n    \n<ul>\n<li><a href=\"https://github.com/w3c/mediacapture-main/issues/584\">https://github.com/w3c/mediacapture-main/issues/584</a></li>\n<li>`crop-and-scale`とは具体的にどうすることを指すのか</li>\n<li>結論: upscaleしないしstretchもしない、黒で埋めたりもしない</li>\n</ul>\n</div>\n<div class=\"section\">\n    <h5>Is enumerateDevices list order significant?</h5>\n    \n<ul>\n<li><a href=\"https://github.com/w3c/mediacapture-main/issues/608\">https://github.com/w3c/mediacapture-main/issues/608</a></li>\n<li>`enumerateDevices()`の返り値の順番について</li>\n<li>現状のmacOSだと\n<ul>\n<li>システムデフォルトのデバイスがリストの先頭にくる</li>\n<li>`gUM({ audio: true })`でもシステムデフォルトが使われる</li>\n<li>システムデフォルトを変えたら、`devicechange`イベントを発火する</li>\n</ul></li>\n<li>これを仕様にする？</li>\n<li>結論: （時間切れにより明日）</li>\n</ul>\n</div>\n</div>\n<div class=\"section\">\n    <h4>Media Recording issues</h4>\n    \n<div class=\"section\">\n    <h5>Does recording of remote a/v streams always imply re-encoding?</h5>\n    \n<ul>\n<li><a href=\"https://github.com/w3c/mediacapture-record/issues/139\">https://github.com/w3c/mediacapture-record/issues/139</a></li>\n<li>リモートのストリームを録画するために、再エンコが必要なのか？</li>\n<li>結論: 実装でよしなにスキップできる旨を追記する</li>\n</ul>\n</div>\n<div class=\"section\">\n    <h5>Add replaceTrack method to MediaStream</h5>\n    \n<ul>\n<li><a href=\"https://github.com/w3c/mediacapture-record/issues/167\">https://github.com/w3c/mediacapture-record/issues/167</a></li>\n<li>`MeidaRecorder`に渡した`MeidaStream`を`replaceStream()`したい</li>\n<li>案1: `meidaRecorder.replaceStream(stream): Promise<void>;`\n<ul>\n<li>トラックの数と種類は同じ</li>\n</ul></li>\n<li>案2: `mediaRecorder.replaceTrack(preTrack, newTrack): Promise<void>;`</li>\n<li>結論: 案2でよさそう\n<ul>\n<li>マルチトラックのことは追って検討する</li>\n</ul></li>\n</ul>\n</div>\n</div>\n<div class=\"section\">\n    <h4>WebRTC-Stats issues</h4>\n    \n<ul>\n<li>issueの数が多すぎるのでかけあしで</li>\n<li>まず`RTCStatsReport`の実装状況\n<ul>\n<li>まちまちだね</li>\n</ul></li>\n<li>Statsで返ってくる値をどう検証するかも問題\n<ul>\n<li>Chromeでも`number`かどうかは見てても中身までは見てない</li>\n<li>Webkitでは簡単なものは見てるのでそれを共有できる</li>\n<li>WPTでも検証したいはず</li>\n</ul></li>\n<li>現状のstatsは、ユースケースを正しくモデリングできていない\n<ul>\n<li>`track`ではなく`sender`や`receiver`であるべき</li>\n<li>そしてsimulcastを考えるとそれも1つではダメ</li>\n</ul></li>\n<li>Transceiver用のstatsいる？\n<ul>\n<li>案1: 足す</li>\n<li>案2: `mid`を`sender`と`receiver`に足す</li>\n<li>足してもいいけど、`direction`, `currentDirection`は載せない</li>\n</ul></li>\n<li>でもStatsの用途ってデバッグですよね</li>\n<li>`statsended`イベントと`replaceTrack()`\n<ul>\n<li>さっきの話で`track`がなくなったら、`replaceTrack()`を検知できないよね</li>\n<li>`replaceTrack()`すると`onstatsended`が発火することになってる</li>\n<li>`onstatsended`は廃止\n<ul>\n<li>`onreplacetrack`足すのはいいけど1.0のスコープか？</li>\n<li>追って議論で</li>\n</ul></li>\n</ul></li>\n<li>`track`のStatsをobsoleteすることは決定</li>\n<li>（ここで時間切れにつき明日へ）</li>\n</ul>\n</div>\n<div class=\"section\">\n    <h4>Content-Hints issues</h4>\n    \n<div class=\"section\">\n    <h5>degradationPreference is under-specified</h5>\n    \n<ul>\n<li><a href=\"https://github.com/w3c/webrtc-pc/issues/2248\">https://github.com/w3c/webrtc-pc/issues/2248</a></li>\n<li>`degradationPreference`について</li>\n<li>WPTでもgetter/setterしかテストできてない\n<ul>\n<li>というかどうやってテストするのコレ</li>\n<li>2つvideo表示して見比べるしか無い？</li>\n</ul></li>\n</ul>\n</div>\n<div class=\"section\">\n    <h5>Reduncancy and lack of normative clarity around interaction with constraints</h5>\n    \n<ul>\n<li><a href=\"https://github.com/w3c/mst-content-hint/issues/28\">https://github.com/w3c/mst-content-hint/issues/28</a></li>\n<li>`track.contentHint`を設定したあと、それを確認したい</li>\n<li>そのためのAPIがいるのでは</li>\n</ul>\n</div>\n<div class=\"section\">\n    <h5>Permanence issues</h5>\n    \n<ul>\n<li><a href=\"https://github.com/w3c/mst-content-hint/issues/30\">https://github.com/w3c/mst-content-hint/issues/30</a></li>\n<li>Content-Hintsは未定なのが多すぎてよくないよね</li>\n<li>ちゃんと定義されたもののみがAPIとしてshipされるべき</li>\n<li>ヒント自体は有用だと思う\n<ul>\n<li>screenshareとか</li>\n</ul></li>\n<li>Content-Hintsの進退どうする\n<ul>\n<li>結論: すすめるけど、優先度は低くてよい</li>\n</ul></li>\n</ul>\n</div>\n</div>\n<div class=\"section\">\n    <h4>DSCP</h4>\n    \n<ul>\n<li><a href=\"https://w3c.github.io/webrtc-dscp-exp/\">https://w3c.github.io/webrtc-dscp-exp/</a></li>\n<li>実装もない\n<ul>\n<li>WebAppからここを設定したいユースケースとは・・？</li>\n</ul></li>\n<li>結論: もう少し要件を練るなり情報収集する方向で様子見</li>\n</ul>\n</div>\n<div class=\"section\">\n    <h4>WebRTC-ICE</h4>\n    \n<ul>\n<li>`RTCIceTransport`\n<ul>\n<li>SDPに依存しないICE単独の実装</li>\n</ul></li>\n<li>方向性はAgree\n<ul>\n<li>ただし1.0をfinishさせるのが優先だと思う</li>\n</ul></li>\n<li>現状の問題\n<ul>\n<li>単一のコネクションしか貼れない</li>\n<li>PeerConnを作れる数にも限界がある（Chromeだと500とか）</li>\n</ul></li>\n<li>解決策として</li>\n<li>ICE forking\n<ul>\n<li>`iceClient1 = iceServer.fork();`</li>\n</ul></li>\n<li>`retainLocalCandidate()`\n<ul>\n<li>確保したいcandidateだけ残す</li>\n</ul></li>\n</ul>\n<div class=\"section\">\n    <h5>コードのイメージ</h5>\n    <pre class=\"code lang-javascript\" data-lang=\"javascript\" data-unlink><span class=\"synIdentifier\">let</span> iceServer = <span class=\"synStatement\">new</span> IceTransport();\niceServer.gather(<span class=\"synIdentifier\">{</span>iceServers: ...<span class=\"synIdentifier\">}</span>);\n\n<span class=\"synIdentifier\">let</span> localCertificate = ...;\n\niceServer.onicecandidate = (evt) =&gt; <span class=\"synIdentifier\">{</span>\n <span class=\"synStatement\">if</span> (evt.candidate.type = <span class=\"synConstant\">&quot;srflx&quot;</span>) <span class=\"synIdentifier\">{</span>\n   iceServer.retainLocalCandidate(evt.candidate);\n   post(evt.candidate, iceServer.localParameters, localCertificate);\n <span class=\"synIdentifier\">}</span>\n<span class=\"synIdentifier\">}</span>;\n\niceServer.onreceivedcheck = (evt) =&gt; <span class=\"synIdentifier\">{</span>\n  <span class=\"synIdentifier\">let</span> peer = await lookup(evt.hashedRemoteUsernameFragment) <span class=\"synComment\">// &lt;-- HERE BE THE MAGIC</span>\n\n  <span class=\"synIdentifier\">let</span> iceClient = iceServer.fork();\n  iceClient.start(peer.iceParams);\n\n  <span class=\"synIdentifier\">let</span> quic = <span class=\"synStatement\">new</span> QuicTransport(iceClient, localCertificate);\n<span class=\"synIdentifier\">}</span>;\n</pre>\n</div>\n<div class=\"section\">\n    <h5>実装の難易度はどうか</h5>\n    \n<ul>\n<li>IceTransport: 簡単</li>\n<li>Dtls/SctpTransport: それなりに</li>\n<li>ICE forking: これがそれなりにきついと思われる</li>\n<li>ICE forkingしたいのは誰なの？\n<ul>\n<li>ゲーム系？</li>\n<li>p2p mesh方面ではないよね</li>\n</ul></li>\n<li>先に進むには少なくとも2つの実装が必要になるけど・・・\n<ul>\n<li>誰がやる？</li>\n<li>みなあんまりやりたそうではないね</li>\n</ul></li>\n<li>ユースケースや需要がもっと出てくればやるかも</li>\n</ul>\n</div>\n</div>\n<div class=\"section\">\n    <h4>Feature at risk by Jan-Ivar</h4>\n    \n<div class=\"section\">\n    <h5>riskのポリシー</h5>\n    \n<ul>\n<li>実装がない x devの興味もない => 消す</li>\n<li>実装がない x devの興味はある => 残す or 拡張とする</li>\n<li>実装が1つでもある => 拡張とする</li>\n</ul>\n</div>\n<div class=\"section\">\n    <h5>feature at risk</h5>\n    \n<ul>\n<li>`rollback`\n<ul>\n<li>Firefoxで実装済</li>\n<li>Chrome / Edgeで実装中</li>\n</ul></li>\n<li>`VoiceActivityDetection`\n<ul>\n<li>Chromeのみ(しかしbuggy)</li>\n<li>at risk</li>\n</ul></li>\n<li>`OauthCredential`\n<ul>\n<li>実装なし</li>\n<li>at risk</li>\n</ul></li>\n<li>`rtcp-mux-policy`: negotiate</li>\n<li>at risk</li>\n<li>`pranswer`\n<ul>\n<li>ChromeとSafariで実装済</li>\n<li>Safariはもしかしたら違うかも</li>\n</ul></li>\n<li>`priority`\n<ul>\n<li>at risk</li>\n</ul></li>\n<li>`statsended`\n<ul>\n<li>at risk → remove</li>\n</ul></li>\n<li>`getDefaultIceServers()`\n<ul>\n<li>at risk</li>\n</ul></li>\n<li>Removeされるやつおさらい\n<ul>\n<li>non-multiplexed RTP/RTCP</li>\n<li>`VoiceActivityDetection`</li>\n<li>`getSupportedAlgorithms()`</li>\n<li>`RTCRtpSendParameters.priority`</li>\n<li>`RTCRtpReceiveParameters.encodings`</li>\n<li>`RTCRtpEncodingParameters.dtx`</li>\n<li>`RTCRtpEncodingParameters.ptime & payloadType`</li>\n<li>`RTCDataChannel.priority`</li>\n<li>`RTCDataChannelInit.priority`</li>\n</ul></li>\n<li>Identityどうする\n<ul>\n<li>draftをわける\n<ul>\n<li><a href=\"https://w3c.github.io/webrtc-identity/identity.html\">https://w3c.github.io/webrtc-identity/identity.html</a></li>\n</ul></li>\n<li>WebRTC 1.0ではないかもね</li>\n</ul></li>\n</ul>\n</div>\n</div>\n<div class=\"section\">\n    <h4>Developer Feedback Session</h4>\n    \n<div class=\"section\">\n    <h5>from Mészáros</h5>\n    \n<ul>\n<li>NRENsというコミュニティ</li>\n<li>TURNを使ってる\n<ul>\n<li>そのほうがレイテンシーが低いから</li>\n</ul></li>\n<li>世界中にNWがあって、各地域にTURNを置いてる</li>\n<li>なのでマルチテナントTURNがほしい</li>\n<li>TURNの認証はLongTerm\n<ul>\n<li>それに代わるものがほしい</li>\n</ul></li>\n<li>Time Limited LTC (REST)\n<ul>\n<li>draft-uberti-behave-turn-rest-00</li>\n</ul></li>\n<li>TURN + OAuth\n<ul>\n<li>RFC7635</li>\n</ul></li>\n</ul>\n</div>\n<div class=\"section\">\n    <h5>from Sean</h5>\n    \n<ul>\n<li>pionの中の人\n<ul>\n<li><a href=\"https://github.com/pion/webrtc\">https://github.com/pion/webrtc</a></li>\n</ul></li>\n<li>ICEで指定するポートをできるかぎり限定したいケースがある\n<ul>\n<li>Chromeにはそれ用のオプション（フラグ？）がある</li>\n<li>Chromeだけではダメ</li>\n</ul></li>\n<li>`aIC()` => `sRD()`でつまづく人が多い</li>\n<li>Datachannel経由でメディアを送るパターンが増えてる(HW acceleratedできるので)\n<ul>\n<li>SRTPだとこうはいかないらしい</li>\n</ul></li>\n<li>SDP mungeせずにコーデック指定したい</li>\n</ul>\n</div>\n<div class=\"section\">\n    <h5>from Silvia</h5>\n    \n<ul>\n<li>Developer</li>\n<li>videoのためのCPUスペックへの要求がキツイ\n<ul>\n<li>RTXとかの問題？Firefoxでも？</li>\n<li>わかんない</li>\n</ul></li>\n<li>`getStats()`がPromiseベースになって困った\n<ul>\n<li>移行ガイドがあるので送るよ</li>\n</ul></li>\n</ul>\n</div>\n<div class=\"section\">\n    <h5>from 8x8 Developer</h5>\n    \n<ul>\n<li>PlanB -> UnifiedPlan移行\n<ul>\n<li>影響がでかかった割に、そんなに嬉しいことがなかった</li>\n<li>SSRC -> MID/RIDも</li>\n</ul></li>\n<li>SFUベンダーとして品質向上のためにやれることが少ない\n<ul>\n<li>videoはFECがあるけど、audioにはない</li>\n<li>PERCはハマらなかった</li>\n</ul></li>\n</ul>\n</div>\n</div>\n<div class=\"section\">\n    <h4>この日の感想</h4>\n    <p>まじめなやつ。</p>\n\n<ul>\n<li>議題にあがるIssueは普段から見てるものなので、結論に意外性はあまりなかった\n<ul>\n<li>ただGitHubで見てるアイコンの中の人や、RFC書いてる人を生で見れたのは謎の感動があった</li>\n</ul></li>\n<li>Issueからは感じ取れない空気感がわかる\n<ul>\n<li>この問題はしばらく解決しそうにないなとか</li>\n</ul></li>\n<li>WebRTCに関してはまさにjust worksよなーと思った\n<ul>\n<li>それも踏まえて、不安定な部分も知った上で、利用する選択をすべき道具である</li>\n</ul></li>\n<li>会議の場は10人くらい + オブザーバーなものの、熱心に議論するのは決まった面々なのだなあ\n<ul>\n<li>5人くらいが全世界の開発者が叩くAPIを議論してるっていろんな意味ですごいよな</li>\n</ul></li>\n</ul><p>そのほか。</p>\n\n<ul>\n<li>ヒルトンのランチブュッフェぱねぇ最高</li>\n<li>飲み物だけでなく無限にケーキとかクッキーがデプロイされてくる\n<ul>\n<li>しかも1日中！！</li>\n</ul></li>\n<li>朝が早くて0730のバスに乗るのがつらかった</li>\n<li>参加記念に湯呑がもらえるらしいｗ</li>\n</ul><p>WebRTCは普段からもよく見てるし、せっかくなので明日は他のWGに出ようと思ってます。<br />\nMediaとか、WebApplicationとか？</p>\n\n</div>"
}
